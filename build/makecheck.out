Making check in src
gmake[1]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[1]: warning: -jN forced in submake: disabling jobserver mode.
  CC       H5.lo
  CC       H5system.lo
  CC       H5trace.lo
  CC       H5A.lo
  CC       H5Abtree2.lo
  CC       H5Adense.lo
  CC       H5Adeprec.lo
  CC       H5Aint.lo
../../src/H5trace.c: In function ‘H5_trace’:
../../src/H5trace.c:157:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
     if(HDfabs(first_time.etime) < 0.0000000001F)
                                 ^
../../src/H5system.c: In function ‘HDfprintf’:
../../src/H5system.c:275:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf (stream, format_templ, x);
                         ^
../../src/H5system.c:278:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf (stream, format_templ, x);
                         ^
../../src/H5system.c:281:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf (stream, format_templ, x);
                         ^
../../src/H5system.c:284:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf (stream, format_templ, x);
                         ^
../../src/H5system.c:294:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:297:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:300:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:303:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:314:25: warning: implicit conversion from ‘float’ to ‘double’ when passing argument to function [-Wdouble-promotion]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:314:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
../../src/H5system.c:317:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:325:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:362:29: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                             n = fprintf(stream, format_templ, x);
                             ^
../../src/H5system.c:374:29: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                             fprintf(stream, format_templ, "UNDEF");
                             ^
../../src/H5system.c:382:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:390:25: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                         n = fprintf(stream, format_templ, x);
                         ^
../../src/H5system.c:396:21: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
                     n = fprintf(stream, format_templ, nout);
                     ^
../../src/H5trace.c:2310:29: warning: conversion to ‘hssize_t’ from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
                             asize[argno] = iul;
                             ^
../../src/H5trace.c:2334:29: warning: conversion to ‘hssize_t’ from ‘long long unsigned int’ may change the sign of the result [-Wsign-conversion]
                             asize[argno] = iull;
                             ^
../../src/H5Aint.c: In function ‘H5A_create’:
../../src/H5Aint.c:200:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(NULL == (attr->shared->dt = H5T_copy(type, H5T_COPY_ALL)))
     ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Aprivate.h:25,
                 from ../../src/H5Apkg.h:37,
                 from ../../src/H5Aint.c:37:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Aint.c: In function ‘H5A_write’:
../../src/H5Aint.c:532:13: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
             if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0 ||
             ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Aprivate.h:25,
                 from ../../src/H5Apkg.h:37,
                 from ../../src/H5Aint.c:37:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Aint.c: In function ‘H5A_read’:
../../src/H5Aint.c:649:25: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
                         (dst_id = H5I_register(H5I_DATATYPE, H5T_copy(mem_type, H5T_COPY_ALL), FALSE)) < 0)
                         ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Aprivate.h:25,
                 from ../../src/H5Apkg.h:37,
                 from ../../src/H5Aint.c:37:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
In file included from ../../src/H5Aint.c:36:0:
../../src/H5Aint.c: In function ‘H5A_attr_copy_file’:
../../src/H5Sprivate.h:170:71: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
 #define H5S_GET_EXTENT_NPOINTS(S)       (H5S_get_simple_extent_npoints(S))
                                                                       ^
../../src/H5private.h:1485:34: note: in definition of macro ‘ASSIGN_TO_SAME_SIZE_SIGNED_TO_UNSIGNED’
     srctype _tmp_src = (srctype)(src);  \
                                  ^
../../src/H5private.h:2083:28: note: in expansion of macro ‘ASSIGN_hssize_t_TO_size_t’
 #define H5_GLUE4(w,x,y,z)  w##x##y##z
                            ^
../../src/H5Aint.c:2020:5: note: in expansion of macro ‘H5_CHECKED_ASSIGN’
     H5_CHECKED_ASSIGN(attr_dst->shared->data_size, size_t, H5S_GET_EXTENT_NPOINTS(attr_dst->shared->ds) * H5T_get_size(attr_dst->shared->dt), hssize_t);
     ^
../../src/H5Aint.c:2020:60: note: in expansion of macro ‘H5S_GET_EXTENT_NPOINTS’
     H5_CHECKED_ASSIGN(attr_dst->shared->data_size, size_t, H5S_GET_EXTENT_NPOINTS(attr_dst->shared->ds) * H5T_get_size(attr_dst->shared->dt), hssize_t);
                                                            ^
In file included from ../../src/H5Aint.c:39:0:
../../src/H5Eprivate.h:76:40: warning: assignment makes pointer from integer without a cast [enabled by default]
 #define HGOTO_DONE(ret_val) {ret_value = ret_val; goto done;}
                                        ^
../../src/H5Eprivate.h:67:4: note: in expansion of macro ‘HGOTO_DONE’
    HGOTO_DONE(ret_val)                    \
    ^
../../src/H5Aint.c:2102:21: note: in expansion of macro ‘HGOTO_ERROR’
                     HGOTO_ERROR(H5E_ATTR, H5E_CANTALLOC, FAIL, "memory allocation failed")
                     ^
  CC       H5Atest.lo
  CC       H5AC.lo
  CC       H5B.lo
  CC       H5Bcache.lo
  CC       H5Bdbg.lo
  CC       H5B2.lo
  CC       H5B2cache.lo
  CC       H5B2dbg.lo
../../src/H5B.c: In function ‘H5B_shared_new’:
../../src/H5B.c:1749:30: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
                 shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);
                              ^
../../src/H5B.c: In function ‘H5B_shared_free’:
../../src/H5B.c:1780:18: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
     shared->nkey = H5FL_SEQ_FREE(size_t, shared->nkey);
                  ^
../../src/H5B.c: In function ‘H5B_copy’:
../../src/H5B.c:1848:22: warning: request for implicit conversion from ‘void *’ to ‘haddr_t *’ not permitted in C++ [-Wc++-compat]
      new_node->child = H5FL_SEQ_FREE(haddr_t, new_node->child);
                      ^
../../src/H5B.c: In function ‘H5B_node_dest’:
../../src/H5B.c:2095:15: warning: request for implicit conversion from ‘void *’ to ‘haddr_t *’ not permitted in C++ [-Wc++-compat]
     bt->child = H5FL_SEQ_FREE(haddr_t, bt->child);
               ^
../../src/H5B2cache.c: In function ‘H5B2__cache_internal_load’:
../../src/H5B2cache.c:551:27: warning: conversion to ‘uint16_t’ from ‘unsigned int’ may alter its value [-Wconversion]
     internal->nrec = udata->nrec;
                           ^
../../src/H5B2cache.c:552:28: warning: conversion to ‘uint16_t’ from ‘unsigned int’ may alter its value [-Wconversion]
     internal->depth = udata->depth;
                            ^
In file included from ../../src/H5B2private.h:32:0,
                 from ../../src/H5B2pkg.h:30,
                 from ../../src/H5B2cache.c:36:
../../src/H5Fprivate.h:149:20: warning: conversion to ‘uint16_t’ from ‘int’ may alter its value [-Wconversion]
       n = (n << 8) | *(--p);            \
                    ^
../../src/H5Fprivate.h:181:41: note: in expansion of macro ‘DECODE_VAR’
 #  define UINT64DECODE_VAR(p, n, l)     DECODE_VAR(p, n, l)
                                         ^
../../src/H5B2cache.c:571:9: note: in expansion of macro ‘UINT64DECODE_VAR’
         UINT64DECODE_VAR(p, int_node_ptr->node_nrec, udata->hdr->max_nrec_size);
         ^
../../src/H5B2cache.c: In function ‘H5B2__cache_leaf_load’:
../../src/H5B2cache.c:889:23: warning: conversion to ‘uint16_t’ from ‘unsigned int’ may alter its value [-Wconversion]
     leaf->nrec = udata->nrec;
                       ^
  CC       H5B2hdr.lo
  CC       H5B2int.lo
  CC       H5B2stat.lo
  CC       H5B2test.lo
  CC       H5C.lo
  CC       H5D.lo
  CC       H5Dbtree.lo
  CC       H5Dchunk.lo
../../src/H5B2hdr.c: In function ‘H5B2_hdr_free’:
../../src/H5B2hdr.c:523:22: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         hdr->nat_off = H5FL_SEQ_FREE(size_t, hdr->nat_off);
                      ^
../../src/H5B2hdr.c:540:24: warning: request for implicit conversion from ‘void *’ to ‘struct H5B2_node_info_t *’ not permitted in C++ [-Wc++-compat]
         hdr->node_info = H5FL_SEQ_FREE(H5B2_node_info_t, hdr->node_info);
                        ^
../../src/H5B2test.c: In function ‘H5B2_get_node_depth_test’:
../../src/H5B2test.c:534:22: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
     ret_value = ninfo.depth;
                      ^
../../src/H5C.c:283:1: warning: ‘H5C_epoch_marker_notify’ defined but not used [-Wunused-function]
 H5C_epoch_marker_notify(H5C_notify_action_t H5_ATTR_UNUSED action,
 ^
  CC       H5Dcompact.lo
  CC       H5Dcontig.lo
  CC       H5Ddbg.lo
../../src/H5Dchunk.c: In function ‘H5D__chunk_io_init’:
../../src/H5Dchunk.c:956:60: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     if((file_space_normalized = H5S_hyper_normalize_offset((H5S_t *)file_space, old_offset)) < 0)
                                                            ^
../../src/H5Dchunk.c:1194:41: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(H5S_hyper_denormalize_offset((H5S_t *)file_space, old_offset) < 0)
                                         ^
../../src/H5Dchunk.c: In function ‘H5D__create_chunk_map_single’:
../../src/H5Dchunk.c:1414:26: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     chunk_info->mspace = (H5S_t *)fm->mem_space;
                          ^
../../src/H5Dchunk.c: In function ‘H5D__create_chunk_file_map_hyper’:
../../src/H5Dchunk.c:1481:46: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(TRUE == H5S_hyper_intersect_block((H5S_t *)fm->file_space, coords, end)) {
                                              ^
../../src/H5Dchunk.c: In function ‘H5D__create_chunk_mem_map_hyper’:
../../src/H5Dchunk.c:1648:30: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         chunk_info->mspace = (H5S_t *)fm->mem_space;
                              ^
../../src/H5Dchunk.c: In function ‘H5D__chunk_allocate’:
../../src/H5Dchunk.c:3563:17: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
                 (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,
                 ^
../../src/H5Dchunk.c:3563:63: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
                 (void *)pline, (H5MM_free_t)H5D__chunk_xfree, (void *)pline,
                                                               ^
../../src/H5Dchunk.c: In function ‘H5D__chunk_prune_fill’:
../../src/H5Dchunk.c:4007:20: warning: size of ‘chunk_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t chunk_iter;          /* Memory selection iteration info */
                    ^
../../src/H5Dchunk.c: In function ‘H5D__chunk_copy_cb’:
../../src/H5Dchunk.c:4848:35: warning: request for implicit conversion from ‘void *’ to ‘struct H5D_shared_t *’ not permitted in C++ [-Wc++-compat]
         H5D_shared_t *shared_fo = udata->cpy_info->shared_fo;
                                   ^
../../src/H5Dchunk.c: In function ‘H5D__chunk_copy’:
../../src/H5Dchunk.c:5095:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if(NULL == (dt_mem = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
         ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dchunk.c:55:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dchunk.c:5103:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if(NULL == (dt_dst = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
         ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dchunk.c:55:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dchunk.c: In function ‘H5D__chunk_dest’:
../../src/H5Dchunk.c:5460:20: warning: request for implicit conversion from ‘void *’ to ‘struct H5D_rdcc_ent_t **’ not permitted in C++ [-Wc++-compat]
         rdcc->slot = H5FL_SEQ_FREE(H5D_rdcc_ent_ptr_t, rdcc->slot);
                    ^
../../src/H5Dcompact.c: In function ‘H5D__compact_copy’:
../../src/H5Dcompact.c:410:34: warning: request for implicit conversion from ‘void *’ to ‘struct H5D_shared_t *’ not permitted in C++ [-Wc++-compat]
     H5D_shared_t    *shared_fo = cpy_info->shared_fo;   /* Pointer to the shared struct for dataset object */
                                  ^
  CC       H5Ddeprec.lo
../../src/H5Dcontig.c: In function ‘H5D__contig_copy’:
../../src/H5Dcontig.c:1301:34: warning: request for implicit conversion from ‘void *’ to ‘struct H5D_shared_t *’ not permitted in C++ [-Wc++-compat]
     H5D_shared_t    *shared_fo = cpy_info->shared_fo;  /* Pointer to the shared struct for dataset object */
                                  ^
  CC       H5Defl.lo
  CC       H5Dfill.lo
  CC       H5Dint.lo
  CC       H5Dio.lo
  CC       H5Dlayout.lo
In file included from ../../src/H5Cprivate.h:35:0,
                 from ../../src/H5ACprivate.h:33,
                 from ../../src/H5Oprivate.h:36,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Defl.c:30:
../../src/H5Defl.c: In function ‘H5D__efl_read’:
../../src/H5Defl.c:291:49: warning: conversion to ‘long long unsigned int’ from ‘off_t’ may change the sign of the result [-Wsign-conversion]
         if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))
                                                 ^
../../src/H5Fprivate.h:344:16: note: in definition of macro ‘H5F_OVERFLOW_HSIZET2OFFT’
     ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))
                ^
In file included from ../../src/H5Defl.c:29:0:
../../src/H5Defl.c:297:46: warning: conversion to ‘long long unsigned int’ from ‘off_t’ may change the sign of the result [-Wsign-conversion]
         if(HDlseek(fd, (HDoff_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)
                                              ^
../../src/H5private.h:975:37: note: in definition of macro ‘HDlseek’
     #define HDlseek(F,O,W)  lseek(F,O,W)
                                     ^
In file included from ../../src/H5Cprivate.h:35:0,
                 from ../../src/H5ACprivate.h:33,
                 from ../../src/H5Oprivate.h:36,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Defl.c:30:
../../src/H5Defl.c: In function ‘H5D__efl_write’:
../../src/H5Defl.c:383:49: warning: conversion to ‘long long unsigned int’ from ‘off_t’ may change the sign of the result [-Wsign-conversion]
         if(H5F_OVERFLOW_HSIZET2OFFT(efl->slot[u].offset + skip))
                                                 ^
../../src/H5Fprivate.h:344:16: note: in definition of macro ‘H5F_OVERFLOW_HSIZET2OFFT’
     ((hsize_t)(X)>=(hsize_t)((hsize_t)1<<(8*sizeof(off_t)-1)))
                ^
In file included from ../../src/H5Defl.c:29:0:
../../src/H5Defl.c:393:46: warning: conversion to ‘long long unsigned int’ from ‘off_t’ may change the sign of the result [-Wsign-conversion]
         if(HDlseek(fd, (HDoff_t)(efl->slot[u].offset + skip), SEEK_SET) < 0)
                                              ^
../../src/H5private.h:975:37: note: in definition of macro ‘HDlseek’
     #define HDlseek(F,O,W)  lseek(F,O,W)
                                     ^
  CC       H5Dmpio.lo
../../src/H5Dint.c: In function ‘H5D__init_type’:
../../src/H5Dint.c:636:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if((dset->shared->type = H5T_copy(type, H5T_COPY_ALL)) == NULL)
         ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dint.c:28:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dint.c:664:30: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         dset->shared->type = (H5T_t *)type; /* (Cast away const OK - QAK) */
                              ^
  CC       H5Doh.lo
../../src/H5Dfill.c: In function ‘H5D__fill’:
../../src/H5Dfill.c:232:13: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
             if((src_id = H5I_register(H5I_DATATYPE, H5T_copy(fill_type, H5T_COPY_ALL), FALSE)) < 0)
             ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dfill.c:35:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dfill.c:235:13: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
             if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(buf_type, H5T_COPY_ALL), FALSE)) < 0)
             ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dfill.c:35:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dfill.c:246:28: warning: size of ‘mem_iter’ is 2232 bytes [-Wlarger-than=]
             H5S_sel_iter_t mem_iter;            /* Memory selection iteration info */
                            ^
../../src/H5Dfill.c: In function ‘H5D__fill_init’:
../../src/H5Dfill.c:405:13: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
             if(NULL == (fb_info->mem_type = H5T_copy(dset_type, H5T_COPY_REOPEN)))
             ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Dpkg.h:30,
                 from ../../src/H5Dfill.c:35:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Dio.c: In function ‘H5Dread’:
../../src/H5Dio.c:198:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         for(u = 0; u < ndims; u++) {
                      ^
../../src/H5Dio.c: In function ‘H5D__pre_write’:
../../src/H5Dio.c:381:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
         for(u = 0; u < ndims; u++) {
                      ^
../../src/H5Dio.c: In function ‘H5D__read’:
../../src/H5Dio.c:428:21: warning: size of ‘fm’ is 2864 bytes [-Wlarger-than=]
     H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */
                     ^
../../src/H5Dio.c:475:5: warning: implicit declaration of function ‘H5T_patch_vlen_file’ [-Wimplicit-function-declaration]
     H5T_patch_vlen_file(dataset->shared->type, dataset->oloc.file);
     ^
../../src/H5Dio.c:475:5: warning: nested extern declaration of ‘H5T_patch_vlen_file’ [-Wnested-externs]
../../src/H5Dio.c:532:66: warning: to be safe all intermediate pointers in cast from ‘void **’ to ‘const void **’ must be ‘const’ qualified [-Wcast-qual]
                 (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.dst_type_size) < 0)
                                                                  ^
../../src/H5Dio.c: In function ‘H5D__write’:
../../src/H5Dio.c:647:21: warning: size of ‘fm’ is 2864 bytes [-Wlarger-than=]
     H5D_chunk_map_t fm;                 /* Chunk file<->memory mapping */
                     ^
../../src/H5Dio.c:789:66: warning: to be safe all intermediate pointers in cast from ‘void **’ to ‘const void **’ must be ‘const’ qualified [-Wcast-qual]
                 (unsigned)H5S_GET_EXTENT_NDIMS(file_space), buf, (const void **)&adj_buf, type_info.src_type_size) < 0)
                                                                  ^
  CC       H5Dscatgath.lo
  CC       H5Dselect.lo
  CC       H5Dtest.lo
  CC       H5E.lo
  CC       H5Edeprec.lo
  CC       H5F.lo
../../src/H5Dselect.c: In function ‘H5D__select_io’:
../../src/H5Dselect.c:87:20: warning: size of ‘mem_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t mem_iter;    /* Memory selection iteration info */
                    ^
../../src/H5Dselect.c:89:20: warning: size of ‘file_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t file_iter;   /* File selection iteration info */
                    ^
../../src/H5Dselect.c:91:13: warning: size of ‘_mem_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _mem_off[H5D_IO_VECTOR_SIZE];      /* Array to store sequence offsets in memory */
             ^
../../src/H5Dselect.c:93:13: warning: size of ‘_file_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _file_off[H5D_IO_VECTOR_SIZE];     /* Array to store sequence offsets in the file */
             ^
../../src/H5Dselect.c:95:12: warning: size of ‘_mem_len’ is 8192 bytes [-Wlarger-than=]
     size_t _mem_len[H5D_IO_VECTOR_SIZE];       /* Array to store sequence lengths in memory */
            ^
../../src/H5Dselect.c:97:12: warning: size of ‘_file_len’ is 8192 bytes [-Wlarger-than=]
     size_t _file_len[H5D_IO_VECTOR_SIZE];      /* Array to store sequence lengths in the file */
            ^
../../src/H5Dselect.c:240:18: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         file_len = H5FL_SEQ_FREE(size_t, file_len);
                  ^
../../src/H5Dselect.c:242:18: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         file_off = H5FL_SEQ_FREE(hsize_t, file_off);
                  ^
../../src/H5Dselect.c:244:17: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         mem_len = H5FL_SEQ_FREE(size_t, mem_len);
                 ^
../../src/H5Dselect.c:246:17: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         mem_off = H5FL_SEQ_FREE(hsize_t, mem_off);
                 ^
../../src/H5Dscatgath.c: In function ‘H5D__scatter_file’:
../../src/H5Dscatgath.c:98:13: warning: size of ‘_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _off[H5D_IO_VECTOR_SIZE];             /* Array to store sequence offsets */
             ^
../../src/H5Dscatgath.c:103:12: warning: size of ‘_len’ is 8192 bytes [-Wlarger-than=]
     size_t _len[H5D_IO_VECTOR_SIZE];              /* Array to store sequence lengths */
            ^
../../src/H5Dscatgath.c:162:13: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         len = H5FL_SEQ_FREE(size_t, len);
             ^
../../src/H5Dscatgath.c:164:13: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         off = H5FL_SEQ_FREE(hsize_t, off);
             ^
../../src/H5Dscatgath.c: In function ‘H5D__gather_file’:
../../src/H5Dscatgath.c:197:13: warning: size of ‘_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _off[H5D_IO_VECTOR_SIZE];   /* Array to store sequence offsets */
             ^
../../src/H5Dscatgath.c:202:12: warning: size of ‘_len’ is 8192 bytes [-Wlarger-than=]
     size_t _len[H5D_IO_VECTOR_SIZE];    /* Array to store sequence lengths */
            ^
../../src/H5Dscatgath.c:263:13: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         len = H5FL_SEQ_FREE(size_t, len);
             ^
../../src/H5Dscatgath.c:265:13: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         off = H5FL_SEQ_FREE(hsize_t, off);
             ^
../../src/H5Dscatgath.c: In function ‘H5D__scatter_mem’:
../../src/H5Dscatgath.c:293:13: warning: size of ‘_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
             ^
../../src/H5Dscatgath.c:295:12: warning: size of ‘_len’ is 8192 bytes [-Wlarger-than=]
     size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
            ^
../../src/H5Dscatgath.c:348:13: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         len = H5FL_SEQ_FREE(size_t, len);
             ^
../../src/H5Dscatgath.c:350:13: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         off = H5FL_SEQ_FREE(hsize_t, off);
             ^
../../src/H5Dscatgath.c: In function ‘H5D__gather_mem’:
../../src/H5Dscatgath.c:380:13: warning: size of ‘_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t _off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
             ^
../../src/H5Dscatgath.c:382:12: warning: size of ‘_len’ is 8192 bytes [-Wlarger-than=]
     size_t _len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
            ^
../../src/H5Dscatgath.c:435:13: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         len = H5FL_SEQ_FREE(size_t, len);
             ^
../../src/H5Dscatgath.c:437:13: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         off = H5FL_SEQ_FREE(hsize_t, off);
             ^
../../src/H5Dscatgath.c: In function ‘H5D__scatgath_read’:
../../src/H5Dscatgath.c:461:20: warning: size of ‘mem_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/
                    ^
../../src/H5Dscatgath.c:463:20: warning: size of ‘bkg_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t bkg_iter;            /*background iteration info*/
                    ^
../../src/H5Dscatgath.c:465:20: warning: size of ‘file_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t file_iter;           /*file selection iteration info*/
                    ^
../../src/H5Dselect.c:84:1: warning: stack usage is 37424 bytes [-Wstack-usage=]
 H5D__select_io(const H5D_io_info_t *io_info, size_t elmt_size,
 ^
../../src/H5Dscatgath.c: In function ‘H5D__scatgath_write’:
../../src/H5Dscatgath.c:593:20: warning: size of ‘mem_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t mem_iter;            /*memory selection iteration info*/
                    ^
../../src/H5Dscatgath.c:595:20: warning: size of ‘bkg_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t bkg_iter;            /*background iteration info*/
                    ^
../../src/H5Dscatgath.c:597:20: warning: size of ‘file_iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t file_iter;           /*file selection iteration info*/
                    ^
../../src/H5Dselect.c:249:1: warning: the frame size of 37384 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 } /* end H5D__select_io() */
 ^
../../src/H5Dscatgath.c: In function ‘H5D__compound_opt_read’:
../../src/H5Dscatgath.c:745:16: warning: size of ‘_off’ is 8192 bytes [-Wlarger-than=]
     hsize_t    _off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */
                ^
../../src/H5Dscatgath.c:747:16: warning: size of ‘_len’ is 8192 bytes [-Wlarger-than=]
     size_t     _len[H5D_IO_VECTOR_SIZE];        /* Array to store sequence lengths */
                ^
../../src/H5Dscatgath.c:829:13: warning: request for implicit conversion from ‘void *’ to ‘size_t *’ not permitted in C++ [-Wc++-compat]
         len = H5FL_SEQ_FREE(size_t, len);
             ^
../../src/H5Dscatgath.c:831:13: warning: request for implicit conversion from ‘void *’ to ‘hsize_t *’ not permitted in C++ [-Wc++-compat]
         off = H5FL_SEQ_FREE(hsize_t, off);
             ^
../../src/H5Dscatgath.c: In function ‘H5Dscatter’:
../../src/H5Dscatgath.c:924:20: warning: size of ‘iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter;        /* Selection iteration info*/
                    ^
../../src/H5Dscatgath.c: In function ‘H5Dgather’:
../../src/H5Dscatgath.c:1024:20: warning: size of ‘iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter;        /* Selection iteration info*/
                    ^
../../src/H5Dscatgath.c: In function ‘H5D__scatter_file’:
../../src/H5Dscatgath.c:93:1: warning: stack usage is 16720 bytes [-Wstack-usage=]
 H5D__scatter_file(const H5D_io_info_t *_io_info,
 ^
../../src/H5Dscatgath.c:167:1: warning: the frame size of 16680 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 } /* H5D__scatter_file() */
 ^
../../src/H5Dscatgath.c: In function ‘H5D__gather_file’:
../../src/H5Dscatgath.c:192:1: warning: stack usage is 16736 bytes [-Wstack-usage=]
 H5D__gather_file(const H5D_io_info_t *_io_info,
 ^
../../src/H5Dscatgath.c:268:1: warning: the frame size of 16696 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 } /* H5D__gather_file() */
 ^
../../src/H5Dscatgath.c: In function ‘H5D__scatter_mem’:
../../src/H5Dscatgath.c:287:1: warning: stack usage is 16560 bytes [-Wstack-usage=]
 H5D__scatter_mem (const void *_tscat_buf, const H5S_t *space,
 ^
../../src/H5Dscatgath.c:353:1: warning: the frame size of 16512 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 }   /* H5D__scatter_mem() */
 ^
../../src/H5Dscatgath.c: In function ‘H5D__gather_mem’:
../../src/H5Dscatgath.c:374:1: warning: stack usage is 16560 bytes [-Wstack-usage=]
 H5D__gather_mem(const void *_buf, const H5S_t *space,
 ^
../../src/H5Dscatgath.c:440:1: warning: the frame size of 16512 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 }   /* H5D__gather_mem() */
 ^
../../src/H5Dscatgath.c: In function ‘H5D__compound_opt_read’:
../../src/H5Dscatgath.c:739:1: warning: stack usage is 16624 bytes [-Wstack-usage=]
 H5D__compound_opt_read(size_t nelmts, const H5S_t *space,
 ^
../../src/H5Dscatgath.c:834:1: warning: the frame size of 16576 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 } /* end H5D__compound_opt_read() */
 ^
  CC       H5Fint.lo
  CC       H5Faccum.lo
  CC       H5Fcwfs.lo
  CC       H5Fdbg.lo
../../src/H5E.c: In function ‘H5Epush2’:
../../src/H5E.c:1389:5: warning: function might be possible candidate for ‘gnu_printf’ format attribute [-Wsuggest-attribute=format]
     if(HDvasprintf(&tmp, fmt, ap) < 0)
     ^
  CC       H5Fefc.lo
  CC       H5Ffake.lo
../../src/H5Fint.c: In function ‘H5F_build_actual_name’:
../../src/H5Fint.c:1581:18: warning: size of ‘realname’ is 4096 bytes [-Wlarger-than=]
             char realname[PATH_MAX];    /* Fully resolved path name of file */
                  ^
  CC       H5Fio.lo
  CC       H5Fmount.lo
  CC       H5Fmpi.lo
  CC       H5Fquery.lo
  CC       H5Fsfile.lo
  CC       H5Fsuper.lo
  CC       H5Fsuper_cache.lo
  CC       H5Ftest.lo
  CC       H5FD.lo
  CC       H5FDcore.lo
../../src/H5Fsuper_cache.c: In function ‘H5F_sblock_load’:
../../src/H5Fsuper_cache.c:280:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);
                            ^
../../src/H5Fsuper_cache.c:281:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);
                            ^
../../src/H5Fsuper_cache.c:282:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);
                            ^
../../src/H5Fsuper_cache.c:283:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->driver_addr/*out*/);
                            ^
../../src/H5Fsuper_cache.c:291:30: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         if(H5G_ent_decode(f, (const uint8_t **)&p, sblock->root_ent) < 0)
                              ^
../../src/H5Fsuper_cache.c:412:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->base_addr/*out*/);
                            ^
../../src/H5Fsuper_cache.c:413:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->ext_addr/*out*/);
                            ^
../../src/H5Fsuper_cache.c:414:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &stored_eoa/*out*/);
                            ^
../../src/H5Fsuper_cache.c:415:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&p, &sblock->root_addr/*out*/);
                            ^
  CC       H5FDdirect.lo
  CC       H5FDfamily.lo
  CC       H5FDint.lo
  CC       H5FDlog.lo
  CC       H5FDmpi.lo
  CC       H5FDmpio.lo
In file included from ../../src/H5FDdirect.c:30:0:
../../src/H5private.h:1819:15: warning: ‘H5_interface_initialize_g’ defined but not used [-Wunused-variable]
 static int    H5_interface_initialize_g = 0;
               ^
../../src/H5FDdirect.c:24:33: warning: ‘H5FD_direct_init_interface’ declared ‘static’ but never defined [-Wunused-function]
 #define H5_INTERFACE_INIT_FUNC  H5FD_direct_init_interface
                                 ^
../../src/H5private.h:1820:18: note: in expansion of macro ‘H5_INTERFACE_INIT_FUNC’
 static herr_t    H5_INTERFACE_INIT_FUNC(void);
                  ^
  CC       H5FDmulti.lo
../../src/H5FDfamily.c: In function ‘H5FD_family_open’:
../../src/H5FDfamily.c:647:11: warning: size of ‘memb_name’ is 4096 bytes [-Wlarger-than=]
     char  memb_name[4096], temp[4096];
           ^
../../src/H5FDfamily.c:647:28: warning: size of ‘temp’ is 4096 bytes [-Wlarger-than=]
     char  memb_name[4096], temp[4096];
                            ^
../../src/H5FDfamily.c:709:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
     HDsnprintf(memb_name, sizeof(memb_name), name, 0);
     ^
../../src/H5FDfamily.c:709:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
../../src/H5FDfamily.c:710:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
     HDsnprintf(temp, sizeof(temp), name, 1);
     ^
../../src/H5FDfamily.c:710:5: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
../../src/H5FDfamily.c:716:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
         HDsnprintf(memb_name, sizeof(memb_name), name, file->nmembs);
         ^
../../src/H5FDfamily.c:716:9: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
../../src/H5FDfamily.c: In function ‘H5FD_family_cmp’:
../../src/H5FDfamily.c:868:1: warning: label ‘done’ defined but not used [-Wunused-label]
 done:
 ^
../../src/H5FDfamily.c: In function ‘H5FD_family_set_eoa’:
../../src/H5FDfamily.c:968:11: warning: size of ‘memb_name’ is 4096 bytes [-Wlarger-than=]
     char  memb_name[4096];
           ^
../../src/H5FDfamily.c:991:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
             HDsnprintf(memb_name, sizeof(memb_name), file->name, u);
             ^
../../src/H5FDfamily.c:991:13: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
../../src/H5FDlog.c: In function ‘H5Pset_fapl_log’:
../../src/H5FDlog.c:324:18: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     fa.logfile = (char *)logfile;
                  ^
  CC       H5FDsec2.lo
  CC       H5FDspace.lo
../../src/H5FDfamily.c: In function ‘H5FD_family_open’:
../../src/H5FDfamily.c:642:1: warning: stack usage is 8400 bytes [-Wstack-usage=]
 H5FD_family_open(const char *name, unsigned flags, hid_t fapl_id,
 ^
  CC       H5FDstdio.lo
In file included from ../../src/H5FDmpio.c:26:0:
../../src/H5private.h:1819:15: warning: ‘H5_interface_initialize_g’ defined but not used [-Wunused-variable]
 static int    H5_interface_initialize_g = 0;
               ^
../../src/H5FDmpio.c:23:33: warning: ‘H5FD_mpio_init_interface’ declared ‘static’ but never defined [-Wunused-function]
 #define H5_INTERFACE_INIT_FUNC  H5FD_mpio_init_interface
                                 ^
../../src/H5private.h:1820:18: note: in expansion of macro ‘H5_INTERFACE_INIT_FUNC’
 static herr_t    H5_INTERFACE_INIT_FUNC(void);
                  ^
../../src/H5FDmulti.c: In function ‘H5FD_multi_read’:
../../src/H5FDmulti.c:1620:55: warning: unused parameter ‘dxpl_id’ [-Wunused-parameter]
 H5FD_multi_read(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
                                                       ^
../../src/H5FDmulti.c: In function ‘H5FD_multi_write’:
../../src/H5FDmulti.c:1671:56: warning: unused parameter ‘dxpl_id’ [-Wunused-parameter]
 H5FD_multi_write(H5FD_t *_file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
                                                        ^
../../src/H5FDmulti.c: In function ‘compute_next’:
../../src/H5FDmulti.c:50:16: warning: declaration of ‘_unmapped’ shadows a previous local [-Wshadow]
     H5FD_mem_t _unmapped, LOOPVAR;           \
                ^
../../src/H5FDmulti.c:1845:2: note: in expansion of macro ‘UNIQUE_MEMBERS’
  UNIQUE_MEMBERS(file->fa.memb_map, mt2) {
  ^
../../src/H5FDmulti.c:50:16: warning: shadowed declaration is here [-Wshadow]
     H5FD_mem_t _unmapped, LOOPVAR;           \
                ^
../../src/H5FDmulti.c:1844:5: note: in expansion of macro ‘UNIQUE_MEMBERS’
     UNIQUE_MEMBERS(file->fa.memb_map, mt1) {
     ^
../../src/H5FDmulti.c:51:13: warning: declaration of ‘_seen’ shadows a previous local [-Wshadow]
     hbool_t _seen[H5FD_MEM_NTYPES];           \
             ^
../../src/H5FDmulti.c:1845:2: note: in expansion of macro ‘UNIQUE_MEMBERS’
  UNIQUE_MEMBERS(file->fa.memb_map, mt2) {
  ^
../../src/H5FDmulti.c:51:13: warning: shadowed declaration is here [-Wshadow]
     hbool_t _seen[H5FD_MEM_NTYPES];           \
             ^
../../src/H5FDmulti.c:1844:5: note: in expansion of macro ‘UNIQUE_MEMBERS’
     UNIQUE_MEMBERS(file->fa.memb_map, mt1) {
     ^
../../src/H5FDmulti.c: In function ‘open_members’:
../../src/H5FDmulti.c:1894:2: warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
  sprintf(tmp, file->fa.memb_name[mt], file->name);
  ^
  CC       H5FL.lo
  CC       H5FO.lo
  CC       H5FS.lo
  CC       H5FScache.lo
  CC       H5FSdbg.lo
  CC       H5FSsection.lo
../../src/H5FS.c: In function ‘H5FS_new’:
../../src/H5FS.c:538:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     fspace->nclasses = nclasses;
     ^
In file included from ../../src/H5FS.c:36:0:
../../src/H5FSpkg.h:77:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + H5F_SIZEOF_SIZE(f) /* Allocated size of serialized free space sections */ \
     ^
../../src/H5FS.c:564:24: note: in expansion of macro ‘H5FS_HEADER_SIZE’
     fspace->hdr_size = H5FS_HEADER_SIZE(f);
                        ^
../../src/H5FS.c: In function ‘H5FS_sinfo_dest’:
../../src/H5FS.c:890:17: warning: request for implicit conversion from ‘void *’ to ‘struct H5FS_bin_t *’ not permitted in C++ [-Wc++-compat]
     sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);
                 ^
  CC       H5FSstat.lo
  CC       H5FStest.lo
  CC       H5G.lo
../../src/H5FSsection.c: In function ‘H5FS_sinfo_new’:
../../src/H5FSsection.c:145:31: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     sinfo->sect_prefix_size = (size_t)H5FS_SINFO_PREFIX_SIZE(f);
                               ^
../../src/H5FSsection.c:176:25: warning: request for implicit conversion from ‘void *’ to ‘struct H5FS_bin_t *’ not permitted in C++ [-Wc++-compat]
             sinfo->bins = H5FL_SEQ_FREE(H5FS_bin_t, sinfo->bins);
                         ^
../../src/H5FSsection.c: In function ‘H5FS_sect_try_shrink_eoa’:
../../src/H5FSsection.c:2336:5: warning: passing argument 1 of ‘H5FS_sinfo_lock’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)
     ^
../../src/H5FSsection.c:205:1: note: expected ‘struct H5F_t *’ but argument is of type ‘const struct H5F_t *’
 H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)
 ^
../../src/H5FSsection.c:2336:5: warning: passing argument 3 of ‘H5FS_sinfo_lock’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(H5FS_sinfo_lock(f, dxpl_id, fspace, H5AC_WRITE) < 0)
     ^
../../src/H5FSsection.c:205:1: note: expected ‘struct H5FS_t *’ but argument is of type ‘const struct H5FS_t *’
 H5FS_sinfo_lock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, H5AC_protect_t accmode)
 ^
../../src/H5FSsection.c:2360:7: warning: passing argument 1 of ‘H5FS_sect_remove_real’ discards ‘const’ qualifier from pointer target type [enabled by default]
       if(H5FS_sect_remove_real(fspace, tmp_sect) < 0)
       ^
../../src/H5FSsection.c:857:1: note: expected ‘struct H5FS_t *’ but argument is of type ‘const struct H5FS_t *’
 H5FS_sect_remove_real(H5FS_t *fspace, H5FS_section_info_t *sect)
 ^
../../src/H5FSsection.c:2374:5: warning: passing argument 1 of ‘H5FS_sinfo_unlock’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)
     ^
../../src/H5FSsection.c:311:1: note: expected ‘struct H5F_t *’ but argument is of type ‘const struct H5F_t *’
 H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)
 ^
../../src/H5FSsection.c:2374:5: warning: passing argument 3 of ‘H5FS_sinfo_unlock’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(sinfo_valid && H5FS_sinfo_unlock(f, dxpl_id, fspace, section_removed) < 0)
     ^
../../src/H5FSsection.c:311:1: note: expected ‘struct H5FS_t *’ but argument is of type ‘const struct H5FS_t *’
 H5FS_sinfo_unlock(H5F_t *f, hid_t dxpl_id, H5FS_t *fspace, hbool_t modified)
 ^
  CC       H5Gbtree2.lo
../../src/H5FSstat.c: In function ‘H5FS_stat_info’:
../../src/H5FSstat.c:97:23: warning: conversion to ‘hsize_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     stats->hdr_size = (size_t)H5FS_HEADER_SIZE(f);
                       ^
  CC       H5Gcache.lo
  CC       H5Gcompact.lo
  CC       H5Gdense.lo
  CC       H5Gdeprec.lo
  CC       H5Gent.lo
  CC       H5Gint.lo
../../src/H5Gdense.c: In function ‘H5G__dense_create’:
../../src/H5Gdense.c:323:30: warning: conversion to ‘uint32_t’ from ‘size_t’ may alter its value [-Wconversion]
     bt2_cparam.rrec_size = 4 +          /* Name's hash value */
                              ^
../../src/H5Gdense.c:343:34: warning: conversion to ‘uint32_t’ from ‘size_t’ may alter its value [-Wconversion]
         bt2_cparam.rrec_size = 8 +      /* Creation order value */
                                  ^
In file included from ../../src/H5Gpkg.h:30:0,
                 from ../../src/H5Gcache.c:37:
../../src/H5Gcache.c: In function ‘H5G_node_load’:
../../src/H5Gprivate.h:52:7: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     4 +    /*reserved    */    \
       ^
../../src/H5Gpkg.h:56:34: note: in expansion of macro ‘H5G_SIZEOF_ENTRY’
     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
                                  ^
../../src/H5Gcache.c:140:22: note: in expansion of macro ‘H5G_NODE_SIZE’
     sym->node_size = H5G_NODE_SIZE(f);
                      ^
../../src/H5Gent.c: In function ‘H5G__ent_copy’:
../../src/H5Gent.c:343:24: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         H5G__ent_reset((H5G_entry_t *)src);
                        ^
  CC       H5Glink.lo
  CC       H5Gloc.lo
  CC       H5Gname.lo
  CC       H5Gnode.lo
  CC       H5Gobj.lo
  CC       H5Goh.lo
  CC       H5Groot.lo
../../src/H5Gname.c: In function ‘H5G_name_copy’:
../../src/H5Gname.c:535:24: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         H5G_name_reset((H5G_name_t *)src);
                        ^
../../src/H5Gloc.c: In function ‘H5G__loc_insert’:
../../src/H5Gloc.c:578:16: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     lnk.name = (char *)name;
                ^
../../src/H5Gloc.c: In function ‘H5G_loc_set_comment_cb’:
../../src/H5Gloc.c:791:14: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
  comment.s = (char *)udata->comment;
              ^
../../src/H5Gnode.c: In function ‘H5G__node_free’:
../../src/H5Gnode.c:292:20: warning: request for implicit conversion from ‘void *’ to ‘struct H5G_entry_t *’ not permitted in C++ [-Wc++-compat]
         sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);
                    ^
In file included from ../../src/H5Gpkg.h:30:0,
                 from ../../src/H5Gnode.c:43:
../../src/H5Gnode.c: In function ‘H5G_node_create’:
../../src/H5Gprivate.h:52:7: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     4 +    /*reserved    */    \
       ^
../../src/H5Gpkg.h:56:34: note: in expansion of macro ‘H5G_SIZEOF_ENTRY’
     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
                                  ^
../../src/H5Gnode.c:337:22: note: in expansion of macro ‘H5G_NODE_SIZE’
     sym->node_size = H5G_NODE_SIZE(f);
                      ^
../../src/H5Gnode.c:360:28: warning: request for implicit conversion from ‘void *’ to ‘struct H5G_entry_t *’ not permitted in C++ [-Wc++-compat]
                 sym->entry = H5FL_SEQ_FREE(H5G_entry_t, sym->entry);
                            ^
../../src/H5Gnode.c: In function ‘H5G_node_insert’:
../../src/H5Gnode.c:643:13: warning: enum conversion in assignment is invalid in C++ [-Wc++-compat]
             HGOTO_ERROR(H5E_SYM, H5E_CANTGET, FAIL, "unable to get symbol table name")
             ^
../../src/H5Gnode.c:698:13: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             idx -= H5F_SYM_LEAF_K(f);
             ^
../../src/H5Gnode.c:698:17: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
             idx -= H5F_SYM_LEAF_K(f);
                 ^
../../src/H5Gnode.c: In function ‘H5G_node_remove’:
../../src/H5Gnode.c:805:19: warning: request for implicit conversion from ‘void *’ to ‘const char *’ not permitted in C++ [-Wc++-compat]
             if((s = H5HL_offset_into(udata->common.heap, sn->entry[idx].name_off)) == NULL)
                   ^
../../src/H5Gnode.c:806:17: warning: enum conversion in assignment is invalid in C++ [-Wc++-compat]
                 HGOTO_ERROR(H5E_SYM, H5E_CANTGET, FAIL, "unable to get symbol table name")
                 ^
../../src/H5Gnode.c: In function ‘H5G__node_copy’:
../../src/H5Gnode.c:1271:28: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             grp_loc.oloc = (H5O_loc_t *)src_oloc;
                            ^
In file included from ../../src/H5Gpkg.h:30:0,
                 from ../../src/H5Gnode.c:43:
../../src/H5Gnode.c: In function ‘H5G__node_iterate_size’:
../../src/H5Gprivate.h:52:7: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     4 +    /*reserved    */    \
       ^
../../src/H5Gpkg.h:56:34: note: in expansion of macro ‘H5G_SIZEOF_ENTRY’
     + ((2 * H5F_SYM_LEAF_K(f)) * H5G_SIZEOF_ENTRY(f))                         \
                                  ^
../../src/H5Gnode.c:1460:19: note: in expansion of macro ‘H5G_NODE_SIZE’
     *stab_size += H5G_NODE_SIZE(f);
                   ^
../../src/H5Gobj.c: In function ‘H5G__obj_create_real’:
../../src/H5Gobj.c:270:67: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(H5O_msg_create(oloc, H5O_LINFO_ID, 0, H5O_UPDATE_TIME, (void *)linfo, dxpl_id) < 0)
                                                                   ^
../../src/H5Gobj.c:275:73: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(H5O_msg_create(oloc, H5O_GINFO_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)ginfo, dxpl_id) < 0)
                                                                         ^
../../src/H5Gobj.c:281:77: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             if(H5O_msg_create(oloc, H5O_PLINE_ID, H5O_MSG_FLAG_CONSTANT, 0, (void *)pline, dxpl_id) < 0)
                                                                             ^
../../src/H5Gobj.c: In function ‘H5G_obj_stab_to_new_cb’:
../../src/H5Gobj.c:431:51: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     if(H5G_obj_insert(udata->grp_oloc, lnk->name, (H5O_link_t *)lnk, FALSE,
                                                   ^
  CC       H5Gstab.lo
  CC       H5Gtest.lo
  CC       H5Gtraverse.lo
  CC       H5HF.lo
  CC       H5HFbtree2.lo
  CC       H5HFcache.lo
  CC       H5HFdbg.lo
  CC       H5HFdblock.lo
../../src/H5Gtraverse.c: In function ‘H5G_traverse_real’:
../../src/H5Gtraverse.c:741:52: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
                     if(H5O_msg_reset(H5O_GINFO_ID, (void *)ginfo) < 0)
                                                    ^
../../src/H5Gtraverse.c:745:52: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
                     if(H5O_msg_reset(H5O_LINFO_ID, (void *)linfo) < 0)
                                                    ^
../../src/H5Gtraverse.c:749:52: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
                     if(H5O_msg_reset(H5O_PLINE_ID, (void *)pline) < 0)
                                                    ^
In file included from ../../src/H5HF.c:39:0:
../../src/H5HF.c: In function ‘H5HF_op_write’:
../../src/H5HF.c:128:14: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     HDmemcpy((void *)obj, op_data, obj_len);    /* Casting away const OK -QAK */
              ^
../../src/H5private.h:1003:47: note: in definition of macro ‘HDmemcpy’
     #define HDmemcpy(X,Y,Z)    memcpy((char*)(X),(const char*)(Y),Z)
                                               ^
../../src/H5HF.c: In function ‘H5HF_insert’:
../../src/H5HF.c:373:49: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(H5HF_huge_insert(hdr, dxpl_id, size, (void *)obj, id) < 0)
                                                 ^
../../src/H5HFcache.c: In function ‘H5HF_cache_hdr_flush’:
../../src/H5HFcache.c:501:20: warning: conversion to ‘uint8_t’ from ‘int’ may alter its value [-Wconversion]
         heap_flags |= (hdr->huge_ids_wrapped ?  H5HF_HDR_FLAGS_HUGE_ID_WRAPPED : 0);
                    ^
../../src/H5HFcache.c:502:20: warning: conversion to ‘uint8_t’ from ‘int’ may alter its value [-Wconversion]
         heap_flags |= (hdr->checksum_dblocks ?  H5HF_HDR_FLAGS_CHECKSUM_DBLOCKS : 0);
                    ^
../../src/H5HFcache.c: In function ‘H5HF_cache_iblock_load’:
../../src/H5HFcache.c:706:25: warning: size of ‘iblock_buf’ is 4096 bytes [-Wlarger-than=]
     uint8_t             iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */
                         ^
In file included from ../../src/H5HFcache.c:38:0:
../../src/H5HFpkg.h:119:46: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \
                                              ^
../../src/H5HFpkg.h:131:81: note: in expansion of macro ‘H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE’
     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
                                                                                 ^
../../src/H5HFcache.c:747:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFpkg.h:130:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFcache.c:747:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFcache.c: In function ‘H5HF_cache_iblock_flush’:
../../src/H5HFcache.c:904:17: warning: size of ‘iblock_buf’ is 4096 bytes [-Wlarger-than=]
     uint8_t     iblock_buf[H5HF_IBLOCK_BUF_SIZE]; /* Buffer for indirect block */
                 ^
../../src/H5HFcache.c:987:21: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
                     max_child = u;
                     ^
In file included from ../../src/H5HFcache.c:35:0:
../../src/H5HFcache.c: In function ‘H5HF_cache_dblock_load’:
../../src/H5HFcache.c:1347:18: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         HDmemset((uint8_t *)p - H5HF_SIZEOF_CHKSUM, 0, (size_t)H5HF_SIZEOF_CHKSUM);
                  ^
../../src/H5private.h:1009:39: note: in definition of macro ‘HDmemset’
     #define HDmemset(X,C,Z)    memset(X,C,Z)
                                       ^
In file included from ../../src/H5HFdblock.c:37:0:
../../src/H5HFdblock.c: In function ‘H5HF_man_dblock_create’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFdblock.c:141:33: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     free_space = dblock->size - H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                                 ^
../../src/H5HFpkg.h:113:5: warning: conversion to ‘hsize_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFdblock.c:169:70: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     if(NULL == (sec_node = H5HF_sect_single_new((dblock->block_off + H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr)),
                                                                      ^
../../src/H5HFdblock.c: In function ‘H5HF_man_dblock_new’:
../../src/H5HFdblock.c:361:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if((min_dblock_size - request) < H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr))
                                    ^
In file included from ../../src/H5HFdbg.c:38:0:
../../src/H5HFdbg.c: In function ‘H5HF_dblock_debug’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFdbg.c:481:23: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     blk_prefix_size = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                       ^
  CC       H5HFdtable.lo
  CC       H5HFhdr.lo
  CC       H5HFhuge.lo
  CC       H5HFiblock.lo
  CC       H5HFiter.lo
  CC       H5HFman.lo
  CC       H5HFsection.lo
  CC       H5HFspace.lo
../../src/H5HFsection.c: In function ‘H5HF_sect_single_dblock_info’:
../../src/H5HFsection.c:649:53: warning: unused parameter ‘dxpl_id’ [-Wunused-parameter]
 H5HF_sect_single_dblock_info(H5HF_hdr_t *hdr, hid_t dxpl_id,
                                                     ^
In file included from ../../src/H5HFsection.c:33:0:
../../src/H5HFsection.c: In function ‘H5HF_sect_single_full_dblock’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFsection.c:772:23: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                       ^
../../src/H5HFsection.c: In function ‘H5HF_sect_single_can_shrink’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFsection.c:1032:27: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
         dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                           ^
../../src/H5HFsection.c: In function ‘H5HF_sect_single_valid’:
../../src/H5HFsection.c:1198:78: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             status = H5HF_sect_single_dblock_info(iblock->hdr, H5AC_dxpl_id, (H5HF_free_section_t *)sect, &dblock_addr, &dblock_size);
                                                                              ^
In file included from ../../src/H5HFsection.c:33:0:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFsection.c:1207:31: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
             dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(iblock->hdr);
                               ^
../../src/H5HFsection.c: In function ‘H5HF_sect_row_init_cls’:
../../src/H5HFsection.c:46:9: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         + 2             /* # of entries */                                    \
         ^
../../src/H5HFsection.c:1567:28: note: in expansion of macro ‘H5HF_SECT_INDIRECT_SERIAL_SIZE’
         cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);
                            ^
../../src/H5HFsection.c: In function ‘H5HF_sect_indirect_init_cls’:
../../src/H5HFsection.c:46:9: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         + 2             /* # of entries */                                    \
         ^
../../src/H5HFsection.c:2183:24: note: in expansion of macro ‘H5HF_SECT_INDIRECT_SERIAL_SIZE’
     cls->serial_size = H5HF_SECT_INDIRECT_SERIAL_SIZE(hdr);
                        ^
In file included from ../../src/H5HFsection.c:33:0:
../../src/H5HFsection.c: In function ‘H5HF_sect_indirect_init_rows’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFsection.c:2476:23: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                       ^
../../src/H5HFman.c: In function ‘H5HF_man_write’:
../../src/H5HFman.c:430:58: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     if(H5HF_man_op_real(hdr, dxpl_id, id, H5HF_op_write, (void *)obj, H5HF_OP_MODIFY) < 0)
                                                          ^
../../src/H5HFiblock.c: In function ‘H5HF_iblock_unpin’:
../../src/H5HFiblock.c:214:13: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]
             iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PINNED);
             ^
In file included from ../../src/H5HFiblock.c:37:0:
../../src/H5HFiblock.c: In function ‘H5HF_man_iblock_root_double’:
../../src/H5HFpkg.h:119:46: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \
                                              ^
../../src/H5HFpkg.h:131:81: note: in expansion of macro ‘H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE’
     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
                                                                                 ^
../../src/H5HFiblock.c:590:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFpkg.h:130:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFiblock.c:590:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFhuge.c: In function ‘H5HF_huge_bt2_create’:
../../src/H5HFhuge.c:125:36: warning: conversion to ‘uint32_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
                                    ^
../../src/H5HFhuge.c:132:36: warning: conversion to ‘uint32_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
                                    ^
../../src/H5HFhuge.c:139:36: warning: conversion to ‘uint32_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of filtered object */
                                    ^
../../src/H5HFhuge.c:147:36: warning: conversion to ‘uint32_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             bt2_cparam.rrec_size = (size_t)(hdr->sizeof_addr    /* Address of object */
                                    ^
../../src/H5HFiblock.c:629:26: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         unsigned row = u / hdr->man_dtable.cparam.width;        /* Row for current entry */
                          ^
../../src/H5HFiblock.c: In function ‘H5HF_man_iblock_root_halve’:
../../src/H5HFiblock.c:731:19: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     new_nrows = 1 << (1 + H5VM_log2_gen((uint64_t)max_child_row));
                   ^
In file included from ../../src/H5HFiblock.c:37:0:
../../src/H5HFpkg.h:119:46: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \
                                              ^
../../src/H5HFpkg.h:131:81: note: in expansion of macro ‘H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE’
     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
                                                                                 ^
../../src/H5HFiblock.c:759:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFpkg.h:130:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFiblock.c:759:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
In file included from ../../src/H5HFhdr.c:34:0:
../../src/H5HFhdr.c: In function ‘H5HF_hdr_finish_init_phase1’:
../../src/H5HFhdr.c:224:45: warning: conversion to ‘uint8_t’ from ‘unsigned int’ may alter its value [-Wconversion]
     hdr->heap_len_size = MIN(hdr->man_dtable.max_dir_blk_off_size,
                                             ^
../../src/H5private.h:319:35: note: in definition of macro ‘MIN’
 #define MIN(a,b)    (((a)<(b)) ? (a) : (b))
                                   ^
../../src/H5HFhdr.c:225:32: warning: conversion to ‘uint8_t’ from ‘unsigned int’ may alter its value [-Wconversion]
             H5VM_limit_enc_size((uint64_t)hdr->max_man_size));
                                ^
../../src/H5private.h:319:41: note: in definition of macro ‘MIN’
 #define MIN(a,b)    (((a)<(b)) ? (a) : (b))
                                         ^
In file included from ../../src/H5HFhdr.c:36:0:
../../src/H5HFhdr.c: In function ‘H5HF_hdr_finish_init_phase2’:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘hsize_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFhdr.c:262:21: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
                     H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                     ^
../../src/H5HFiblock.c: In function ‘H5HF_man_iblock_create’:
../../src/H5HFpkg.h:119:46: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         ((h)->sizeof_addr + (h)->sizeof_size + 4) : /* Size of entries for filtered direct blocks */ \
                                              ^
../../src/H5HFpkg.h:131:81: note: in expansion of macro ‘H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE’
     + (MIN(r, (h)->man_dtable.max_direct_rows) * (h)->man_dtable.cparam.width * H5HF_MAN_INDIRECT_CHILD_DIR_ENTRY_SIZE(h)) /* Size of entries for direct blocks */ \
                                                                                 ^
../../src/H5HFiblock.c:1028:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFpkg.h:130:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFiblock.c:1028:20: note: in expansion of macro ‘H5HF_MAN_INDIRECT_SIZE’
     iblock->size = H5HF_MAN_INDIRECT_SIZE(hdr, iblock->nrows);
                    ^
../../src/H5HFhdr.c: In function ‘H5HF_hdr_create’:
../../src/H5HFhdr.c:433:52: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         if(0 == (hdr->filter_len = H5O_msg_raw_size(hdr->f, H5O_PLINE_ID, FALSE, &(hdr->pline))))
                                                    ^
../../src/H5HFhdr.c:439:13: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             + 4                                 /* Size of filter mask for filtered root direct block */
             ^
In file included from ../../src/H5HFhdr.c:36:0:
../../src/H5HFpkg.h:103:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + H5HF_DTABLE_INFO_SIZE(h) /* Size of managed obj. doubling-table info */ \
     ^
../../src/H5HFhdr.c:444:26: note: in expansion of macro ‘H5HF_HEADER_SIZE’
         hdr->heap_size = H5HF_HEADER_SIZE(hdr);
                          ^
../../src/H5HFhdr.c:466:21: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     + hdr->sizeof_size; /* Size of de-filtered object in memory */
                     ^
../../src/H5HFhdr.c:470:21: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     + hdr->sizeof_size; /* Length of object */
                     ^
../../src/H5HFiblock.c: In function ‘H5HF_man_iblock_unprotect’:
../../src/H5HFiblock.c:1281:13: warning: negative integer implicitly converted to unsigned type [-Wsign-conversion]
             iblock->hdr->root_iblock_flags &= ~(H5HF_ROOT_IBLOCK_PROTECTED);
             ^
In file included from ../../src/H5HFhdr.c:36:0:
../../src/H5HFpkg.h:113:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     + (h)->heap_off_size        /* Offset of the block in the heap */         \
     ^
../../src/H5HFhdr.c:492:23: note: in expansion of macro ‘H5HF_MAN_ABS_DIRECT_OVERHEAD’
     dblock_overhead = H5HF_MAN_ABS_DIRECT_OVERHEAD(hdr);
                       ^
../../src/H5HFhdr.c: In function ‘H5HF_hdr_adj_free’:
../../src/H5HFhdr.c:761:5: warning: conversion to ‘long long unsigned int’ from ‘ssize_t’ may change the sign of the result [-Wsign-conversion]
     hdr->total_man_free += amt;
     ^
../../src/H5HFhdr.c: In function ‘H5HF_hdr_adjust_heap’:
../../src/H5HFhdr.c:801:5: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
     hdr->total_man_free += extra_free;
     ^
../../src/H5HFiblock.c: In function ‘H5HF_man_iblock_dest’:
../../src/H5HFiblock.c:1723:22: warning: request for implicit conversion from ‘void *’ to ‘struct H5HF_indirect_ent_t *’ not permitted in C++ [-Wc++-compat]
         iblock->ents = H5FL_SEQ_FREE(H5HF_indirect_ent_t, iblock->ents);
                      ^
../../src/H5HFiblock.c:1725:27: warning: request for implicit conversion from ‘void *’ to ‘struct H5HF_indirect_filt_ent_t *’ not permitted in C++ [-Wc++-compat]
         iblock->filt_ents = H5FL_SEQ_FREE(H5HF_indirect_filt_ent_t, iblock->filt_ents);
                           ^
../../src/H5HFiblock.c:1727:31: warning: request for implicit conversion from ‘void *’ to ‘struct H5HF_indirect_t **’ not permitted in C++ [-Wc++-compat]
         iblock->child_iblocks = H5FL_SEQ_FREE(H5HF_indirect_ptr_t, iblock->child_iblocks);
                               ^
../../src/H5HFhdr.c: In function ‘H5HF_hdr_reverse_iter’:
../../src/H5HFhdr.c:1243:9: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
         tmp_entry = curr_entry;
         ^
../../src/H5HFhdr.c:1278:13: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
             curr_entry = tmp_entry;
             ^
  CC       H5HFstat.lo
  CC       H5HFtest.lo
  CC       H5HFtiny.lo
  CC       H5HG.lo
  CC       H5HGcache.lo
  CC       H5HGdbg.lo
  CC       H5HGquery.lo
../../src/H5HGcache.c: In function ‘H5HG_load’:
../../src/H5HGcache.c:184:70: warning: conversion to ‘size_t’ from ‘long int’ may change the sign of the result [-Wsign-conversion]
      heap->obj[0].size = ((const uint8_t *)heap->chunk + heap->size) - p;
                                                                      ^
In file included from ../../src/H5HG.c:51:0:
../../src/H5HG.c: In function ‘H5HG_create’:
../../src/H5HGpkg.h:78:38: warning: conversion to ‘long unsigned int’ from ‘long int’ may change the sign of the result [-Wsign-conversion]
 #define H5HG_ALIGN(X) (H5HG_ALIGNMENT*(((X)+H5HG_ALIGNMENT-1)/H5HG_ALIGNMENT))
                                      ^
../../src/H5HG.c:183:9: note: in expansion of macro ‘H5HG_ALIGN’
     n = H5HG_ALIGN(p - heap->chunk) - (size_t)(p - heap->chunk);
         ^
../../src/H5HG.c: In function ‘H5HG_free’:
../../src/H5HG.c:842:19: warning: request for implicit conversion from ‘void *’ to ‘struct H5HG_obj_t *’ not permitted in C++ [-Wc++-compat]
         heap->obj = H5FL_SEQ_FREE(H5HG_obj_t, heap->obj);
                   ^
../../src/H5HFtiny.c: In function ‘H5HF_tiny_insert’:
../../src/H5HFtiny.c:170:55: warning: conversion to ‘uint8_t’ from ‘size_t’ may alter its value [-Wconversion]
         *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |
                                                       ^
../../src/H5HFtiny.c:174:55: warning: conversion to ‘uint8_t’ from ‘size_t’ may alter its value [-Wconversion]
         *id++ = H5HF_ID_VERS_CURR | H5HF_ID_TYPE_TINY |
                                                       ^
../../src/H5HFtiny.c: In function ‘H5HF_tiny_get_obj_len’:
../../src/H5HFtiny.c:230:34: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
                                  ^
../../src/H5HFtiny.c: In function ‘H5HF_tiny_op_real’:
../../src/H5HFtiny.c:281:34: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
                                  ^
../../src/H5HFtest.c: In function ‘H5HF_get_cparam_test’:
../../src/H5HFtest.c:97:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     else if(fh->hdr->id_len == (1 + fh->hdr->sizeof_size + fh->hdr->sizeof_addr))
                             ^
../../src/H5HFtest.c:100:33: warning: conversion to ‘uint16_t’ from ‘unsigned int’ may alter its value [-Wconversion]
         cparam->id_len = fh->hdr->id_len;
                                 ^
../../src/H5HFtiny.c: In function ‘H5HF_tiny_remove’:
../../src/H5HFtiny.c:406:34: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
         enc_obj_size = *(id + 1) | ((*id & H5HF_TINY_MASK_EXT_1) << 8);
                                  ^
  CC       H5HL.lo
  CC       H5HLcache.lo
  CC       H5HLdbg.lo
  CC       H5HLint.lo
  CC       H5HP.lo
  CC       H5I.lo
  CC       H5Itest.lo
  CC       H5L.lo
../../src/H5HP.c: In function ‘H5HP_create’:
../../src/H5HP.c:382:32: warning: request for implicit conversion from ‘void *’ to ‘struct H5HP_ent_t *’ not permitted in C++ [-Wc++-compat]
                 new_heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, new_heap->heap);
                                ^
../../src/H5HP.c: In function ‘H5HP_decr’:
../../src/H5HP.c:849:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     heap->heap[obj_loc].val-=amt;
     ^
../../src/H5HP.c:849:28: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
     heap->heap[obj_loc].val-=amt;
                            ^
../../src/H5HP.c: In function ‘H5HP_close’:
../../src/H5HP.c:911:16: warning: request for implicit conversion from ‘void *’ to ‘struct H5HP_ent_t *’ not permitted in C++ [-Wc++-compat]
     heap->heap = H5FL_SEQ_FREE(H5HP_ent_t, heap->heap);
                ^
In file included from ../../src/H5private.h:48:0,
                 from ../../src/H5I.c:42:
../../src/H5I.c: In function ‘H5Inmembers’:
../../src/H5private.h:1467:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     assert(_tmp_src == _tmp_dst);   \
                     ^
../../src/H5overflow.h:286:9: note: in expansion of macro ‘ASSIGN_TO_LARGER_SIZE_SIGNED_TO_UNSIGNED’
         ASSIGN_TO_LARGER_SIZE_SIGNED_TO_UNSIGNED(dst, dsttype, src, srctype)
         ^
../../src/H5private.h:2083:28: note: in expansion of macro ‘ASSIGN_int_TO_hsize_t’
 #define H5_GLUE4(w,x,y,z)  w##x##y##z
                            ^
../../src/H5private.h:1502:5: note: in expansion of macro ‘H5_GLUE4’
     H5_GLUE4(ASSIGN_,srctype,_TO_,dsttype)(dst,dsttype,src,srctype)\
     ^
../../src/H5I.c:463:9: note: in expansion of macro ‘H5_CHECKED_ASSIGN’
         H5_CHECKED_ASSIGN(*num_members, hsize_t, members, int);
         ^
../../src/H5I.c: In function ‘H5I__clear_type_cb’:
../../src/H5I.c:653:81: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(udata->type_ptr->cls->free_func && (udata->type_ptr->cls->free_func)((void *)id->obj_ptr) < 0) {
                                                                                 ^
In file included from ../../src/H5I.c:45:0:
../../src/H5I.c: In function ‘H5I__destroy_type’:
../../src/H5I.c:758:48: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         type_ptr->cls = H5FL_FREE(H5I_class_t, (void *)type_ptr->cls);
                                                ^
../../src/H5FLprivate.h:130:65: note: in definition of macro ‘H5FL_FREE’
 #define H5FL_FREE(t,obj) (t *)H5FL_reg_free(&(H5FL_REG_NAME(t)),obj)
                                                                 ^
../../src/H5I.c: In function ‘H5I_subst’:
../../src/H5I.c:985:17: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     ret_value = (void *)id_ptr->obj_ptr;
                 ^
../../src/H5I.c: In function ‘H5I_object’:
../../src/H5I.c:1020:21: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         ret_value = (void *)id_ptr->obj_ptr;
                     ^
../../src/H5I.c: In function ‘H5I_object_verify’:
../../src/H5I.c:1095:21: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         ret_value = (void *)id_ptr->obj_ptr;
                     ^
../../src/H5I.c: In function ‘H5I__remove_common’:
../../src/H5I.c:1269:17: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     ret_value = (void *)curr_id->obj_ptr;
                 ^
../../src/H5I.c: In function ‘H5I_dec_ref’:
../../src/H5I.c:1443:68: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         if(!type_ptr->cls->free_func || (type_ptr->cls->free_func)((void *)id_ptr->obj_ptr) >= 0) {
                                                                    ^
../../src/H5I.c: In function ‘H5I__iterate_cb’:
../../src/H5I.c:2102:42: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         cb_ret_val = (*udata->user_func)((void *)item->obj_ptr, item->id, udata->user_udata);
                                          ^
  CC       H5Lexternal.lo
  CC       H5MF.lo
  CC       H5MFaggr.lo
  CC       H5MFdbg.lo
../../src/H5L.c: In function ‘H5L_link_cb’:
../../src/H5L.c:1716:24: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     udata->lnk->name = (char *)name;
                        ^
../../src/H5L.c: In function ‘H5L_move_dest_cb’:
../../src/H5L.c:2437:24: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
     udata->lnk->name = (char *)name;
                        ^
../../src/H5L.c: In function ‘H5L_move_cb’:
../../src/H5L.c:2580:13: warning: passing argument 1 of ‘H5RS_wrap’ discards ‘const’ qualifier from pointer target type [enabled by default]
             dst_name_r = H5RS_wrap(udata->dst_name);
             ^
In file included from ../../src/H5Gprivate.h:35:0,
                 from ../../src/H5Tprivate.h:28,
                 from ../../src/H5Oprivate.h:39,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5L.c:28:
../../src/H5RSprivate.h:47:20: note: expected ‘char *’ but argument is of type ‘const char *’
 H5_DLL H5RS_str_t *H5RS_wrap(char *s);
                    ^
../../src/H5L.c: In function ‘H5L_link_copy_file’:
../../src/H5L.c:3015:28: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
         lnk_grp_loc.oloc = (H5O_loc_t *)src_oloc;    /* Casting away const OK -QAK */
                            ^
  CC       H5MFsection.lo
  CC       H5MM.lo
../../src/H5MFaggr.c: In function ‘H5MF_aggr_try_extend’:
../../src/H5MFaggr.c:431:49: warning: conversion to ‘float’ from ‘hsize_t’ may alter its value [-Wconversion]
   if(extra_requested <= (EXTEND_THRESHOLD * aggr->size)) {
                                                 ^
  CC       H5MP.lo
  CC       H5MPtest.lo
  CC       H5O.lo
  CC       H5Oainfo.lo
  CC       H5Oalloc.lo
  CC       H5Oattr.lo
  CC       H5Oattribute.lo
  CC       H5Obogus.lo
../../src/H5Oalloc.c: In function ‘H5O_alloc_new_chunk’:
../../src/H5Oalloc.c:953:75: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         if(NULL == (chk_proxy = H5O_chunk_protect(f, dxpl_id, oh, chunkno - 1)))
                                                                           ^
../../src/H5Oalloc.c:971:21: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
                     curr_msg->chunkno = chunkno;
                     ^
../../src/H5Oalloc.c:992:37: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         null_msg->chunkno = chunkno - 1;
                                     ^
../../src/H5Oalloc.c:1027:9: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         oh->mesg[found_other.msgno].chunkno = chunkno;
         ^
../../src/H5Oalloc.c:1079:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     oh->mesg[idx].chunkno = chunkno;
     ^
../../src/H5Oalloc.c:1082:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     if(H5O_chunk_add(f, dxpl_id, oh, chunkno) < 0)
     ^
../../src/H5Oalloc.c:1090:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cont->chunkno = chunkno;
     ^
  CC       H5Obtreek.lo
  CC       H5Ocache.lo
  CC       H5Ochunk.lo
  CC       H5Ocont.lo
../../src/H5Ocache.c: In function ‘H5O_cache_chk_load’:
../../src/H5Ocache.c:726:49: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         chk_proxy->chunkno = udata->oh->nchunks - 1;
                                                 ^
  CC       H5Ocopy.lo
../../src/H5Ocache.c: In function ‘H5O_chunk_deserialize’:
../../src/H5Ocache.c:1062:26: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     chunkno = oh->nchunks++;
                          ^
../../src/H5Ocache.c:1184:36: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             oh->mesg[mesgno].raw = (uint8_t *)p;        /* Casting away const OK - QAK */
                                    ^
../../src/H5Ocache.c:1292:57: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
             cont->chunkno = udata->cont_msg_info->nmsgs + 1; /*the next continuation message/chunk */
                                                         ^
../../src/H5Ocache.c: In function ‘H5O_chunk_serialize’:
../../src/H5Ocache.c:1388:30: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             if(H5O_msg_flush((H5F_t *)f, oh, curr_msg) < 0)
                              ^
  CC       H5Odbg.lo
  CC       H5Odrvinfo.lo
  CC       H5Odtype.lo
  CC       H5Oefl.lo
  CC       H5Ofill.lo
  CC       H5Oginfo.lo
  CC       H5Olayout.lo
../../src/H5Odtype.c: In function ‘H5O_dtype_copy’:
../../src/H5Odtype.c:1191:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(NULL == (dst = H5T_copy(src, H5T_COPY_ALL)))
     ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Odtype.c:18:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Odtype.c: In function ‘H5O_dtype_pre_copy_file’:
../../src/H5Odtype.c:1536:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if(NULL == (udata->src_dtype = H5T_copy(dt_src, H5T_COPY_TRANSIENT)))
         ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Odtype.c:18:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Oefl.c: In function ‘H5O_efl_decode’:
../../src/H5Oefl.c:155:18: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
         if(*s == (char)NULL)
                  ^
In file included from ../../src/H5Cprivate.h:35:0,
                 from ../../src/H5ACprivate.h:33,
                 from ../../src/H5Oprivate.h:36,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Ofill.c:24:
../../src/H5Ofill.c: In function ‘H5O_fill_new_decode’:
../../src/H5Fprivate.h:130:37: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
    (i) |= ((int32_t)(((*(p) & 0xff) << 24) |                                  \
                                     ^
../../src/H5Ofill.c:218:13: note: in expansion of macro ‘INT32DECODE’
             INT32DECODE(p, fill->size);
             ^
  CC       H5Olinfo.lo
  CC       H5Olink.lo
  CC       H5Omessage.lo
  CC       H5Omtime.lo
  CC       H5Oname.lo
  CC       H5Opline.lo
  CC       H5Orefcount.lo
  CC       H5Osdspace.lo
../../src/H5Omtime.c: In function ‘H5O_mtime_decode’:
../../src/H5Omtime.c:182:5: warning: "_MSC_VER" is not defined [-Wundef]
 #if _MSC_VER >= 1900 /* VS 2015 */
     ^
  CC       H5Oshared.lo
  CC       H5Ostab.lo
  CC       H5Oshmesg.lo
  CC       H5Otest.lo
  CC       H5Ounknown.lo
  CC       H5P.lo
  CC       H5Pacpl.lo
  CC       H5Pdapl.lo
  CC       H5Pdcpl.lo
  CC       H5Pdeprec.lo
  CC       H5Pdxpl.lo
  CC       H5Pfapl.lo
  CC       H5Pfcpl.lo
  CC       H5Pfmpl.lo
../../src/H5Pdcpl.c: In function ‘H5P_get_fill_value’:
../../src/H5Pdcpl.c:1563:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if((dst_id = H5I_register(H5I_DATATYPE, H5T_copy(type, H5T_COPY_TRANSIENT), FALSE)) < 0)
     ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Pdcpl.c:37:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
  CC       H5Pgcpl.lo
  CC       H5Pint.lo
  CC       H5Plapl.lo
  CC       H5Plcpl.lo
  CC       H5Pocpl.lo
  CC       H5Pocpypl.lo
  CC       H5Pstrcpl.lo
  CC       H5Ptest.lo
  CC       H5PL.lo
  CC       H5R.lo
../../src/H5Pocpl.c: In function ‘H5Pget_filter_by_id2’:
../../src/H5Pocpl.c:1060:30: warning: unused variable ‘filter’ [-Wunused-variable]
     const H5Z_filter_info_t *filter;        /* Pointer to filter information */
                              ^
../../src/H5Pocpl.c:1059:21: warning: unused variable ‘pline’ [-Wunused-variable]
     H5O_pline_t     pline;                  /* Filter pipeline */
                     ^
  CC       H5Rdeprec.lo
  CC       H5RC.lo
../../src/H5PL.c: In function ‘H5PL__open’:
../../src/H5PL.c:878:39: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
         if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC(handle, "H5PLget_plugin_info"))) {
                                       ^
../../src/H5PL.c: In function ‘H5PL__search_table’:
../../src/H5PL.c:961:47: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
                 if(NULL == (get_plugin_info = (H5PL_get_plugin_info_t)H5PL_GET_LIB_FUNC((H5PL_table_g[i]).handle, "H5PLget_plugin_info")))
                                               ^
  CC       H5RS.lo
  CC       H5S.lo
  CC       H5Sall.lo
  CC       H5Sdbg.lo
  CC       H5Shyper.lo
  CC       H5Smpio.lo
  CC       H5Snone.lo
  CC       H5Spoint.lo
  CC       H5Sselect.lo
../../src/H5Shyper.c: In function ‘H5S_hyper_serialize’:
../../src/H5Shyper.c:2134:18: warning: declaration of ‘u’ shadows a previous local [-Wshadow]
         unsigned u;     /* Local counting variable */
                  ^
../../src/H5Shyper.c:2086:14: warning: shadowed declaration is here [-Wshadow]
     unsigned u;             /* Local index variable */
              ^
../../src/H5Shyper.c:2220:13: warning: conversion to ‘uint32_t’ from ‘long unsigned int’ may alter its value [-Wconversion]
         len += (size_t)(8 * space->extent.rank * block_count);
             ^
  CC       H5Stest.lo
  CC       H5SL.lo
../../src/H5Spoint.c: In function ‘H5S_point_bounds’:
../../src/H5Spoint.c:1122:63: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
             if(start[u] > (node->pnt[u] + space->select.offset[u]))
                                                               ^
../../src/H5Spoint.c:1123:63: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
                 start[u] = node->pnt[u] + space->select.offset[u];
                                                               ^
../../src/H5Spoint.c:1124:61: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
             if(end[u] < (node->pnt[u] + space->select.offset[u]))
                                                             ^
../../src/H5Spoint.c:1125:61: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
                 end[u] = node->pnt[u] + space->select.offset[u];
                                                             ^
../../src/H5Spoint.c: In function ‘H5S_point_get_seq_list’:
../../src/H5Spoint.c:1671:56: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
             loc += (node->pnt[i] + space->select.offset[i]) * acc;
                                                        ^
  CC       H5SM.lo
  CC       H5SMbtree2.lo
../../src/H5Sselect.c: In function ‘H5S_select_iterate’:
../../src/H5Sselect.c:1215:20: warning: size of ‘iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter;        /* Selection iteration info */
                    ^
../../src/H5Sselect.c:1261:17: warning: size of ‘off’ is 8192 bytes [-Wlarger-than=]
         hsize_t off[H5D_IO_VECTOR_SIZE];        /* Array to store sequence offsets */
                 ^
../../src/H5Sselect.c:1262:16: warning: size of ‘len’ is 8192 bytes [-Wlarger-than=]
         size_t len[H5D_IO_VECTOR_SIZE];         /* Array to store sequence lengths */
                ^
../../src/H5Sselect.c: In function ‘H5S_select_shape_same’:
../../src/H5Sselect.c:1434:20: warning: size of ‘iter_a’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter_a;    /* Selection a iteration info */
                    ^
../../src/H5Sselect.c:1435:20: warning: size of ‘iter_b’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter_b;    /* Selection b iteration info */
                    ^
../../src/H5Sselect.c: In function ‘H5S_select_fill’:
../../src/H5Sselect.c:2003:20: warning: size of ‘iter’ is 2232 bytes [-Wlarger-than=]
     H5S_sel_iter_t iter;        /* Selection iteration info */
                    ^
../../src/H5Sselect.c:2031:17: warning: size of ‘off’ is 8192 bytes [-Wlarger-than=]
         hsize_t off[H5D_IO_VECTOR_SIZE];          /* Array to store sequence offsets */
                 ^
../../src/H5Sselect.c:2032:16: warning: size of ‘len’ is 8192 bytes [-Wlarger-than=]
         size_t len[H5D_IO_VECTOR_SIZE];           /* Array to store sequence lengths */
                ^
  CC       H5SMcache.lo
../../src/H5SL.c: In function ‘H5SL_release_common’:
../../src/H5SL.c:838:36: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             (void)(op)(node->item, (void *)node->key, op_data);
                                    ^
../../src/H5Sselect.c: In function ‘H5S_select_iterate’:
../../src/H5Sselect.c:1212:1: warning: stack usage is 19392 bytes [-Wstack-usage=]
 H5S_select_iterate(void *buf, const H5T_t *type, const H5S_t *space,
 ^
../../src/H5Sselect.c:1333:1: warning: the frame size of 19336 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 }   /* end H5S_select_iterate() */
 ^
../../src/H5SL.c: In function ‘H5SL_remove_first’:
../../src/H5SL.c:1233:30: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     size_t      level = slist->curr_level;      /* Skip list level */
                              ^
../../src/H5Sselect.c: In function ‘H5S_select_fill’:
../../src/H5Sselect.c:2001:1: warning: stack usage is 18784 bytes [-Wstack-usage=]
 H5S_select_fill(const void *fill, size_t fill_size, const H5S_t *space, void *_buf)
 ^
../../src/H5Sselect.c:2063:1: warning: the frame size of 18736 bytes is larger than 16384 bytes [-Wframe-larger-than=]
 }   /* H5S_select_fill() */
 ^
  CC       H5SMmessage.lo
../../src/H5SL.c: In function ‘H5SL_iterate’:
../../src/H5SL.c:2148:46: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             if((ret_value = (op)(node->item, (void *)node->key, op_data)) != 0)
                                              ^
../../src/H5SL.c: In function ‘H5SL_try_free_safe’:
../../src/H5SL.c:2307:44: warning: cast discards ‘__attribute__((const))’ qualifier from pointer target type [-Wcast-qual]
             if((op_ret = (op)(node->item , (void *)node->key, op_data)) < 0)
                                            ^
  CC       H5SMtest.lo
  CC       H5ST.lo
  CC       H5T.lo
  CC       H5Tarray.lo
  CC       H5Tbit.lo
  CC       H5Tcommit.lo
  CC       H5Tcompound.lo
  CC       H5Tconv.lo
../../src/H5T.c: In function ‘H5T_path_find’:
../../src/H5T.c:4456:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if(NULL == (path->src = H5T_copy(src, H5T_COPY_ALL)))
         ^
../../src/H5T.c:3097:1: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5T_copy(H5T_t *old_dt, H5T_copy_t method)
 ^
../../src/H5T.c:4458:9: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
         if(NULL == (path->dst = H5T_copy(dst, H5T_COPY_ALL)))
         ^
../../src/H5T.c:3097:1: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5T_copy(H5T_t *old_dt, H5T_copy_t method)
 ^
../../src/H5T.c: At top level:
../../src/H5T.c:5460:1: warning: no previous prototype for ‘H5T_patch_vlen_file’ [-Wmissing-prototypes]
 H5T_patch_vlen_file(H5T_t *dt, H5F_t *f)
 ^
  CC       H5Tcset.lo
../../src/H5Tcompound.c: In function ‘H5T__insert’:
../../src/H5Tcompound.c:482:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     parent->shared->u.compnd.memb[idx].type = H5T_copy(member, H5T_COPY_ALL);
     ^
In file included from ../../src/H5Tpkg.h:37:0,
                 from ../../src/H5Tcompound.c:36:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
  CC       H5Tdbg.lo
  CC       H5Tdeprec.lo
  CC       H5Tenum.lo
  CC       H5Tfields.lo
  CC       H5Tfixed.lo
  CC       H5Tfloat.lo
../../src/H5Tdbg.c: In function ‘H5T_debug’:
../../src/H5Tdbg.c:173:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dt->shared->type) {
     ^
../../src/H5Tdbg.c:173:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:173:5: warning: enumeration value ‘H5T_ARRAY’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:173:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:247:2: warning: enumeration value ‘H5T_ORDER_ERROR’ not handled in switch [-Wswitch-enum]
  switch(dt->shared->u.atomic.order) {
  ^
../../src/H5Tdbg.c:247:2: warning: enumeration value ‘H5T_ORDER_MIXED’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:279:17: warning: enumeration value ‘H5T_SGN_ERROR’ not handled in switch [-Wswitch-enum]
                 switch(dt->shared->u.atomic.u.i.sign) {
                 ^
../../src/H5Tdbg.c:279:17: warning: enumeration value ‘H5T_NSGN’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:298:17: warning: enumeration value ‘H5T_NORM_ERROR’ not handled in switch [-Wswitch-enum]
                 switch(dt->shared->u.atomic.u.f.norm) {
                 ^
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
  switch(dt->shared->type) {
  ^
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_COMPOUND’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_ARRAY’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:277:2: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Tdbg.c:351:9: warning: enumeration value ‘H5T_LOC_BADLOC’ not handled in switch [-Wswitch-enum]
         switch(dt->shared->u.vlen.loc) {
         ^
../../src/H5Tdbg.c:351:9: warning: enumeration value ‘H5T_LOC_MAXLOC’ not handled in switch [-Wswitch-enum]
../../src/H5Tconv.c: In function ‘H5T__conv_float_ullong’:
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8690:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(FLOAT, ULLONG, float, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c: In function ‘H5T__conv_double_ullong’:
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8742:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(DOUBLE, ULLONG, double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c: In function ‘H5T__conv_ldouble_ullong’:
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:719:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DALIGN,POST_SALIGN,POST_DALIGN,GUTS,s,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:723:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SALIGN,PRE_DNOALIGN,POST_SALIGN,POST_DNOALIGN,GUTS,s,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:726:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DALIGN,POST_SNOALIGN,POST_DALIGN,GUTS,src,d,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:549:53: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     if(*(S) > (ST)(D_MAX) || (sprec < dprec && *(S) == (ST)(D_MAX))) {        \
                                                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c:567:21: warning: comparing floating point with == or != is unsafe [-Wfloat-equal]
     } else if (*(S) != (ST)((DT)(*(S)))) {                                    \
                     ^
../../src/H5private.h:2081:28: note: in expansion of macro ‘H5T_CONV_Fx_CORE’
 #define H5_GLUE(x,y)       x##y
                            ^
../../src/H5Tconv.c:850:9: note: in expansion of macro ‘H5_GLUE’
         H5_GLUE(GUTS,_CORE)(S,D,ST,DT,D_MIN,D_MAX)
         ^
../../src/H5Tconv.c:831:9: note: in expansion of macro ‘H5T_CONV_LOOP_GUTS’
         H5T_CONV_LOOP_GUTS(GUTS,S,D,ST,DT,D_MIN,D_MAX)         \
         ^
../../src/H5Tconv.c:815:9: note: in expansion of macro ‘H5T_CONV_LOOP’
         H5T_CONV_LOOP(PRE_SALIGN_GUTS,PRE_DALIGN_GUTS,POST_SALIGN_GUTS,POST_DALIGN_GUTS,GUTS,S,D,ST,DT,D_MIN,D_MAX) \
         ^
../../src/H5Tconv.c:729:17: note: in expansion of macro ‘H5T_CONV_LOOP_OUTER’
                 H5T_CONV_LOOP_OUTER(PRE_SNOALIGN,PRE_DNOALIGN,POST_SNOALIGN,POST_DNOALIGN,GUTS,src,dst,ST,DT,D_MIN,D_MAX) \
                 ^
../../src/H5Tconv.c:590:5: note: in expansion of macro ‘H5T_CONV’
     H5T_CONV(H5T_CONV_Fx, STYPE, DTYPE, ST, DT, D_MIN, D_MAX, Y)              \
     ^
../../src/H5Tconv.c:8797:5: note: in expansion of macro ‘H5T_CONV_Fx’
     H5T_CONV_Fx(LDOUBLE, ULLONG, long double, unsigned long long, 0, ULLONG_MAX);
     ^
../../src/H5Tconv.c: In function ‘H5T__conv_f_i’:
../../src/H5Tconv.c:8915:24: warning: cast from function call of type ‘double’ to non-matching type ‘long unsigned int’ [-Wbad-function-cast]
             buf_size = (size_t)HDpow((double)2.0f, (double)src.u.f.esize) / 8 + 1;
                        ^
../../src/H5Tconv.c:8991:38: warning: conversion to ‘hssize_t’ from ‘uint64_t’ may change the sign of the result [-Wsign-conversion]
                 sign = H5T__bit_get_d(s, src.u.f.sign, (size_t)1);
                                      ^
../../src/H5Tconv.c:9118:38: warning: conversion to ‘hssize_t’ from ‘uint64_t’ may change the sign of the result [-Wsign-conversion]
                 expo = H5T__bit_get_d(s, src.u.f.epos, src.u.f.esize);
                                      ^
../../src/H5Tconv.c:9125:21: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
                     expo -= (src.u.f.ebias-1);
                     ^
../../src/H5Tconv.c:9125:26: warning: conversion to ‘hssize_t’ from ‘long long unsigned int’ may change the sign of the result [-Wsign-conversion]
                     expo -= (src.u.f.ebias-1);
                          ^
../../src/H5Tconv.c:9127:21: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
                     expo -= src.u.f.ebias;
                     ^
../../src/H5Tconv.c:9127:26: warning: conversion to ‘hssize_t’ from ‘long long unsigned int’ may change the sign of the result [-Wsign-conversion]
                     expo -= src.u.f.ebias;
                          ^
../../src/H5Tconv.c:9157:17: warning: conversion to ‘long long unsigned int’ from ‘hssize_t’ may change the sign of the result [-Wsign-conversion]
                 H5T__bit_shift(int_buf, (ssize_t)(expo-src.u.f.msize), (size_t)0, buf_size * 8);
                 ^
../../src/H5Tconv.c:9362:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     sp += direction * buf_stride;
                     ^
../../src/H5Tconv.c:9363:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     dp += direction * buf_stride;
                     ^
../../src/H5Tconv.c:9365:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     sp += direction * src_p->shared->size;
                     ^
../../src/H5Tconv.c:9366:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     dp += direction * dst_p->shared->size;
                     ^
../../src/H5Tconv.c: In function ‘H5T__conv_i_f’:
../../src/H5Tconv.c:9712:28: warning: cast from function call of type ‘double’ to non-matching type ‘long long unsigned int’ [-Wbad-function-cast]
                 expo_max = (hsize_t)HDpow((double)2.0f, (double)dst.u.f.esize) - 1;
                            ^
../../src/H5Tconv.c:9791:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     sp += direction * buf_stride;
                     ^
../../src/H5Tconv.c:9792:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     dp += direction * buf_stride;
                     ^
../../src/H5Tconv.c:9794:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     sp += direction * src_p->shared->size;
                     ^
../../src/H5Tconv.c:9795:21: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                     dp += direction * dst_p->shared->size;
                     ^
In file included from ../../src/H5Tconv.c:31:0:
../../src/H5Tconv.c: At top level:
../../src/H5private.h:1819:15: warning: ‘H5_interface_initialize_g’ defined but not used [-Wunused-variable]
 static int    H5_interface_initialize_g = 0;
               ^
../../src/H5Tconv.c:983:1: warning: ‘H5T_init_conv_interface’ defined but not used [-Wunused-function]
 H5T_init_conv_interface(void)
 ^
../../src/H5Tenum.c: In function ‘H5T__enum_create’:
../../src/H5Tenum.c:134:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     ret_value->shared->parent = H5T_copy(parent, H5T_COPY_ALL);
     ^
In file included from ../../src/H5Tpkg.h:37:0,
                 from ../../src/H5Tenum.c:29:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Tenum.c: In function ‘H5T_enum_nameof’:
../../src/H5Tenum.c:435:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(NULL == (copied_dt = H5T_copy(dt, H5T_COPY_ALL)))
     ^
In file included from ../../src/H5Tpkg.h:37:0,
                 from ../../src/H5Tenum.c:29:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Tenum.c: In function ‘H5T_enum_valueof’:
../../src/H5Tenum.c:574:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if (NULL==(copied_dt=H5T_copy(dt, H5T_COPY_ALL)))
     ^
In file included from ../../src/H5Tpkg.h:37:0,
                 from ../../src/H5Tenum.c:29:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Tfixed.c: In function ‘H5Tget_sign’:
../../src/H5Tfixed.c:80:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tfixed.c: In function ‘H5Tset_sign’:
../../src/H5Tfixed.c:159:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
  CC       H5Tinit.lo
  CC       H5Tnative.lo
  CC       H5Toffset.lo
  CC       H5Toh.lo
  CC       H5Topaque.lo
  CC       H5Torder.lo
  CC       H5Tpad.lo
../../src/H5Topaque.c: In function ‘H5Tset_tag’:
../../src/H5Topaque.c:78:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Topaque.c: In function ‘H5Tget_tag’:
../../src/H5Topaque.c:125:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tpad.c: In function ‘H5Tget_pad’:
../../src/H5Tpad.c:81:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tpad.c: In function ‘H5Tset_pad’:
../../src/H5Tpad.c:125:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
  CC       H5Tprecis.lo
  CC       H5Tstrpad.lo
  CC       H5Tvisit.lo
  CC       H5Tvlen.lo
  CC       H5TS.lo
  CC       H5VM.lo
  CC       H5WB.lo
../../src/H5Tstrpad.c: In function ‘H5Tget_strpad’:
../../src/H5Tstrpad.c:84:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tstrpad.c: In function ‘H5Tset_strpad’:
../../src/H5Tstrpad.c:141:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tvlen.c: In function ‘H5Tvlen_create’:
../../src/H5Tvlen.c:114:22: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if(NULL == (base = H5I_object_verify(base_id, H5I_DATATYPE)))
                      ^
../../src/H5Tvlen.c: In function ‘H5T__vlen_create’:
../../src/H5Tvlen.c:166:5: warning: passing argument 1 of ‘H5T_copy’ discards ‘const’ qualifier from pointer target type [enabled by default]
     if(NULL == (dt->shared->parent = H5T_copy(base, H5T_COPY_ALL)))
     ^
In file included from ../../src/H5Oprivate.h:39:0,
                 from ../../src/H5Dprivate.h:25,
                 from ../../src/H5Tvlen.c:26:
../../src/H5Tprivate.h:107:15: note: expected ‘struct H5T_t *’ but argument is of type ‘const struct H5T_t *’
 H5_DLL H5T_t *H5T_copy(H5T_t *old_dt, H5T_copy_t method);
               ^
../../src/H5Tvlen.c: In function ‘H5T__vlen_set_loc’:
../../src/H5Tvlen.c:268:59: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
                 dt->shared->size = 4 + H5F_SIZEOF_ADDR(f) + 4;
                                                           ^
../../src/H5Tvlen.c:220:9: warning: enumeration value ‘H5T_LOC_MAXLOC’ not handled in switch [-Wswitch-enum]
         switch(loc) {
         ^
../../src/H5Tprecis.c: In function ‘H5Tget_precision’:
../../src/H5Tprecis.c:88:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tprecis.c: In function ‘H5Tset_precision’:
../../src/H5Tprecis.c:177:21: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if (NULL == (dt = H5I_object_verify(type_id,H5I_DATATYPE)))
                     ^
../../src/H5Tvlen.c: In function ‘H5T_vlen_str_mem_write’:
../../src/H5Tvlen.c:717:20: warning: request for implicit conversion from ‘void *’ to ‘char *’ not permitted in C++ [-Wc++-compat]
         if(NULL==(t=(vl_alloc_info->alloc_func)((seq_len+1)*base_size,vl_alloc_info->alloc_info)))
                    ^
../../src/H5Tvlen.c:721:20: warning: request for implicit conversion from ‘void *’ to ‘char *’ not permitted in C++ [-Wc++-compat]
         if(NULL==(t=H5MM_malloc((seq_len+1)*base_size)))
                    ^
../../src/H5Tprecis.c: In function ‘H5T_set_precision’:
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
      switch (dt->shared->type) {
      ^
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_COMPOUND’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_ARRAY’ not handled in switch [-Wswitch-enum]
../../src/H5Tprecis.c:266:6: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c: In function ‘H5T_vlen_disk_isnull’:
../../src/H5Tvlen.c:845:23: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
     H5F_addr_decode(f,(const uint8_t **)&vl,&addr);
                       ^
../../src/H5Tvlen.c: In function ‘H5T_vlen_disk_read’:
../../src/H5Tvlen.c:882:23: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
     H5F_addr_decode(f,(const uint8_t **)&vl,&(hobjid.addr));
                       ^
../../src/H5Tvlen.c: In function ‘H5T_vlen_disk_write’:
../../src/H5Tvlen.c:935:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));
                            ^
../../src/H5Tvlen.c: In function ‘H5T_vlen_disk_setnull’:
../../src/H5Tvlen.c:997:28: warning: to be safe all intermediate pointers in cast from ‘uint8_t **’ to ‘const uint8_t **’ must be ‘const’ qualified [-Wcast-qual]
         H5F_addr_decode(f, (const uint8_t **)&bg, &(bg_hobjid.addr));
                            ^
../../src/H5Tvlen.c: In function ‘H5T_vlen_reclaim_recurse’:
../../src/H5Tvisit.c: In function ‘H5T__visit’:
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dt->shared->type) {
     ^
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dt->shared->type) {
     ^
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_INTEGER’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_FLOAT’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_INTEGER’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_FLOAT’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c:1053:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Tvisit.c:117:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Tvlen.c: In function ‘H5T_vlen_reclaim’:
../../src/H5Tvlen.c:1168:20: warning: request for implicit conversion from ‘void *’ to ‘struct H5T_t *’ not permitted in C++ [-Wc++-compat]
     if(NULL == (dt = H5I_object_verify(type_id, H5I_DATATYPE)))
                    ^
In file included from ../../src/H5private.h:48:0,
                 from ../../src/H5VM.c:20:
../../src/H5VM.c: In function ‘H5VM_hyper_disjointp’:
../../src/H5VM.c:419:23: warning: comparison is always true due to limited range of data type [-Wtype-limits]
         HDassert(size1[u] < HSIZET_MAX);
                       ^
../../src/H5VM.c:419:9: note: in expansion of macro ‘HDassert’
         HDassert(size1[u] < HSIZET_MAX);
         ^
../../src/H5VM.c:420:23: warning: comparison is always true due to limited range of data type [-Wtype-limits]
         HDassert(size2[u] < HSIZET_MAX);
                       ^
../../src/H5VM.c:420:9: note: in expansion of macro ‘HDassert’
         HDassert(size2[u] < HSIZET_MAX);
         ^
  CC       H5Z.lo
  CC       H5Zdeflate.lo
  CC       H5Zfletcher32.lo
  CC       H5Znbit.lo
  CC       H5Zshuffle.lo
  CC       H5Zszip.lo
  CC       H5Zscaleoffset.lo
../../src/H5Znbit.c: In function ‘H5Z_calc_parms_array’:
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dtype_base_class) {
     ^
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:251:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c: In function ‘H5Z_calc_parms_compound’:
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
         switch(dtype_member_class) {
         ^
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:336:9: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c: In function ‘H5Z_set_parms_nooptype’:
../../src/H5Znbit.c:406:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[cd_values_index++] = dtype_size;
     ^
../../src/H5Znbit.c: In function ‘H5Z_set_parms_atomic’:
../../src/H5Znbit.c:448:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[cd_values_index++] = dtype_size;
     ^
../../src/H5Znbit.c:455:5: warning: enumeration value ‘H5T_ORDER_ERROR’ not handled in switch [-Wswitch-enum]
     switch(dtype_order) {
     ^
../../src/H5Znbit.c:455:5: warning: enumeration value ‘H5T_ORDER_VAX’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:455:5: warning: enumeration value ‘H5T_ORDER_MIXED’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:455:5: warning: enumeration value ‘H5T_ORDER_NONE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:477:5: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     if(dtype_precision > dtype_size * 8 || (dtype_precision + dtype_offset) > dtype_size * 8
     ^
../../src/H5Znbit.c:482:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[cd_values_index++] = dtype_precision;
     ^
../../src/H5Znbit.c:485:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     cd_values[cd_values_index++] = dtype_offset;
     ^
../../src/H5Znbit.c: In function ‘H5Z_set_parms_array’:
../../src/H5Znbit.c:534:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[cd_values_index++]=dtype_size;
     ^
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dtype_base_class) {
     ^
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:545:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c: In function ‘H5Z_set_parms_compound’:
../../src/H5Znbit.c:624:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[cd_values_index++] = dtype_size;
     ^
../../src/H5Znbit.c:631:5: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
     cd_values[cd_values_index++] = nmembers;
     ^
../../src/H5Znbit.c:647:9: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
         cd_values[cd_values_index++] = dtype_member_offset;
         ^
../../src/H5Znbit.c:688:77: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
                     cd_values[cd_values_index++] = dtype_next_member_offset - dtype_member_offset;
                                                                             ^
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
         switch(dtype_member_class) {
         ^
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:650:9: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c: In function ‘H5Z_set_local_nbit’:
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dtype_class) {
     ^
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:755:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_NO_CLASS’ not handled in switch [-Wswitch-enum]
     switch(dtype_class) {
     ^
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_TIME’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_STRING’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_BITFIELD’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_OPAQUE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_REFERENCE’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_ENUM’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_VLEN’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:810:5: warning: enumeration value ‘H5T_NCLASSES’ not handled in switch [-Wswitch-enum]
../../src/H5Znbit.c:835:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[0] = cd_values_actual_nparms;
     ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_decompress_one_byte’:
../../src/H5Znbit.c:970:7: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       data[data_offset + k] =
       ^
../../src/H5Znbit.c:971:58: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len)) << uchar_offset;
                                                          ^
../../src/H5Znbit.c:974:7: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       data[data_offset + k] =
       ^
../../src/H5Znbit.c:975:59: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len)) << uchar_offset;
                                                           ^
../../src/H5Znbit.c:981:7: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       data[data_offset + k] |=
       ^
../../src/H5Znbit.c:981:29: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       data[data_offset + k] |=
                             ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_decompress_one_nooptype’:
../../src/H5Znbit.c:1000:72: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));
                                                                        ^
../../src/H5Znbit.c:1000:58: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       data[data_offset + i] = ((val & ~(~0 << *buf_len)) << (dat_len - *buf_len));
                                                          ^
../../src/H5Znbit.c:1001:18: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       dat_len -= *buf_len;
                  ^
../../src/H5Znbit.c:1006:42: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));
                                          ^
../../src/H5Znbit.c:1006:29: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       data[data_offset + i] |= ((val >> (*buf_len - dat_len)) & ~(~0 << dat_len));
                             ^
../../src/H5Znbit.c:1007:7: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       *buf_len -= dat_len;
       ^
../../src/H5Znbit.c:1007:16: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
       *buf_len -= dat_len;
                ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_decompress_one_atomic’:
../../src/H5Znbit.c:1019:26: warning: conversion to ‘int’ from ‘size_t’ may alter its value [-Wconversion]
    datatype_len = p.size * 8;
                          ^
../../src/H5Znbit.c: In function ‘H5Z__nbit_decompress_one_array’:
../../src/H5Znbit.c:1064:27: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.order = parms[parms_index++];
                           ^
../../src/H5Znbit.c:1065:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.precision = parms[parms_index++];
                               ^
../../src/H5Znbit.c:1066:28: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.offset = parms[parms_index++];
                            ^
../../src/H5Znbit.c:1069:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
            if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                           ^
../../src/H5Znbit.c:1069:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
            if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                                                                    ^
../../src/H5Znbit.c:1072:27: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
            n = total_size / p.size;
                           ^
../../src/H5Znbit.c: In function ‘H5Z__nbit_decompress_one_compound’:
../../src/H5Znbit.c:1138:30: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.order = parms[parms_index++];
                              ^
../../src/H5Znbit.c:1139:34: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.precision = parms[parms_index++];
                                  ^
../../src/H5Znbit.c:1140:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.offset = parms[parms_index++];
                               ^
../../src/H5Znbit.c:1143:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
               if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                              ^
../../src/H5Znbit.c:1143:71: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
               if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                                                                       ^
../../src/H5Znbit.c: In function ‘H5Z__nbit_decompress’:
../../src/H5Znbit.c:1198:27: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.order = parms[5];
                           ^
../../src/H5Znbit.c:1199:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.precision = parms[6];
                               ^
../../src/H5Znbit.c:1200:28: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.offset = parms[7];
                            ^
../../src/H5Znbit.c:1203:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
            if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                           ^
../../src/H5Znbit.c:1203:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
            if(p.precision > p.size * 8 || (p.precision + p.offset) > p.size * 8)
                                                                    ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress_one_byte’:
../../src/H5Znbit.c:1243:4: warning: conversion to ‘size_t’ from ‘int’ may change the sign of the result [-Wsign-conversion]
    val = data[data_offset + k];
    ^
../../src/H5Znbit.c:1249:14: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
          val >>= 8 - dat_len;
              ^
../../src/H5Znbit.c:1254:11: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       val >>= p.offset % 8;
           ^
../../src/H5Znbit.c:1259:18: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       buffer[*j] |= (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
                  ^
../../src/H5Znbit.c:1262:18: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
                  ^
../../src/H5Znbit.c:1267:45: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
                                             ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress_one_nooptype’:
../../src/H5Znbit.c:1284:40: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
                                        ^
../../src/H5Znbit.c:1284:18: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       buffer[*j] |= (val >> (dat_len - *buf_len)) & ~(~0 << *buf_len);
                  ^
../../src/H5Znbit.c:1285:18: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       dat_len -= *buf_len;
                  ^
../../src/H5Znbit.c:1289:49: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
                                                 ^
../../src/H5Znbit.c:1289:45: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
       buffer[*j] = (val & ~(~0 << dat_len)) << (*buf_len - dat_len);
                                             ^
../../src/H5Znbit.c:1290:7: warning: conversion to ‘unsigned int’ from ‘int’ may change the sign of the result [-Wsign-conversion]
       *buf_len -= dat_len;
       ^
../../src/H5Znbit.c:1290:16: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
       *buf_len -= dat_len;
                ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress_one_atomic’:
../../src/H5Znbit.c:1301:26: warning: conversion to ‘int’ from ‘size_t’ may alter its value [-Wconversion]
    datatype_len = p.size * 8;
                          ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress_one_array’:
../../src/H5Znbit.c:1342:27: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.order = parms[parms_index++];
                           ^
../../src/H5Znbit.c:1343:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.precision = parms[parms_index++];
                               ^
../../src/H5Znbit.c:1344:28: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.offset = parms[parms_index++];
                            ^
../../src/H5Znbit.c:1345:26: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
            n = total_size/p.size;
                          ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress_one_compound’:
../../src/H5Znbit.c:1395:30: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.order = parms[parms_index++];
                              ^
../../src/H5Znbit.c:1396:34: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.precision = parms[parms_index++];
                                  ^
../../src/H5Znbit.c:1397:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
               p.offset = parms[parms_index++];
                               ^
../../src/H5Znbit.c: In function ‘H5Z_nbit_compress’:
../../src/H5Znbit.c:1440:27: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.order = parms[5];
                           ^
../../src/H5Znbit.c:1441:31: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.precision = parms[6];
                               ^
../../src/H5Znbit.c:1442:28: warning: conversion to ‘int’ from ‘unsigned int’ may change the sign of the result [-Wsign-conversion]
            p.offset = parms[7];
                            ^
  CC       H5Ztrans.lo
../../src/H5Zscaleoffset.c: In function ‘H5Z_set_local_scaleoffset’:
../../src/H5Zscaleoffset.c:938:5: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
     cd_values[H5Z_SCALEOFFSET_PARM_SIZE] = dtype_size;
     ^
../../src/H5Zscaleoffset.c:967:5: warning: enumeration value ‘H5T_ORDER_MIXED’ not handled in switch [-Wswitch-enum]
     switch(dtype_order) {
     ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_filter_scaleoffset’:
../../src/H5Zscaleoffset.c:1063:5: warning: enumeration value ‘H5T_ORDER_MIXED’ not handled in switch [-Wswitch-enum]
     switch(H5T_native_order_g) {
     ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_scaleoffset_convert’:
../../src/H5Zscaleoffset.c:1326:48: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
        for(i = 0; i < d_nelmts * dtype_size; i += dtype_size)
                                                ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_scaleoffset_precompress_fd’:
../../src/H5Zscaleoffset.c:393:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:393:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:398:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:398:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:403:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:403:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:558:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:559:38: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                      ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:559:66: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                  ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:559:89: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                                         ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:486:37: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                               buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \
                                     ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:486:63: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                               buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));  \
                                                               ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:485:50: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
             *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \
                                                  ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:494:38: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                      ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:494:64: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                                                ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:493:51: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
             *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \
                                                   ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:502:43: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                     buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                           ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:502:69: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                     buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                                                     ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:501:56: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
             *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \
                                                        ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:393:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:393:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:398:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:398:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:403:33: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                 ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:403:59: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       if(H5Z_scaleoffset_rnd(max*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val))       \
                                                           ^
../../src/H5Zscaleoffset.c:565:7: note: in expansion of macro ‘H5Z_scaleoffset_check_3’
       H5Z_scaleoffset_check_3(i, type, max, min, minbits, D_val)                         \
       ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:566:38: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                      ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:566:66: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                  ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:566:89: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                                         ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:514:34: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                            buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \
                                  ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:514:60: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                            buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));     \
                                                            ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:513:47: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
          *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \
                                               ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:518:35: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \
                                   ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:518:61: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                             buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val));    \
                                                             ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:517:48: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
          *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \
                                                ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:522:40: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                  buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                        ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:522:66: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                                  buf[i]*HDpow(10.0f, D_val) - min*HDpow(10.0f, D_val)); \
                                                                  ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:521:53: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
          *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \
                                                     ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1515:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(float, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:559:89: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                                         ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:485:50: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
             *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                    \
                                                  ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:493:51: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
             *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                   \
                                                   ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:501:56: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
             *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                              \
                                                        ^
../../src/H5Zscaleoffset.c:562:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_1’
          H5Z_scaleoffset_modify_1(i, type, buf, d_nelmts, filval, minbits, min, D_val)   \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:566:89: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
       span = H5Z_scaleoffset_rnd(max * HDpow(10.0f, D_val) - min * HDpow(10.0f, D_val)) + 1; \
                                                                                         ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:513:47: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
          *(int *)&buf[i] = H5Z_scaleoffset_rnd(                                       \
                                               ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:517:48: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
          *(long *)&buf[i] = H5Z_scaleoffset_rnd(                                      \
                                                ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c:521:53: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
          *(long long *)&buf[i] = H5Z_scaleoffset_rnd(                                 \
                                                     ^
../../src/H5Zscaleoffset.c:569:10: note: in expansion of macro ‘H5Z_scaleoffset_modify_2’
          H5Z_scaleoffset_modify_2(i, type, buf, d_nelmts, min, D_val)                    \
          ^
../../src/H5Zscaleoffset.c:1518:7: note: in expansion of macro ‘H5Z_scaleoffset_precompress_3’
       H5Z_scaleoffset_precompress_3(double, data, d_nelmts,
       ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_scaleoffset_postdecompress_fd’:
../../src/H5Zscaleoffset.c:627:76: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                   filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \
                                                                            ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:627:26: warning: implicit conversion from ‘float’ to ‘double’ to match other result of conditional [-Wdouble-promotion]
                   filval : (double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);        \
                          ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:631:77: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                   filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
                                                                             ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:631:26: warning: implicit conversion from ‘float’ to ‘double’ to match other result of conditional [-Wdouble-promotion]
                   filval : (double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
                          ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:635:82: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
                   filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \
                                                                                  ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:635:26: warning: implicit conversion from ‘float’ to ‘double’ to match other result of conditional [-Wdouble-promotion]
                   filval : (double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min);  \
                          ^
../../src/H5Zscaleoffset.c:667:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_3’
       H5Z_scaleoffset_modify_3(i, type, buf, d_nelmts, filval, minbits, min, D_val)    \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:645:74: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
          buf[i] = (type)((double)(*(int *)&buf[i]) / HDpow(10.0f, D_val) + min);       \
                                                                          ^
../../src/H5Zscaleoffset.c:669:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_4’
       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:648:75: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
          buf[i] = (type)((double)(*(long *)&buf[i]) / HDpow(10.0f, D_val) + min);      \
                                                                           ^
../../src/H5Zscaleoffset.c:669:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_4’
       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c:651:80: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
          buf[i] = (type)((double)(*(long long *)&buf[i]) / HDpow(10.0f, D_val) + min); \
                                                                                ^
../../src/H5Zscaleoffset.c:669:7: note: in expansion of macro ‘H5Z_scaleoffset_modify_4’
       H5Z_scaleoffset_modify_4(i, type, buf, d_nelmts, min, D_val)                     \
       ^
../../src/H5Zscaleoffset.c:1538:7: note: in expansion of macro ‘H5Z_scaleoffset_postdecompress_3’
       H5Z_scaleoffset_postdecompress_3(float, data, d_nelmts, filavail,
       ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_scaleoffset_decompress_one_atomic’:
../../src/H5Zscaleoffset.c:1598:23: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
    dtype_len = p.size * 8;
                       ^
../../src/H5Zscaleoffset.c:1601:28: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
       begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;
                            ^
../../src/H5Zscaleoffset.c: In function ‘H5Z_scaleoffset_compress_one_atomic’:
../../src/H5Zscaleoffset.c:1681:23: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
    dtype_len = p.size * 8;
                       ^
../../src/H5Zscaleoffset.c:1684:28: warning: conversion to ‘unsigned int’ from ‘size_t’ may alter its value [-Wconversion]
       begin_i = p.size - 1 - (dtype_len - p.minbits) / 8;
                            ^
../../src/H5Ztrans.c: In function ‘H5Z_parse_term’:
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_ERROR’ not handled in switch [-Wswitch-enum]
         switch (current->tok_type) {
         ^
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_INTEGER’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_FLOAT’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_SYMBOL’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_PLUS’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_MINUS’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:687:9: warning: enumeration value ‘H5Z_XFORM_LPAREN’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c: In function ‘H5Z_parse_factor’:
../../src/H5Ztrans.c:773:5: warning: enumeration value ‘H5Z_XFORM_ERROR’ not handled in switch [-Wswitch-enum]
     switch (current->tok_type) {
     ^
../../src/H5Ztrans.c:773:5: warning: enumeration value ‘H5Z_XFORM_MULT’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:773:5: warning: enumeration value ‘H5Z_XFORM_DIVIDE’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c: In function ‘H5Z_xform_eval_full’:
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘signed char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short int’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘short unsigned int’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1092:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1092:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, +, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘signed char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short int’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘short unsigned int’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1096:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1096:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, -, array_size)
    ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘char’ from ‘int’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘unsigned char’ from ‘int’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘signed char’ from ‘int’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short int’ from ‘int’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘short unsigned int’ from ‘int’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1100:45: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
                                             ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1100:3: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
   H5Z_XFORM_TYPE_OP(resl, resr, array_type, *, array_size)
   ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘unsigned char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘signed char’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘signed char’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘short int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘short int’ from ‘int’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:153:16: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *pl = *pl OP *pr;                                            \
                ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘short unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:179:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long, OP, (SIZE))  \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:181:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:183:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long long int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:126:11: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = *p OP tree_val;                                            \
           ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:143:23: warning: conversion to ‘double’ from ‘long long unsigned int’ may alter its value [-Wconversion]
      *p = tree_val OP *p;                                            \
                       ^
../../src/H5Ztrans.c:185:2: note: in expansion of macro ‘H5Z_XFORM_DO_OP1’
  H5Z_XFORM_DO_OP1((RESL), (RESR), unsigned long long, OP, (SIZE)) \
  ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘long long unsigned int’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:126:14: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = *p OP tree_val;                                            \
              ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: implicit conversion from ‘float’ to ‘double’ to match other operand of binary expression [-Wdouble-promotion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1104:46: warning: conversion to ‘float’ from ‘double’ may alter its value [-Wconversion]
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
                                              ^
../../src/H5Ztrans.c:143:20: note: in definition of macro ‘H5Z_XFORM_DO_OP1’
      *p = tree_val OP *p;                                            \
                    ^
../../src/H5Ztrans.c:1104:4: note: in expansion of macro ‘H5Z_XFORM_TYPE_OP’
    H5Z_XFORM_TYPE_OP(resl, resr, array_type, /, array_size)
    ^
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_ERROR’ not handled in switch [-Wswitch-enum]
  switch (tree->type) {
  ^
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_INTEGER’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_FLOAT’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_SYMBOL’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_LPAREN’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_RPAREN’ not handled in switch [-Wswitch-enum]
../../src/H5Ztrans.c:1090:2: warning: enumeration value ‘H5Z_XFORM_END’ not handled in switch [-Wswitch-enum]
  CCLD     libhdf5.la
gmake -j 8  check-TESTS
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Nothing to be done for `_exec_check-s'.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
gmake[1]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/src'
Making check in test
gmake[1]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[1]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     testhdf5
  CCLD     lheap
  CCLD     ohdr
  CCLD     stab
  CCLD     gheap
  CCLD     cache
  CCLD     cache_api
  CCLD     pool
  CCLD     accum
  CCLD     hyperslab
  CCLD     istore
  CCLD     bittests
  CCLD     dt_arith
  CCLD     dtypes
  CCLD     dsets
  CCLD     cmpd_dset
  CCLD     filter_fail
  CCLD     extend
  CCLD     external
  CCLD     efc
  CCLD     objcopy
  CCLD     links
  CCLD     unlink
  CCLD     big
  CCLD     mtime
  CCLD     fillval
  CCLD     mount
  CCLD     flush1
  CCLD     flush2
  CCLD     app_ref
  CCLD     enum
  CCLD     set_extent
  CCLD     ttsafe
  CCLD     getname
  CCLD     vfd
  CCLD     ntypes
  CCLD     dangle
  CCLD     dtransform
  CCLD     reserved
  CCLD     cross_read
  CCLD     freespace
  CCLD     mf
  CCLD     btree2
  CCLD     fheap
  CCLD     file_image
  CCLD     unregister
  CCLD     error_test
  CCLD     err_compat
  CCLD     tcheck_version
  CCLD     testmeta
  CCLD     links_env
  CCLD     plugin
gmake -j 8  testhdf5 lheap ohdr stab gheap cache cache_api pool accum hyperslab istore bittests dt_arith dtypes dsets cmpd_dset filter_fail extend external efc objcopy links unlink big mtime fillval mount flush1 flush2 app_ref enum set_extent ttsafe getname vfd ntypes dangle dtransform reserved cross_read freespace mf btree2 fheap file_image unregister error_test err_compat tcheck_version testmeta links_env plugin testerror.sh testlibinfo.sh testcheck_version.sh testlinks_env.sh test_plugin.sh
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
gmake[2]: `testhdf5' is up to date.
gmake[2]: `lheap' is up to date.
gmake[2]: `ohdr' is up to date.
gmake[2]: `stab' is up to date.
gmake[2]: `gheap' is up to date.
gmake[2]: `cache' is up to date.
gmake[2]: `cache_api' is up to date.
gmake[2]: `pool' is up to date.
gmake[2]: `accum' is up to date.
gmake[2]: `hyperslab' is up to date.
gmake[2]: `istore' is up to date.
gmake[2]: `bittests' is up to date.
gmake[2]: `dt_arith' is up to date.
gmake[2]: `dtypes' is up to date.
gmake[2]: `dsets' is up to date.
gmake[2]: `cmpd_dset' is up to date.
gmake[2]: `filter_fail' is up to date.
gmake[2]: `extend' is up to date.
gmake[2]: `external' is up to date.
gmake[2]: `efc' is up to date.
gmake[2]: `objcopy' is up to date.
gmake[2]: `links' is up to date.
gmake[2]: `unlink' is up to date.
gmake[2]: `big' is up to date.
gmake[2]: `mtime' is up to date.
gmake[2]: `fillval' is up to date.
gmake[2]: `mount' is up to date.
gmake[2]: `flush1' is up to date.
gmake[2]: `flush2' is up to date.
gmake[2]: `app_ref' is up to date.
gmake[2]: `enum' is up to date.
gmake[2]: `set_extent' is up to date.
gmake[2]: `ttsafe' is up to date.
gmake[2]: `getname' is up to date.
gmake[2]: `vfd' is up to date.
gmake[2]: `ntypes' is up to date.
gmake[2]: `dangle' is up to date.
gmake[2]: `dtransform' is up to date.
gmake[2]: `reserved' is up to date.
gmake[2]: `cross_read' is up to date.
gmake[2]: `freespace' is up to date.
gmake[2]: `mf' is up to date.
gmake[2]: `btree2' is up to date.
gmake[2]: `fheap' is up to date.
gmake[2]: `file_image' is up to date.
gmake[2]: `unregister' is up to date.
gmake[2]: `error_test' is up to date.
gmake[2]: `err_compat' is up to date.
gmake[2]: `tcheck_version' is up to date.
gmake[2]: `testmeta' is up to date.
gmake[2]: `links_env' is up to date.
gmake[2]: `plugin' is up to date.
gmake[2]: `testerror.sh' is up to date.
gmake[2]: `testlibinfo.sh' is up to date.
gmake[2]: `testcheck_version.sh' is up to date.
gmake[2]: `testlinks_env.sh' is up to date.
gmake[2]: `test_plugin.sh' is up to date.
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake -j 8  check-TESTS
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in test begin Mon May 14 21:09:20 CDT 2018===
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  testhdf5 
============================
============================
============================
============================
Testing  lheap 
============================
============================
Testing  ohdr 
============================
Testing  stab 
Testing  gheap 
Testing  cache 
Testing  cache_api 
Testing  pool 
============================
 lheap  Test Log
============================
Testing local heap write                                               PASSED
Testing local heap read                                                PASSED
Testing opening pre-created file with non-default sizes                PASSED
All local heap tests passed.
0.04user 0.02system 0:00.12elapsed 60%CPU (0avgtext+0avgdata 7008maxresident)k
0inputs+144outputs (0major+8917minor)pagefaults 0swaps

Finished testing lheap 
============================
============================
 cache_api  Test Log
============================
Testing MDC/FAPL related API calls                                     PASSED
Testing MDC/FILE related API calls                                     PASSED
Testing MDC API smoke check                                            -SKIP-
     Long tests disabled.
Testing MDC/FAPL related API input errors                              PASSED
Testing MDC/FILE related API input errors                              PASSED
0.04user 0.03system 0:00.12elapsed 65%CPU (0avgtext+0avgdata 7164maxresident)k
0inputs+584outputs (0major+8767minor)pagefaults 0swaps

Finished testing cache_api 
============================
============================
============================
Testing  accum 
Testing  hyperslab 
============================
 ohdr  Test Log
============================
Using default file format:
Testing object header continuation block                               PASSED
Testing object header creation                                         PASSED
Testing message creation                                               PASSED
Testing message modification                                           PASSED
Testing object header overflow in memory                               PASSED
Testing close & re-open object header                                  PASSED
Testing object header overflow on disk                                 PASSED
Testing message deletion                                               PASSED
Testing constant message handling                                      PASSED
Testing object header closing                                          PASSED
Testing locking messages                                               PASSED
Accessing objects with unknown header messages: H5O_BOGUS_VALID_ID
Testing object with unknown header message and no flags set            PASSED
Testing object in r/o file with unknown header message & 'fail if unknown and open for write' flag set PASSED
Testing object with unknown header message & 'mark if unknown' flag set PASSED
Testing object in r/w file with unknown header message & 'fail if unknown and open for write' flag set PASSED
 PASSED
Accessing objects with unknown header messages: H5O_BOGUS_INVALID_ID
Testing object with unknown header message and no flags set            PASSED
Testing object in r/o file with unknown header message & 'fail if unknown and open for write' flag set PASSED
Testing object with unknown header message & 'mark if unknown' flag set PASSED
Testing object in r/w file with unknown header message & 'fail if unknown and open for write' flag set PASSED
 PASSED
Testing object header creation in cache                                PASSED
Using new file format:
Testing object header continuation block                               PASSED
Testing object header creation                                         PASSED
Testing message creation                                               PASSED
Testing message modification                                           PASSED
Testing object header overflow in memory                               PASSED
Testing close & re-open object header                                  PASSED
Testing object header overflow on disk                                 PASSED
Testing message deletion                                               PASSED
Testing constant message handling                                      PASSED
Testing object header closing                                          PASSED
Testing locking messages                                               PASSED
Accessing objects with unknown header messages: H5O_BOGUS_VALID_ID
Testing object with unknown header message and no flags set            PASSED
Testing object in r/o file with unknown header message & 'fail if unknown and open for write' flag set PASSED
Testing object with unknown header message & 'mark if unknown' flag set PASSED
Testing object in r/w file with unknown header message & 'fail if unknown and open for write' flag set PASSED
 PASSED
Accessing objects with unknown header messages: H5O_BOGUS_INVALID_ID
Testing object with unknown header message and no flags set            PASSED
Testing object in r/o file with unknown header message & 'fail if unknown and open for write' flag set PASSED
Testing object with unknown header message & 'mark if unknown' flag set PASSED
Testing object in r/w file with unknown header message & 'fail if unknown and open for write' flag set PASSED
 PASSED
Testing object header creation in cache                                PASSED
All object header tests passed.
0.09user 0.03system 0:00.17elapsed 72%CPU (0avgtext+0avgdata 7056maxresident)k
0inputs+872outputs (0major+9191minor)pagefaults 0swaps

Finished testing ohdr 
============================
============================
Testing  istore 
============================
 accum  Test Log
============================
Testing the metadata accumulator
Testing simple write/read to/from metadata accumulator                 PASSED
Testing simple write/read to/from before metadata accumulator          PASSED
Testing simple write/read to/from after metadata accumulator           PASSED
Testing overlapping write to metadata accumulator                      PASSED
Testing overlapping write to partially clean metadata accumulator      PASSED
Testing overlapping write to accumulator larger then accum_size        PASSED
Testing non-overlapping write to accumulator larger then accum_size    PASSED
Testing accumulator adjustments after append/prepend of data           PASSED
Testing reading data from both accumulator and disk                    PASSED
Testing simple freeing metadata accumulator                            PASSED
Testing large metadata I/O operations                                  PASSED
Testing random writes to accumulator                                   PASSED
All metadata accumulator tests passed.
0.10user 0.08system 0:00.23elapsed 83%CPU (0avgtext+0avgdata 24972maxresident)k
0inputs+13488outputs (0major+16017minor)pagefaults 0swaps

Finished testing accum 
============================
============================
Testing  bittests 
============================
 bittests  Test Log
============================
Testing bit search operations                                          PASSED
Testing bit set operations                                             PASSED
Testing bit clear operations                                           PASSED
Testing bit copy operations                                            PASSED
Testing bit shift operations                                           PASSED
Testing bit increment operations                                       PASSED
Testing bit decrement operations                                       PASSED
Testing bit negate operations                                          PASSED
All bit tests passed.
0.26user 0.02system 0:00.28elapsed 101%CPU (0avgtext+0avgdata 6908maxresident)k
0inputs+64outputs (0major+8248minor)pagefaults 0swaps

Finished testing bittests 
============================
============================
Testing  dt_arith 
============================
 stab  Test Log
============================
Testing miscellaneous group tests                                      PASSED
Testing long names                                                     PASSED
Testing large directories                                              PASSED
Testing miscellaneous group tests (w/new group format)                 PASSED
Testing long names (w/new group format)                                PASSED
Testing large directories (w/new group format)                         PASSED
Testing group lifecycle                                                PASSED
Testing long link names in compact groups                              PASSED
Testing reading old groups                                             PASSED
Testing group without compact form                                     PASSED
Testing setting root group creation properties                         PASSED
Testing old API routines                                               PASSED
Testing corrupt symbol table message                                   PASSED
All symbol table tests passed.
0.48user 0.05system 0:00.72elapsed 74%CPU (0avgtext+0avgdata 15068maxresident)k
0inputs+11496outputs (0major+11872minor)pagefaults 0swaps

Finished testing stab 
============================
============================
Testing  dtypes 
============================
 dtypes  Test Log
============================
Testing non-aligned conversions (ALIGNMENT=1)....
Testing H5Tget_class()                                                 PASSED
Testing H5Tcopy()                                                      PASSED
Testing H5Tdetect_class()                                              PASSED
Testing compound datatypes                                             PASSED
Testing query functions of compound and enumeration types              PASSED
Testing transient datatypes                                            PASSED
Testing named datatypes                                                PASSED
Testing functions of encoding and decoding datatypes                   PASSED
Testing encoding datatypes with the 'use the latest format' flag       PASSED
Testing exceptions for int <-> float conversions                       PASSED
Testing indirectly reopening committed datatypes                       PASSED
Testing indirectly reopening recursively committed datatypes including file reopening PASSED
Testing deleting objects that use named datatypes                      PASSED
Testing deleting objects that use named datatypes                      PASSED
Testing H5Tset/get_order for compound type                             PASSED
Testing string type creation using H5Tcreate                           PASSED
Testing deprected API routines for datatypes                           PASSED
Testing string conversions                                             PASSED
Testing random string conversion speed                                 PASSED
Testing some type functions for string                                 PASSED
Testing compound element reordering                                    PASSED
Testing compound subset conversions                                    PASSED
Testing compound element shrinking & reordering                        PASSED
Testing optimized struct converter                                     PASSED
Testing compound element growing                                       PASSED
Testing compound element insertion                                     PASSED
Testing packing compound datatypes                                     PASSED
Testing compound datatype with VL string                               PASSED
Testing array datatype of compound type with VL string                 PASSED
Testing registering type conversion routine with compound conversions  PASSED
Testing adjust size of compound datatypes                              PASSED
Testing compound datatypes of boundary size with latest format         PASSED
Testing unaligned VL strings in compound                               PASSED
Testing compound subset conversion with extra space in source          PASSED
Testing visibility of internally registered type ids                   PASSED
Testing that H5Tpack removes trailing bytes                            PASSED
Testing accessing objects with compound datatypes that have no fields  PASSED
Testing random enum conversion O(N)                                    PASSED
Testing random enum conversion O(N log N)                              PASSED
Testing non-native enumeration type conversion                         PASSED
Testing bitfield conversions                                           PASSED
Testing some type functions for bitfield                               PASSED
Testing opaque datatypes                                               PASSED
Testing H5Tset/get_order                                               PASSED
Testing string conversion between ASCII and UTF                        PASSED
All datatype tests passed.
0.40user 0.06system 0:00.56elapsed 82%CPU (0avgtext+0avgdata 25384maxresident)k
0inputs+1096outputs (0major+20170minor)pagefaults 0swaps

Finished testing dtypes 
============================
============================
Testing  dsets 
============================
 hyperslab  Test Log
============================
Test sizes:  SMALL MEDIUM
Testing hyperslab fill 11          variable hyperslab                  PASSED
Testing hyperslab fill 11x10       variable hyperslab                  PASSED
Testing hyperslab fill 3x5x5       variable hyperslab                  PASSED
Testing hyperslab fill 113         variable hyperslab                  PASSED
Testing hyperslab fill 15x11       variable hyperslab                  PASSED
Testing hyperslab fill 5x7x7       variable hyperslab                  PASSED
Testing hyperslab copy 11          variable source                     PASSED
Testing hyperslab copy 11          variable destination                PASSED
Testing hyperslab copy 11          sync source & dest                  PASSED
Testing hyperslab copy 179         variable source                     PASSED
Testing hyperslab copy 179         variable destination                PASSED
Testing hyperslab copy 179         sync source & dest                  PASSED
Testing hyperslab copy 11x10       variable source                     PASSED
Testing hyperslab copy 11x10       variable destination                PASSED
Testing hyperslab copy 11x10       sync source & dest                  PASSED
Testing hyperslab copy 13x19       variable source                     PASSED
Testing hyperslab copy 13x19       variable destination                PASSED
Testing hyperslab copy 13x19       sync source & dest                  PASSED
Testing hyperslab copy 73x67       variable source                     PASSED
Testing hyperslab copy 73x67       variable destination                PASSED
Testing hyperslab copy 73x67       sync source & dest                  PASSED
Testing hyperslab copy 3x5x5       variable source                     PASSED
Testing hyperslab copy 3x5x5       variable destination                PASSED
Testing hyperslab copy 3x5x5       sync source & dest                  PASSED
Testing hyperslab copy 7x9x5       variable source                     PASSED
Testing hyperslab copy 7x9x5       variable destination                PASSED
Testing hyperslab copy 7x9x5       sync source & dest                  PASSED
Testing multi-byte fill value                                          PASSED
Testing multi-byte fill value                                          PASSED
Testing endian conversion by stride                                    PASSED
Testing 2d transpose by stride    9x9d                                 PASSED
Testing 2d transpose by stride    3x11d                                PASSED
Testing endian conversion by stride                                    PASSED
Testing 2d transpose by stride 1200x1200d                              PASSED
Testing 2d transpose by stride  800x1800d                              PASSED
Testing image sampling   10x20   to    5x10                            PASSED
Testing image sampling    5x10   to   10x20                            PASSED
Testing image sampling  960x1280 to  480x640                           PASSED
Testing image sampling  480x640  to  960x1280                          PASSED
Testing array filling    1-9    elements                               PASSED
Testing array filling    9-257  elements                               PASSED
Testing array offset   13x  11x   7 elements                           PASSED
Testing array offset  347x 193x  71 elements                           PASSED
All hyperslab tests passed.
0.95user 0.23system 0:01.18elapsed 100%CPU (0avgtext+0avgdata 49280maxresident)k
0inputs+45072outputs (0major+24810minor)pagefaults 0swaps

Finished testing hyperslab 
============================
============================
Testing  cmpd_dset 
============================
 istore  Test Log
============================
Test sizes:  SMALL MEDIUM LARGE
Testing istore create                                                  PASSED
Testing istore extend: 10                                              PASSED
Testing istore extend: 10x10                                           PASSED
Testing istore extend: 10x10x10                                        PASSED
Testing istore extend: 10000                                           PASSED
Testing istore extend: 2500x10                                         PASSED
Testing istore extend: 10x400x10                                       PASSED
Testing istore sparse: 5                                               PASSED
Testing istore sparse: 3x4                                             PASSED
Testing istore sparse: 2x3x4                                           PASSED
Testing istore sparse: 30                                              PASSED
Testing istore sparse: 7x3                                             PASSED
Testing istore sparse: 4x2x3                                           PASSED
Testing istore sparse: 50x50x50                                        PASSED
All i-store tests passed.
0.47user 0.69system 0:01.16elapsed 100%CPU (0avgtext+0avgdata 11660maxresident)k
0inputs+2093024outputs (0major+10754minor)pagefaults 0swaps

Finished testing istore 
============================
============================
Testing  filter_fail 
============================
 filter_fail  Test Log
============================
Testing data writing when a mandatory filter fails and chunk cache is enabled PASSED
Testing data reading when a mandatory filter fails                     PASSED
Testing data writing when a mandatory filter fails and chunk cache is disabled PASSED
Testing data reading when a mandatory filter fails                     PASSED
0.03user 0.02system 0:00.05elapsed 105%CPU (0avgtext+0avgdata 7016maxresident)k
0inputs+152outputs (0major+8904minor)pagefaults 0swaps

Finished testing filter_fail 
============================
============================
Testing  extend 
============================
 extend  Test Log
============================
Testing extendible dataset with incr. allocation                       PASSED
Testing extendible dataset with incr. allocation w/deprec. symbols     PASSED
Testing extendible dataset with early allocation                       PASSED
Testing extendible dataset with early allocation w/deprec. symbols     PASSED
All extend tests passed.
0.06user 0.02system 0:00.08elapsed 102%CPU (0avgtext+0avgdata 7008maxresident)k
0inputs+8016outputs (0major+9214minor)pagefaults 0swaps

Finished testing extend 
============================
============================
Testing  external 
============================
 external  Test Log
============================
Testing with the default file format:
Testing fixed-size data space, exact storage                           PASSED
Testing external storage is too small                                  PASSED
Testing extendible dataspace, exact external size                      PASSED
Testing extendible dataspace, external storage is too small            PASSED
Testing unlimited dataspace, unlimited external storage                PASSED
Testing multiple external files                                        PASSED
Testing external file following unlimited file                         PASSED
Testing address overflow in external files                             PASSED
Testing read external dataset                                          PASSED
Testing write external dataset                                         PASSED
Testing absolute filenames for external file                           PASSED
Testing filenames relative to current directory for external file      PASSED
Testing filenames relative to HDF5 file for external file              PASSED
Testing prefix in HDF5_EXTFILE_PREFIX                                  PASSED

Testing with the latest file format:
Testing fixed-size data space, exact storage                           PASSED
Testing external storage is too small                                  PASSED
Testing extendible dataspace, exact external size                      PASSED
Testing extendible dataspace, external storage is too small            PASSED
Testing unlimited dataspace, unlimited external storage                PASSED
Testing multiple external files                                        PASSED
Testing external file following unlimited file                         PASSED
Testing address overflow in external files                             PASSED
Testing read external dataset                                          PASSED
Testing write external dataset                                         PASSED
Testing absolute filenames for external file                           PASSED
Testing filenames relative to current directory for external file      PASSED
Testing filenames relative to HDF5 file for external file              PASSED
Testing prefix in HDF5_EXTFILE_PREFIX                                  PASSED
All external storage tests passed.
0.06user 0.04system 0:00.27elapsed 39%CPU (0avgtext+0avgdata 7076maxresident)k
0inputs+1168outputs (0major+9179minor)pagefaults 0swaps

Finished testing external 
============================
============================
Testing  efc 
============================
 pool  Test Log
============================
Testing memory pool creation                                           PASSED
Testing closing pool with blocks still allocated in one page           PASSED
Testing allocating first block in pool                                 PASSED
Testing allocating large first block in pool                           PASSED
Testing splitting block in pool                                        PASSED
Testing allocating many small blocks                                   PASSED
Testing allocate normal-sized block in new page                        PASSED
Testing allocate large-sized block in new page                         PASSED
Testing allocate many random sized blocks                              PASSED
All memory pool tests passed.
2.16user 0.04system 0:02.21elapsed 100%CPU (0avgtext+0avgdata 37032maxresident)k
0inputs+136outputs (0major+25585minor)pagefaults 0swaps

Finished testing pool 
============================
============================
Testing  objcopy 
============================
 cmpd_dset  Test Log
============================
Testing compound dataset:
Testing basic compound write                                           PASSED
Testing basic compound read                                            PASSED
Testing reversal of struct members                                     PASSED
Testing subset struct read                                             PASSED
Testing partially initialized superset read                            PASSED
Testing partially initialized superset optimized read                  PASSED
Testing partially initialized superset write                           PASSED
Testing explicit data space                                            PASSED
Testing hyperslab partial read to array                                PASSED
Testing hyperslab partial read to another hyperslab                    PASSED
Testing hyperslab to hyperslab part initialized read                   PASSED
Testing hyperslab part initialized write                               PASSED
Testing the optimization of when the source type is a subset of the dest:
Testing writing data to contiguous and chunked datasets                PASSED
Testing rewriting data with a subset of original data type             PASSED
Testing reading data with a subset of original data type               PASSED
Testing the optimization of when the dest type is a subset of the source:
Testing writing data to contiguous and chunked datasets                PASSED
Testing rewriting data with a subset of original data type             PASSED
Testing reading data with a subset of original data type               PASSED
Testing that compound types can be packed out of order:
Without extra space at the end of compound...
Testing random member insertion with empty compound subtype            PASSED
Testing random member insertion with full compound subtype             PASSED
Testing reverse member insertion with empty compound subtype           PASSED
Testing reverse member insertion with full compound subtype            PASSED
Testing forward member insertion with empty compound subtype           PASSED
Testing forward member insertion with full compound subtype            PASSED
With extra space at the end of compound...
Testing random member insertion with empty compound subtype            PASSED
Testing random member insertion with full compound subtype             PASSED
Testing reverse member insertion with empty compound subtype           PASSED
Testing reverse member insertion with full compound subtype            PASSED
Testing forward member insertion with empty compound subtype           PASSED
Testing forward member insertion with full compound subtype            PASSED
Testing compound member ordering:
Testing that compound member insertion order is preserved              PASSED
All compound dataset tests passed.
0.28user 0.71system 0:01.04elapsed 96%CPU (0avgtext+0avgdata 156292maxresident)k
0inputs+329472outputs (0major+71472minor)pagefaults 0swaps

Finished testing cmpd_dset 
============================
============================
Testing  links 
============================
 dt_arith  Test Log
============================
Testing non-aligned conversions (ALIGNMENT=1)....
Testing query functions of compiler conversion                         PASSED
Testing user-define and query functions of floating-point types        PASSED
Testing user-define and query functions of integer types               PASSED
Floating-point overflow cases will be tested.
Testing noop float -> float conversions                                PASSED
Testing noop double -> double conversions                              PASSED
Testing noop long double -> long double conversions                    PASSED
Testing hard normalized float -> double conversions                    PASSED
Testing hard normalized double -> float conversions                    PASSED
Testing hard normalized float -> long double conversions               PASSED
Testing hard normalized double -> long double conversions              PASSED
Testing hard normalized long double -> float conversions               PASSED
Testing hard normalized long double -> double conversions              PASSED
Testing hard denormalized float -> double conversions                  PASSED
Testing hard denormalized double -> float conversions                  PASSED
Testing hard denormalized float -> long double conversions             PASSED
Testing hard denormalized double -> long double conversions            PASSED
Testing hard denormalized long double -> float conversions             PASSED
Testing hard denormalized long double -> double conversions            PASSED
Testing hard special float -> double conversions                       PASSED
Testing hard special double -> float conversions                       PASSED
Testing hard special float -> long double conversions                  PASSED
Testing hard special double -> long double conversions                 PASSED
Testing hard special long double -> float conversions                  PASSED
Testing hard special long double -> double conversions                 PASSED
Testing hard signed char -> unsigned char conversions                  PASSED
Testing hard signed char -> short conversions                          PASSED
Testing hard signed char -> unsigned short conversions                 PASSED
Testing hard signed char -> int conversions                            PASSED
Testing hard signed char -> unsigned int conversions                   PASSED
Testing hard signed char -> long conversions                           PASSED
Testing hard signed char -> unsigned long conversions                  PASSED
Testing hard unsigned char -> signed char conversions                  PASSED
Testing hard unsigned char -> short conversions                        PASSED
Testing hard unsigned char -> unsigned short conversions               PASSED
Testing hard unsigned char -> int conversions                          PASSED
Testing hard unsigned char -> unsigned int conversions                 PASSED
Testing hard unsigned char -> long conversions                         PASSED
Testing hard unsigned char -> unsigned long conversions                PASSED
Testing hard short -> signed char conversions                          PASSED
Testing hard short -> unsigned char conversions                        PASSED
Testing hard short -> unsigned short conversions                       PASSED
Testing hard short -> int conversions                                  PASSED
Testing hard short -> unsigned int conversions                         PASSED
Testing hard short -> long conversions                                 PASSED
Testing hard short -> unsigned long conversions                        PASSED
Testing hard unsigned short -> signed char conversions                 PASSED
Testing hard unsigned short -> unsigned char conversions               PASSED
Testing hard unsigned short -> short conversions                       PASSED
Testing hard unsigned short -> int conversions                         PASSED
Testing hard unsigned short -> unsigned int conversions                PASSED
Testing hard unsigned short -> long conversions                        PASSED
Testing hard unsigned short -> unsigned long conversions               PASSED
Testing hard int -> signed char conversions                            PASSED
Testing hard int -> unsigned char conversions                          PASSED
Testing hard int -> short conversions                                  PASSED
Testing hard int -> unsigned short conversions                         PASSED
Testing hard int -> unsigned int conversions                           PASSED
Testing hard int -> long conversions                                   PASSED
Testing hard int -> unsigned long conversions                          PASSED
Testing hard unsigned int -> signed char conversions                   PASSED
Testing hard unsigned int -> unsigned char conversions                 PASSED
Testing hard unsigned int -> short conversions                         PASSED
Testing hard unsigned int -> unsigned short conversions                PASSED
Testing hard unsigned int -> int conversions                           PASSED
Testing hard unsigned int -> long conversions                          PASSED
Testing hard unsigned int -> unsigned long conversions                 PASSED
Testing hard long -> signed char conversions                           PASSED
Testing hard long -> unsigned char conversions                         PASSED
Testing hard long -> short conversions                                 PASSED
Testing hard long -> unsigned short conversions                        PASSED
Testing hard long -> int conversions                                   PASSED
Testing hard long -> unsigned int conversions                          PASSED
Testing hard long -> unsigned long conversions                         PASSED
Testing hard unsigned long -> signed char conversions                  PASSED
Testing hard unsigned long -> unsigned char conversions                PASSED
Testing hard unsigned long -> short conversions                        PASSED
Testing hard unsigned long -> unsigned short conversions               PASSED
Testing hard unsigned long -> int conversions                          PASSED
Testing hard unsigned long -> unsigned int conversions                 PASSED
Testing hard unsigned long -> long conversions                         PASSED
Testing hard signed char -> float conversions                          PASSED
Testing hard signed char -> double conversions                         PASSED
Testing hard unsigned char -> float conversions                        PASSED
Testing hard unsigned char -> double conversions                       PASSED
Testing hard short -> float conversions                                PASSED
Testing hard short -> double conversions                               PASSED
Testing hard unsigned short -> float conversions                       PASSED
Testing hard unsigned short -> double conversions                      PASSED
Testing hard int -> float conversions                                  PASSED
Testing hard int -> double conversions                                 PASSED
Testing hard unsigned int -> float conversions                         PASSED
Testing hard unsigned int -> double conversions                        PASSED
Testing hard long -> float conversions                                 PASSED
Testing hard long -> double conversions                                PASSED
Testing hard unsigned long -> float conversions                        PASSED
Testing hard unsigned long -> double conversions                       PASSED
Testing hard signed char -> long double conversions                    PASSED
Testing hard unsigned char -> long double conversions                  PASSED
Testing hard short -> long double conversions                          PASSED
Testing hard unsigned short -> long double conversions                 PASSED
Testing hard int -> long double conversions                            PASSED
Testing hard unsigned int -> long double conversions                   PASSED
Testing hard long -> long double conversions                           PASSED
Testing hard unsigned long -> long double conversions                  PASSED
Testing hard normalized float -> signed char conversions               PASSED
Testing hard normalized double -> signed char conversions              PASSED
Testing hard normalized float -> unsigned char conversions             PASSED
Testing hard normalized double -> unsigned char conversions            PASSED
Testing hard normalized float -> short conversions                     PASSED
Testing hard normalized double -> short conversions                    PASSED
Testing hard normalized float -> unsigned short conversions            PASSED
Testing hard normalized double -> unsigned short conversions           PASSED
Testing hard normalized float -> int conversions                       PASSED
Testing hard normalized double -> int conversions                      PASSED
Testing hard normalized float -> unsigned int conversions              PASSED
Testing hard normalized double -> unsigned int conversions             PASSED
Testing hard normalized float -> long conversions                      PASSED
Testing hard normalized double -> long conversions                     PASSED
Testing hard normalized float -> unsigned long conversions             PASSED
Testing hard normalized double -> unsigned long conversions            PASSED
Testing hard normalized long double -> signed char conversions         PASSED
Testing hard normalized long double -> unsigned char conversions       PASSED
Testing hard normalized long double -> short conversions               PASSED
Testing hard normalized long double -> unsigned short conversions      PASSED
Testing hard normalized long double -> int conversions                 PASSED
Testing hard normalized long double -> unsigned int conversions        PASSED
Testing hard normalized long double -> long conversions                PASSED
Testing hard normalized long double -> unsigned long conversions       PASSED
Testing hard denormalized float -> signed char conversions             PASSED
Testing hard denormalized double -> signed char conversions            PASSED
Testing hard denormalized float -> unsigned char conversions           PASSED
Testing hard denormalized double -> unsigned char conversions          PASSED
Testing hard denormalized float -> short conversions                   PASSED
Testing hard denormalized double -> short conversions                  PASSED
Testing hard denormalized float -> unsigned short conversions          PASSED
Testing hard denormalized double -> unsigned short conversions         PASSED
Testing hard denormalized float -> int conversions                     PASSED
Testing hard denormalized double -> int conversions                    PASSED
Testing hard denormalized float -> unsigned int conversions            PASSED
Testing hard denormalized double -> unsigned int conversions           PASSED
Testing hard denormalized float -> long conversions                    PASSED
Testing hard denormalized double -> long conversions                   PASSED
Testing hard denormalized float -> unsigned long conversions           PASSED
Testing hard denormalized double -> unsigned long conversions          PASSED
Testing hard denormalized long double -> signed char conversions       PASSED
Testing hard denormalized long double -> unsigned char conversions     PASSED
Testing hard denormalized long double -> short conversions             PASSED
Testing hard denormalized long double -> unsigned short conversions    PASSED
Testing hard denormalized long double -> int conversions               PASSED
Testing hard denormalized long double -> unsigned int conversions      PASSED
Testing hard denormalized long double -> long conversions              PASSED
Testing hard denormalized long double -> unsigned long conversions     PASSED
Testing hard special float -> signed char conversions                  PASSED
Testing hard special double -> signed char conversions                 PASSED
Testing hard special float -> unsigned char conversions                PASSED
Testing hard special double -> unsigned char conversions               PASSED
Testing hard special float -> short conversions                        PASSED
Testing hard special double -> short conversions                       PASSED
Testing hard special float -> unsigned short conversions               PASSED
Testing hard special double -> unsigned short conversions              PASSED
Testing hard special float -> int conversions                          PASSED
Testing hard special double -> int conversions                         PASSED
Testing hard special float -> unsigned int conversions                 PASSED
Testing hard special double -> unsigned int conversions                PASSED
Testing hard special float -> long conversions                         PASSED
Testing hard special double -> long conversions                        PASSED
Testing hard special float -> unsigned long conversions                PASSED
Testing hard special double -> unsigned long conversions               PASSED
Testing hard special long double -> signed char conversions            PASSED
Testing hard special long double -> unsigned char conversions          PASSED
Testing hard special long double -> short conversions                  PASSED
Testing hard special long double -> unsigned short conversions         PASSED
Testing hard special long double -> int conversions                    PASSED
Testing hard special long double -> unsigned int conversions           PASSED
Testing hard special long double -> long conversions                   PASSED
Testing hard special long double -> unsigned long conversions          PASSED
Testing hard particular floating number -> integer conversions         PASSED
Testing soft normalized float -> double conversions                    PASSED
Testing soft normalized double -> float conversions                    PASSED
Testing soft normalized float -> long double conversions               PASSED
Testing soft normalized double -> long double conversions              PASSED
Testing soft normalized long double -> float conversions               PASSED
Testing soft normalized long double -> double conversions              PASSED
Testing soft denormalized float -> double conversions                  PASSED
Testing soft denormalized double -> float conversions                  PASSED
Testing soft denormalized float -> long double conversions             PASSED
Testing soft denormalized double -> long double conversions            PASSED
Testing soft denormalized long double -> float conversions             PASSED
Testing soft denormalized long double -> double conversions            PASSED
Testing soft special float -> double conversions                       PASSED
Testing soft special double -> float conversions                       PASSED
Testing soft special float -> long double conversions                  PASSED
Testing soft special double -> long double conversions                 PASSED
Testing soft special long double -> float conversions                  PASSED
Testing soft special long double -> double conversions                 PASSED
Testing overlap calculations                                           PASSED
Testing soft signed char -> unsigned char conversions                  PASSED
Testing soft signed char -> short conversions                          PASSED
Testing soft signed char -> unsigned short conversions                 PASSED
Testing soft signed char -> int conversions                            PASSED
Testing soft signed char -> unsigned int conversions                   PASSED
Testing soft signed char -> long conversions                           PASSED
Testing soft signed char -> unsigned long conversions                  PASSED
Testing soft unsigned char -> signed char conversions                  PASSED
Testing soft unsigned char -> short conversions                        PASSED
Testing soft unsigned char -> unsigned short conversions               PASSED
Testing soft unsigned char -> int conversions                          PASSED
Testing soft unsigned char -> unsigned int conversions                 PASSED
Testing soft unsigned char -> long conversions                         PASSED
Testing soft unsigned char -> unsigned long conversions                PASSED
Testing soft short -> signed char conversions                          PASSED
Testing soft short -> unsigned char conversions                        PASSED
Testing soft short -> unsigned short conversions                       PASSED
Testing soft short -> int conversions                                  PASSED
Testing soft short -> unsigned int conversions                         PASSED
Testing soft short -> long conversions                                 PASSED
Testing soft short -> unsigned long conversions                        PASSED
Testing soft unsigned short -> signed char conversions                 PASSED
Testing soft unsigned short -> unsigned char conversions               PASSED
Testing soft unsigned short -> short conversions                       PASSED
Testing soft unsigned short -> int conversions                         PASSED
Testing soft unsigned short -> unsigned int conversions                PASSED
Testing soft unsigned short -> long conversions                        PASSED
Testing soft unsigned short -> unsigned long conversions               PASSED
Testing soft int -> signed char conversions                            PASSED
Testing soft int -> unsigned char conversions                          PASSED
Testing soft int -> short conversions                                  PASSED
Testing soft int -> unsigned short conversions                         PASSED
Testing soft int -> unsigned int conversions                           PASSED
Testing soft int -> long conversions                                   PASSED
Testing soft int -> unsigned long conversions                          PASSED
Testing soft unsigned int -> signed char conversions                   PASSED
Testing soft unsigned int -> unsigned char conversions                 PASSED
Testing soft unsigned int -> short conversions                         PASSED
Testing soft unsigned int -> unsigned short conversions                PASSED
Testing soft unsigned int -> int conversions                           PASSED
Testing soft unsigned int -> long conversions                          PASSED
Testing soft unsigned int -> unsigned long conversions                 PASSED
Testing soft long -> signed char conversions                           PASSED
Testing soft long -> unsigned char conversions                         PASSED
Testing soft long -> short conversions                                 PASSED
Testing soft long -> unsigned short conversions                        PASSED
Testing soft long -> int conversions                                   PASSED
Testing soft long -> unsigned int conversions                          PASSED
Testing soft long -> unsigned long conversions                         PASSED
Testing soft unsigned long -> signed char conversions                  PASSED
Testing soft unsigned long -> unsigned char conversions                PASSED
Testing soft unsigned long -> short conversions                        PASSED
Testing soft unsigned long -> unsigned short conversions               PASSED
Testing soft unsigned long -> int conversions                          PASSED
Testing soft unsigned long -> unsigned int conversions                 PASSED
Testing soft unsigned long -> long conversions                         PASSED
Testing soft normalized float -> signed char conversions               PASSED
Testing soft normalized double -> signed char conversions              PASSED
Testing soft normalized float -> unsigned char conversions             PASSED
Testing soft normalized double -> unsigned char conversions            PASSED
Testing soft normalized float -> short conversions                     PASSED
Testing soft normalized double -> short conversions                    PASSED
Testing soft normalized float -> unsigned short conversions            PASSED
Testing soft normalized double -> unsigned short conversions           PASSED
Testing soft normalized float -> int conversions                       PASSED
Testing soft normalized double -> int conversions                      PASSED
Testing soft normalized float -> unsigned int conversions              PASSED
Testing soft normalized double -> unsigned int conversions             PASSED
Testing soft normalized float -> long conversions                      PASSED
Testing soft normalized double -> long conversions                     PASSED
Testing soft normalized float -> unsigned long conversions             PASSED
Testing soft normalized double -> unsigned long conversions            PASSED
Testing soft normalized long double -> signed char conversions         PASSED
Testing soft normalized long double -> unsigned char conversions       PASSED
Testing soft normalized long double -> short conversions               PASSED
Testing soft normalized long double -> unsigned short conversions      PASSED
Testing soft normalized long double -> int conversions                 PASSED
Testing soft normalized long double -> unsigned int conversions        PASSED
Testing soft normalized long double -> long conversions                PASSED
Testing soft normalized long double -> unsigned long conversions       PASSED
Testing soft denormalized float -> signed char conversions             PASSED
Testing soft denormalized double -> signed char conversions            PASSED
Testing soft denormalized float -> unsigned char conversions           PASSED
Testing soft denormalized double -> unsigned char conversions          PASSED
Testing soft denormalized float -> short conversions                   PASSED
Testing soft denormalized double -> short conversions                  PASSED
Testing soft denormalized float -> unsigned short conversions          PASSED
Testing soft denormalized double -> unsigned short conversions         PASSED
Testing soft denormalized float -> int conversions                     PASSED
Testing soft denormalized double -> int conversions                    PASSED
Testing soft denormalized float -> unsigned int conversions            PASSED
Testing soft denormalized double -> unsigned int conversions           PASSED
Testing soft denormalized float -> long conversions                    PASSED
Testing soft denormalized double -> long conversions                   PASSED
Testing soft denormalized float -> unsigned long conversions           PASSED
Testing soft denormalized double -> unsigned long conversions          PASSED
Testing soft denormalized long double -> signed char conversions       PASSED
Testing soft denormalized long double -> unsigned char conversions     PASSED
Testing soft denormalized long double -> short conversions             PASSED
Testing soft denormalized long double -> unsigned short conversions    PASSED
Testing soft denormalized long double -> int conversions               PASSED
Testing soft denormalized long double -> unsigned int conversions      PASSED
Testing soft denormalized long double -> long conversions              PASSED
Testing soft denormalized long double -> unsigned long conversions     PASSED
Testing soft special float -> signed char conversions                  PASSED
Testing soft special double -> signed char conversions                 PASSED
Testing soft special float -> unsigned char conversions                PASSED
Testing soft special double -> unsigned char conversions               PASSED
Testing soft special float -> short conversions                        PASSED
Testing soft special double -> short conversions                       PASSED
Testing soft special float -> unsigned short conversions               PASSED
Testing soft special double -> unsigned short conversions              PASSED
Testing soft special float -> int conversions                          PASSED
Testing soft special double -> int conversions                         PASSED
Testing soft special float -> unsigned int conversions                 PASSED
Testing soft special double -> unsigned int conversions                PASSED
Testing soft special float -> long conversions                         PASSED
Testing soft special double -> long conversions                        PASSED
Testing soft special float -> unsigned long conversions                PASSED
Testing soft special double -> unsigned long conversions               PASSED
Testing soft special long double -> signed char conversions            PASSED
Testing soft special long double -> unsigned char conversions          PASSED
Testing soft special long double -> short conversions                  PASSED
Testing soft special long double -> unsigned short conversions         PASSED
Testing soft special long double -> int conversions                    PASSED
Testing soft special long double -> unsigned int conversions           PASSED
Testing soft special long double -> long conversions                   PASSED
Testing soft special long double -> unsigned long conversions          PASSED
Testing soft signed char -> float conversions                          PASSED
Testing soft signed char -> double conversions                         PASSED
Testing soft unsigned char -> float conversions                        PASSED
Testing soft unsigned char -> double conversions                       PASSED
Testing soft short -> float conversions                                PASSED
Testing soft short -> double conversions                               PASSED
Testing soft unsigned short -> float conversions                       PASSED
Testing soft unsigned short -> double conversions                      PASSED
Testing soft int -> float conversions                                  PASSED
Testing soft int -> double conversions                                 PASSED
Testing soft unsigned int -> float conversions                         PASSED
Testing soft unsigned int -> double conversions                        PASSED
Testing soft long -> float conversions                                 PASSED
Testing soft long -> double conversions                                PASSED
Testing soft unsigned long -> float conversions                        PASSED
Testing soft unsigned long -> double conversions                       PASSED
Testing soft signed char -> long double conversions                    PASSED
Testing soft unsigned char -> long double conversions                  PASSED
Testing soft short -> long double conversions                          PASSED
Testing soft unsigned short -> long double conversions                 PASSED
Testing soft int -> long double conversions                            PASSED
Testing soft unsigned int -> long double conversions                   PASSED
Testing soft long -> long double conversions                           PASSED
Testing soft unsigned long -> long double conversions                  PASSED
All data type tests passed.
1.63user 0.06system 0:01.73elapsed 98%CPU (0avgtext+0avgdata 7116maxresident)k
0inputs+528outputs (0major+25485minor)pagefaults 0swaps

Finished testing dt_arith 
============================
============================
Testing  unlink 
============================
 efc  Test Log
============================
Testing the external file cache
Testing single EFC                                                     PASSED
Testing graph of EFCs without cycles                                   PASSED
Testing graph of EFCs with cycles                                      PASSED
All external file cache tests passed.
0.17user 0.06system 0:01.20elapsed 19%CPU (0avgtext+0avgdata 7320maxresident)k
0inputs+3632outputs (0major+10534minor)pagefaults 0swaps

Finished testing efc 
============================
============================
Testing  big 
============================
 big  Test Log
============================
Testing big file with the SEC2 Driver 
Testing Huge dataset write                                             PASSED
#000 0x0000000178020bcc                                                PASSED
#001 0x00000001f33ce9ab                                                PASSED
#002 0x000000003ad87e13                                                PASSED
#003 0x00000001d92205ec                                                PASSED
#004 0x00000000b8cd62b8                                                PASSED
#005 0x00000000a486b06c                                                PASSED
#006 0x000000000cd2f556                                                PASSED
#007 0x000000004f69ceec                                                PASSED
#008 0x0000000029367eae                                                PASSED
#009 0x000000016d5d0374                                                PASSED
#010 0x00000001b8e174dd                                                PASSED
#011 0x00000000a92a0650                                                PASSED
#012 0x000000011aa20743                                                PASSED
#013 0x00000000dc408e84                                                PASSED
#014 0x00000001017a0312                                                PASSED
#015 0x00000001ad32fbba                                                PASSED
#016 0x00000000194e381b                                                PASSED
#017 0x00000001ac13c2af                                                PASSED
#018 0x000000015176bb6e                                                PASSED
#019 0x00000001d9271f50                                                PASSED
#020 0x00000000985f16dc                                                PASSED
#021 0x00000000cde4a1c0                                                PASSED
#022 0x000000015a3b8d30                                                PASSED
#023 0x000000005a81e900                                                PASSED
#024 0x000000011b40a53c                                                PASSED
#025 0x000000016b7c1388                                                PASSED
#026 0x000000006d8f3b5c                                                PASSED
#027 0x00000001e2e45943                                                PASSED
#028 0x0000000082d95723                                                PASSED
#029 0x00000001e1bfd2ec                                                PASSED
#030 0x00000001eb56041c                                                PASSED
#031 0x00000001d2ec019c                                                PASSED
#032 0x000000009b5331a2                                                PASSED
#033 0x00000001b82bc2ac                                                PASSED
#034 0x0000000008b5c0a8                                                PASSED
#035 0x00000000424a94b0                                                PASSED
#036 0x000000019c4e493c                                                PASSED
#037 0x00000001236967f7                                                PASSED
#038 0x00000000f8a18c5c                                                PASSED
#039 0x00000001d6decdb3                                                PASSED
#040 0x00000000639a5de2                                                PASSED
#041 0x00000000727f8ca0                                                PASSED
#042 0x0000000017a9b3bc                                                PASSED
#043 0x0000000162229fe0                                                PASSED
#044 0x000000008e15ebb4                                                PASSED
#045 0x00000001244b45d8                                                PASSED
#046 0x0000000118af5ff0                                                PASSED
#047 0x000000001ff424d3                                                PASSED
#048 0x00000001b4a8cc84                                                PASSED
#049 0x000000014cab9a70                                                PASSED
Test passed with the SEC2 Driver.
0.05user 0.04system 0:00.11elapsed 77%CPU (0avgtext+0avgdata 7020maxresident)k
0inputs+9320outputs (0major+8896minor)pagefaults 0swaps

Finished testing big 
============================
============================
Testing  mtime 
============================
 mtime  Test Log
============================
Testing modification time messages                                     PASSED
Testing accessing old modification time messages                       PASSED
Testing accessing new modification time messages                       PASSED
All modification time tests passed.
0.04user 0.03system 0:00.07elapsed 104%CPU (0avgtext+0avgdata 7012maxresident)k
0inputs+144outputs (0major+8816minor)pagefaults 0swaps

Finished testing mtime 
============================
============================
Testing  fillval 
============================
 dsets  Test Log
============================
Testing with old file format:
Testing create, open, close                                            PASSED
Testing simple I/O                                                     PASSED
Testing compact dataset I/O                                            PASSED
Testing compact dataset of maximal size                                PASSED
Testing compact dataset repeated open/close and dirty flag             PASSED
Testing data type conversion buffer size                               PASSED
Testing data type conversion                                           PASSED
Testing H5Zget_filter_info                                             PASSED
Testing 'null' filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(enabled for read)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(disabled for read)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(when data is corrupted)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing deflate filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing szip filter                                                    -SKIP-
    Szip filter not enabled
Testing shuffle filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+deflate+checksum filters(checksum first)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+deflate+checksum filters(checksum last)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+szip+fletcher32 filters                                -SKIP-
    szip filter not enabled
Testing 8-bit shuffling (setup)                                        PASSED
Testing 8-bit shuffling (write)                                        PASSED
Testing 8-bit shuffling (read)                                         PASSED
Testing nbit filter
Testing     nbit int (setup)                                           PASSED
Testing     nbit int (write)                                           PASSED
Testing     nbit int (read)                                            PASSED
Testing     nbit float (setup)                                         PASSED
Testing     nbit float (write)                                         PASSED
Testing     nbit float (read)                                          PASSED
Testing     nbit double (setup)                                        PASSED
Testing     nbit double (write)                                        PASSED
Testing     nbit double (read)                                         PASSED
Testing     nbit array (setup)                                         PASSED
Testing     nbit array (write)                                         PASSED
Testing     nbit array (read)                                          PASSED
Testing     nbit compound (setup)                                      PASSED
Testing     nbit compound (write)                                      PASSED
Testing     nbit compound (read)                                       PASSED
Testing     nbit compound complex (setup)                              PASSED
Testing     nbit compound complex (write)                              PASSED
Testing     nbit compound complex (read)                               PASSED
Testing     nbit compound with no-op type (setup)                      PASSED
Testing     nbit compound with no-op type (write)                      PASSED
Testing     nbit compound with no-op type (read)                       PASSED
Testing     nbit integer dataset size                                  PASSED
Testing     nbit floating-number dataset size                          PASSED
Testing scaleoffset filter
Testing     scaleoffset int without fill value (setup)                 PASSED
Testing     scaleoffset int without fill value (write)                 PASSED
Testing     scaleoffset int without fill value (read)                  PASSED
Testing     scaleoffset int with fill value (setup)                    PASSED
Testing     scaleoffset int with fill value (write)                    PASSED
Testing     scaleoffset int with fill value (read)                     PASSED
Testing     scaleoffset float without fill value, D-scaling (setup)    PASSED
Testing     scaleoffset float without fill value, D-scaling (write)    PASSED
Testing     scaleoffset float without fill value, D-scaling (read)     PASSED
Testing     scaleoffset float with fill value, D-scaling (setup)       PASSED
Testing     scaleoffset float with fill value, D-scaling (write)       PASSED
Testing     scaleoffset float with fill value, D-scaling (read)        PASSED
Testing     scaleoffset double without fill value, D-scaling (setup)   PASSED
Testing     scaleoffset double without fill value, D-scaling (write)   PASSED
Testing     scaleoffset double without fill value, D-scaling (read)    PASSED
Testing     scaleoffset double with fill value, D-scaling (setup)      PASSED
Testing     scaleoffset double with fill value, D-scaling (write)      PASSED
Testing     scaleoffset double with fill value, D-scaling (read)       PASSED
Testing multi-open with extending                                      PASSED
Testing various datatypes                                              PASSED
Testing dataset offset with user block                                 PASSED
Testing dataset access with missing filter                             PASSED
Testing dataset filter 'can apply' callback                            PASSED
Testing dataset filter 'can apply' callback second                     PASSED
Testing dataset filter 'set local' callback                            PASSED
Testing dataset szip filter 'can apply' callback                       -SKIP-
    Szip filter is not enabled.
Testing comparing dataset creation property lists                      PASSED
Testing copying dataset creation property lists                        PASSED
Testing filter deletion                                                PASSED
Testing filters with big-endian/little-endian data                     PASSED
Testing I/O on datasets with zero-sized dims                           PASSED
Testing Read dataset with unwritten chunk & undefined fill value       PASSED
Testing Write/read on randomly selected chunks                         PASSED
Testing deprecated API routines                                       
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing creating dataset with >4GB chunks                              PASSED
Testing dataset chunk cache configuration                              PASSED
Testing big chunks bypassing the cache                                 PASSED
Testing filter expanding chunks too much                               PASSED
Testing Compatibility for datasets that use Fixed Array indexing
      PASSED
Testing extendible dataset with various layout                         PASSED
Testing shrinking large chunk                                          PASSED
Testing shrinking large chunk                                          PASSED

Testing with new file format:
Testing create, open, close                                            PASSED
Testing simple I/O                                                     PASSED
Testing compact dataset I/O                                            PASSED
Testing compact dataset of maximal size                                PASSED
Testing compact dataset repeated open/close and dirty flag             PASSED
Testing data type conversion buffer size                               PASSED
Testing data type conversion                                           PASSED
Testing H5Zget_filter_info                                             PASSED
Testing 'null' filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(enabled for read)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(disabled for read)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing Fletcher32 checksum(when data is corrupted)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing deflate filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing szip filter                                                    -SKIP-
    Szip filter not enabled
Testing shuffle filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+deflate+checksum filters(checksum first)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+deflate+checksum filters(checksum last)
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing shuffle+szip+fletcher32 filters                                -SKIP-
    szip filter not enabled
Testing 8-bit shuffling (setup)                                        PASSED
Testing 8-bit shuffling (write)                                        PASSED
Testing 8-bit shuffling (read)                                         PASSED
Testing nbit filter
Testing     nbit int (setup)                                           PASSED
Testing     nbit int (write)                                           PASSED
Testing     nbit int (read)                                            PASSED
Testing     nbit float (setup)                                         PASSED
Testing     nbit float (write)                                         PASSED
Testing     nbit float (read)                                          PASSED
Testing     nbit double (setup)                                        PASSED
Testing     nbit double (write)                                        PASSED
Testing     nbit double (read)                                         PASSED
Testing     nbit array (setup)                                         PASSED
Testing     nbit array (write)                                         PASSED
Testing     nbit array (read)                                          PASSED
Testing     nbit compound (setup)                                      PASSED
Testing     nbit compound (write)                                      PASSED
Testing     nbit compound (read)                                       PASSED
Testing     nbit compound complex (setup)                              PASSED
Testing     nbit compound complex (write)                              PASSED
Testing     nbit compound complex (read)                               PASSED
Testing     nbit compound with no-op type (setup)                      PASSED
Testing     nbit compound with no-op type (write)                      PASSED
Testing     nbit compound with no-op type (read)                       PASSED
Testing     nbit integer dataset size                                  PASSED
Testing     nbit floating-number dataset size                          PASSED
Testing scaleoffset filter
Testing     scaleoffset int without fill value (setup)                 PASSED
Testing     scaleoffset int without fill value (write)                 PASSED
Testing     scaleoffset int without fill value (read)                  PASSED
Testing     scaleoffset int with fill value (setup)                    PASSED
Testing     scaleoffset int with fill value (write)                    PASSED
Testing     scaleoffset int with fill value (read)                     PASSED
Testing     scaleoffset float without fill value, D-scaling (setup)    PASSED
Testing     scaleoffset float without fill value, D-scaling (write)    PASSED
Testing     scaleoffset float without fill value, D-scaling (read)     PASSED
Testing     scaleoffset float with fill value, D-scaling (setup)       PASSED
Testing     scaleoffset float with fill value, D-scaling (write)       PASSED
Testing     scaleoffset float with fill value, D-scaling (read)        PASSED
Testing     scaleoffset double without fill value, D-scaling (setup)   PASSED
Testing     scaleoffset double without fill value, D-scaling (write)   PASSED
Testing     scaleoffset double without fill value, D-scaling (read)    PASSED
Testing     scaleoffset double with fill value, D-scaling (setup)      PASSED
Testing     scaleoffset double with fill value, D-scaling (write)      PASSED
Testing     scaleoffset double with fill value, D-scaling (read)       PASSED
Testing multi-open with extending                                      PASSED
Testing various datatypes                                              PASSED
Testing dataset offset with user block                                 PASSED
Testing dataset access with missing filter                             PASSED
Testing dataset filter 'can apply' callback                            PASSED
Testing dataset filter 'can apply' callback second                     PASSED
Testing dataset filter 'set local' callback                            PASSED
Testing dataset szip filter 'can apply' callback                       -SKIP-
    Szip filter is not enabled.
Testing comparing dataset creation property lists                      PASSED
Testing copying dataset creation property lists                        PASSED
Testing filter deletion                                                PASSED
Testing filters with big-endian/little-endian data                     PASSED
Testing I/O on datasets with zero-sized dims                           PASSED
Testing Read dataset with unwritten chunk & undefined fill value       PASSED
Testing Write/read on randomly selected chunks                         PASSED
Testing deprecated API routines                                       
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing creating dataset with >4GB chunks                              PASSED
Testing dataset chunk cache configuration                              PASSED
Testing big chunks bypassing the cache                                 PASSED
Testing filter expanding chunks too much                               PASSED
Testing Compatibility for datasets that use Fixed Array indexing
      PASSED
Testing extendible dataset with various layout                         PASSED
Testing shrinking large chunk                                          PASSED
Testing shrinking large chunk                                          PASSED
Testing H5Dscatter()                                                   PASSED
Testing H5Dgather()                                                    PASSED
Testing H5Dscatter() error conditions                                  PASSED
Testing H5Dgather() error conditions                                   PASSED
All dataset tests passed.
0.95user 0.59system 0:02.02elapsed 76%CPU (0avgtext+0avgdata 70832maxresident)k
0inputs+112992outputs (0major+45676minor)pagefaults 0swaps

Finished testing dsets 
============================
============================
Testing  mount 
============================
 mount  Test Log
============================
Testing basic functionality                                            PASSED
Testing illegal mount operations                                       PASSED
Testing same file mount operations                                     PASSED
Testing name hiding under mount point                                  PASSED
Testing mount point open                                               PASSED
Testing multi-linked mount point                                       PASSED
Testing mount point unlinking                                          PASSED
Testing object renaming                                                PASSED
Testing mount point renaming                                           PASSED
Testing preopening objects under the mount point                       PASSED
Testing open object access after unmount                               PASSED
Testing interfile hard links                                           -SKIP-
    Test skipped due file pointer sharing issue (Jira 7638).
 PASSED
Testing file handle uniformity                                         PASSED
Testing file handle close                                              PASSED
Testing mounting on group after file is closed                         PASSED
Testing mounting after file is unmounted                               PASSED
Testing missing unmount                                                PASSED
Testing hold open w/file                                               PASSED
Testing hold open w/group                                              PASSED
Testing file close degrees must be same                                PASSED
Testing 'semi' file close degree                                       PASSED
Testing 'strong' file close degree                                     PASSED
Testing access permissions                                             PASSED
Testing multiple mounts                                                PASSED
Testing nested mounts survive                                          PASSED
Testing close parent                                                   PASSED
Testing cutting mount graph                                            PASSED
Testing symlinks                                                       PASSED
Testing shared mount access                                            PASSED
Testing closing shared mounts                                          PASSED
Testing closing multiple shared mounts                                 PASSED
All mount tests passed.
0.16user 0.05system 0:00.28elapsed 77%CPU (0avgtext+0avgdata 7960maxresident)k
0inputs+1280outputs (0major+12301minor)pagefaults 0swaps

Finished testing mount 
============================
============================
Testing  flush1 
============================
 flush1  Test Log
============================
Testing H5Fflush (part1)                                               PASSED
0.05user 0.03system 0:00.08elapsed 102%CPU (0avgtext+0avgdata 7000maxresident)k
0inputs+616outputs (0major+9226minor)pagefaults 0swaps

Finished testing flush1 
============================
============================
Testing  app_ref 
============================
 app_ref  Test Log
============================
Testing library shutdown with reference count > 1                      PASSED
0.05user 0.02system 0:00.07elapsed 103%CPU (0avgtext+0avgdata 7012maxresident)k
0inputs+144outputs (0major+8660minor)pagefaults 0swaps

Finished testing app_ref 
============================
============================
Testing  enum 
============================
 enum  Test Log
============================
Testing named enumeration types                                        PASSED
Testing enumeration conversions                                        PASSED
Testing O(1) conversions                                               PASSED
Testing O(log N) converions                                            PASSED
Testing for non-existing name and value                                PASSED
Testing some functions with enumeration types                          PASSED
All enum tests passed.
0.05user 0.02system 0:00.07elapsed 100%CPU (0avgtext+0avgdata 7040maxresident)k
0inputs+192outputs (0major+8910minor)pagefaults 0swaps

Finished testing enum 
============================
============================
Testing  set_extent 
============================
 links  Test Log
============================
Testing link creation                                                  PASSED
Testing link queries                                                   PASSED
Testing H5Lcreate functions                                            PASSED
Testing new link queries                                               PASSED
Testing long names for objects & links                                 PASSED
Testing too many links                                                 PASSED
Testing link creation property lists                                   PASSED
Testing H5Lmove                                                        PASSED
Testing H5Lcopy                                                        PASSED
Testing moving and copying links preserves their properties            PASSED
Testing backwards compatibility                                        PASSED
Testing external file cache with external links                        PASSED
Testing external links across multiple files                           PASSED
Testing H5Pset/get_elink_acc_flags()                                   PASSED

---Testing without external file cache---
Testing external link to root                                          PASSED
Testing external link to object on path                                PASSED
Testing external link to self                                          PASSED
Testing external links back and forth                                  PASSED
Testing too many external links                                        PASSED
Testing dangling external links                                        PASSED
Testing recursive external links                                       PASSED
Testing query aspects of external link                                 PASSED
Testing unlinking external link in compact group                       PASSED
Testing unlinking external link in dense group                         PASSED
Testing move external link                                             PASSED
Testing external link along for the ride                               PASSED
Testing that external files are closed during traversal                PASSED
Testing endianness of external links                                   PASSED
Testing that external files work with strong file close degree         PASSED
Testing external links via H5Pset_elink_prefix()                       PASSED
Testing external links via main file's absolute path                   PASSED
Testing external links via main file's CWD + relative path             PASSED
Testing external links via current working directory                   PASSED
Testing external links via target's absolute path                      PASSED
Testing external links via main file's CWD                             PASSED
Testing external links via main file's CWD + target's relative path    PASSED
Testing external links via chdir and found in current working directory PASSED
Testing H5Pset/get_elink_fapl() with different physical layouts        PASSED
Testing H5Pset/get_elink_fapl() with same physical layout              PASSED
Testing H5Pset/get_fapl()                                              PASSED
Testing H5Pset/get_elink_cb()                                          PASSED
Testing external links w/symlink files                                 PASSED
Testing copying invalid external links to the source file              PASSED
Testing that invalid external links don't open the source file         PASSED
Testing opening object twice through elink                             PASSED
Testing attach committed datatype to external group's attribute/dataset PASSED

---Testing with external file cache---
Testing external link to root                                          PASSED
Testing external link to object on path                                PASSED
Testing external link to self                                          PASSED
Testing external links back and forth                                  PASSED
Testing too many external links                                        PASSED
Testing dangling external links                                        PASSED
Testing recursive external links                                       PASSED
Testing query aspects of external link                                 PASSED
Testing unlinking external link in compact group                       PASSED
Testing unlinking external link in dense group                         PASSED
Testing move external link                                             PASSED
Testing external link along for the ride                               PASSED
Testing that external files are closed during traversal                PASSED
Testing endianness of external links                                   PASSED
Testing that external files work with strong file close degree         PASSED
Testing external links via H5Pset_elink_prefix()                       PASSED
Testing external links via main file's absolute path                   PASSED
Testing external links via main file's CWD + relative path             PASSED
Testing external links via current working directory                   PASSED
Testing external links via target's absolute path                      PASSED
Testing external links via main file's CWD                             PASSED
Testing external links via main file's CWD + target's relative path    PASSED
Testing external links via chdir and found in current working directory PASSED
Testing H5Pset/get_elink_fapl() with different physical layouts        PASSED
Testing H5Pset/get_elink_fapl() with same physical layout              PASSED
Testing H5Pset/get_fapl()                                              PASSED
Testing H5Pset/get_elink_cb()                                          PASSED
Testing external links w/symlink files                                 PASSED
Testing copying invalid external links to the source file              PASSED
Testing that invalid external links don't open the source file         PASSED
Testing opening object twice through elink                             PASSED
Testing attach committed datatype to external group's attribute/dataset PASSED
Testing user-defined link callbacks                                    PASSED
Testing user-defined link error conditions                             PASSED
Testing user data passed through lapl                                  PASSED
Testing adjusting nlinks with LAPL                                     PASSED
Testing link type field in H5Lget_info                                 PASSED
Testing link visiting                                                  PASSED
Testing link visiting by name                                          PASSED
Testing object visiting                                                PASSED
Testing object visiting by name                                        PASSED
Testing stopping object iteration                                      PASSED
Testing group link filters                                             PASSED
Testing object exists                                                  PASSED
Testing that all files were closed correctly                           PASSED
Testing link creation (w/new group format)                             PASSED
Testing link queries (w/new group format)                              PASSED
Testing H5Lcreate functions (w/new group format)                       PASSED
Testing new link queries (w/new group format)                          PASSED
Testing long names for objects & links (w/new group format)            PASSED
Testing too many links (w/new group format)                            PASSED
Testing link creation property lists (w/new group format)              PASSED
Testing H5Lmove (w/new group format)                                   PASSED
Testing H5Lcopy (w/new group format)                                   PASSED
Testing moving and copying links preserves their properties (w/new group format) PASSED
Testing backwards compatibility (w/new group format)                   PASSED
Testing external file cache with external links (w/new group format)   PASSED
Testing external links across multiple files (w/new group format)      PASSED
Testing H5Pset/get_elink_acc_flags() (w/new group format)              PASSED

---Testing without external file cache---
Testing external link to root (w/new group format)                     PASSED
Testing external link to object on path (w/new group format)           PASSED
Testing external link to self (w/new group format)                     PASSED
Testing external links back and forth (w/new group format)             PASSED
Testing too many external links (w/new group format)                   PASSED
Testing dangling external links (w/new group format)                   PASSED
Testing recursive external links (w/new group format)                  PASSED
Testing query aspects of external link (w/new group format)            PASSED
Testing unlinking external link in compact group (w/new group format)  PASSED
Testing unlinking external link in dense group (w/new group format)    PASSED
Testing move external link (w/new group format)                        PASSED
Testing external link along for the ride (w/new group format)          PASSED
Testing that external files are closed during traversal (w/new group format) PASSED
Testing endianness of external links (w/new group format)              PASSED
Testing that external files work with strong file close degree (w/new group format) PASSED
Testing external links via H5Pset_elink_prefix()(w/new group format)   PASSED
Testing external links via main file's absolute path (w/new group format) PASSED
Testing external links via main file's CWD + relative path(w/new group format) PASSED
Testing external links via current working directory(w/new group format) PASSED
Testing external links via target's absolute path (w/new group format) PASSED
Testing external links via main file's CWD (w/new group format)        PASSED
Testing external links via main file's CWD + target's relative path(w/new group format) PASSED
Testing external links via chdir and found in current working directory (w/new group format) PASSED
Testing H5Pset/get_elink_fapl() with different physical layouts (w/new group format) PASSED
Testing H5Pset/get_elink_fapl() with same physical layout (w/new group format) PASSED
Testing H5Pset/get_fapl() (w/new group format)                         PASSED
Testing H5Pset/get_elink_cb() (w/new group format)                     PASSED
Testing external links w/symlink files (w/new group format)            PASSED
Testing copying invalid external links to the source file (w/new group format) PASSED
Testing that invalid external links don't open the source file (w/new group format) PASSED
Testing opening object twice through elink (w/new group format)        PASSED
Testing attach committed datatype to external group's attribute/dataset(w/new group format) PASSED

---Testing with external file cache---
Testing external link to root (w/new group format)                     PASSED
Testing external link to object on path (w/new group format)           PASSED
Testing external link to self (w/new group format)                     PASSED
Testing external links back and forth (w/new group format)             PASSED
Testing too many external links (w/new group format)                   PASSED
Testing dangling external links (w/new group format)                   PASSED
Testing recursive external links (w/new group format)                  PASSED
Testing query aspects of external link (w/new group format)            PASSED
Testing unlinking external link in compact group (w/new group format)  PASSED
Testing unlinking external link in dense group (w/new group format)    PASSED
Testing move external link (w/new group format)                        PASSED
Testing external link along for the ride (w/new group format)          PASSED
Testing that external files are closed during traversal (w/new group format) PASSED
Testing endianness of external links (w/new group format)              PASSED
Testing that external files work with strong file close degree (w/new group format) PASSED
Testing external links via H5Pset_elink_prefix()(w/new group format)   PASSED
Testing external links via main file's absolute path (w/new group format) PASSED
Testing external links via main file's CWD + relative path(w/new group format) PASSED
Testing external links via current working directory(w/new group format) PASSED
Testing external links via target's absolute path (w/new group format) PASSED
Testing external links via main file's CWD (w/new group format)        PASSED
Testing external links via main file's CWD + target's relative path(w/new group format) PASSED
Testing external links via chdir and found in current working directory (w/new group format) PASSED
Testing H5Pset/get_elink_fapl() with different physical layouts (w/new group format) PASSED
Testing H5Pset/get_elink_fapl() with same physical layout (w/new group format) PASSED
Testing H5Pset/get_fapl() (w/new group format)                         PASSED
Testing H5Pset/get_elink_cb() (w/new group format)                     PASSED
Testing external links w/symlink files (w/new group format)            PASSED
Testing copying invalid external links to the source file (w/new group format) PASSED
Testing that invalid external links don't open the source file (w/new group format) PASSED
Testing opening object twice through elink (w/new group format)        PASSED
Testing attach committed datatype to external group's attribute/dataset(w/new group format) PASSED
Testing user-defined hard link (w/new group format)                    PASSED
Testing registering a new class for existing UD links (w/new group format) PASSED
Testing user-defined link callbacks (w/new group format)               PASSED
Testing user-defined link error conditions (w/new group format)        PASSED
Testing user data passed through lapl (w/new group format)             PASSED
Testing adjusting nlinks with LAPL (w/new group format)                PASSED
Testing link type field in H5Lget_info (w/new group format)            PASSED
Testing link visiting (w/new group format)                             PASSED
Testing link visiting by name (w/new group format)                     PASSED
Testing object visiting (w/new group format)                           PASSED
Testing object visiting by name (w/new group format)                   PASSED
Testing stopping object iteration (w/new group format)                 PASSED
Testing group link filters (w/new group format)                        PASSED
Testing object exists (w/new group format)                             PASSED
Testing that all files were closed correctly (w/new group format)      PASSED
Testing creating empty group with creation order indexing              PASSED
Testing creating compact group with creation order indexing            PASSED
Testing creating dense group with creation order indexing              PASSED
Testing transitioning group with creation order indexing between dense & compact forms PASSED
Testing deleting group with creation order indexing in dense form      PASSED
Testing querying info by index w/o creation order index, using soft links PASSED
Testing querying info by index w/creation order index, using soft links PASSED
Testing querying info by index w/o creation order index, using hard links PASSED
Testing querying info by index w/creation order index, using hard links PASSED
Testing deleting links by name index in increasing order w/o creation order index PASSED
Testing deleting links by name index in increasing order w/creation order index PASSED
Testing deleting links by name index in decreasing order w/o creation order index PASSED
Testing deleting links by name index in decreasing order w/creation order index PASSED
Testing deleting links by creation order index in increasing order w/o creation order index PASSED
Testing deleting links by creation order index in increasing order w/creation order index PASSED
Testing deleting links by creation order index in decreasing order w/o creation order index PASSED
Testing deleting links by creation order index in decreasing order w/creation order index PASSED
Testing iterating over links by name index in increasing order w/o creation order index PASSED
Testing iterating over links by name index in increasing order w/creation order index PASSED
Testing iterating over links by name index in decreasing order w/o creation order index PASSED
Testing iterating over links by name index in decreasing order w/creation order index PASSED
Testing iterating over links by name index in native order w/o creation order index PASSED
Testing iterating over links by name index in native order w/creation order index PASSED
Testing iterating over links by creation order index in increasing order w/o creation order index PASSED
Testing iterating over links by creation order index in increasing order w/creation order index PASSED
Testing iterating over links by creation order index in decreasing order w/o creation order index PASSED
Testing iterating over links by creation order index in decreasing order w/creation order index PASSED
Testing iterating over links by creation order index in native order w/o creation order index PASSED
Testing iterating over links by creation order index in native order w/creation order index PASSED
Testing open object by name index in increasing order w/o creation order index PASSED
Testing open object by name index in increasing order w/creation order index PASSED
Testing open object by name index in decreasing order w/o creation order index PASSED
Testing open object by name index in decreasing order w/creation order index PASSED
Testing open object by name index in native order w/o creation order index PASSED
Testing open object by name index in native order w/creation order index PASSED
Testing open object by creation order index in increasing order w/o creation order index PASSED
Testing open object by creation order index in increasing order w/creation order index PASSED
Testing open object by creation order index in decreasing order w/o creation order index PASSED
Testing open object by creation order index in decreasing order w/creation order index PASSED
Testing open object by creation order index in native order w/o creation order index PASSED
Testing open object by creation order index in native order w/creation order index PASSED
Testing query object info by name index in increasing order w/o creation order index PASSED
Testing query object info by name index in increasing order w/creation order index PASSED
Testing query object info by name index in decreasing order w/o creation order index PASSED
Testing query object info by name index in decreasing order w/creation order index PASSED
Testing query object info by name index in native order w/o creation order index PASSED
Testing query object info by name index in native order w/creation order index PASSED
Testing query object info by creation order index in increasing order w/o creation order index PASSED
Testing query object info by creation order index in increasing order w/creation order index PASSED
Testing query object info by creation order index in decreasing order w/o creation order index PASSED
Testing query object info by creation order index in decreasing order w/creation order index PASSED
Testing query object info by creation order index in native order w/o creation order index PASSED
Testing query object info by creation order index in native order w/creation order index PASSED
Testing query group info by name index in increasing order w/o creation order index PASSED
Testing query group info by name index in increasing order w/creation order index PASSED
Testing query group info by name index in decreasing order w/o creation order index PASSED
Testing query group info by name index in decreasing order w/creation order index PASSED
Testing query group info by name index in native order w/o creation order index PASSED
Testing query group info by name index in native order w/creation order index PASSED
Testing query group info by creation order index in increasing order w/o creation order index PASSED
Testing query group info by creation order index in increasing order w/creation order index PASSED
Testing query group info by creation order index in decreasing order w/o creation order index PASSED
Testing query group info by creation order index in decreasing order w/creation order index PASSED
Testing query group info by creation order index in native order w/o creation order index PASSED
Testing query group info by creation order index in native order w/creation order index PASSED
Testing timestamps on objects                                          PASSED
Testing querying info by index in old-style group, using soft links    PASSED
Testing querying info by index in old-style group, using hard links    PASSED
Testing deleting links by index in increasing order in old-style group PASSED
Testing deleting links by index in decreasing order in old-style group PASSED
Testing iterating over links by name index in increasing order in old-style group PASSED
Testing iterating over links by name index in decreasing order in old-style group PASSED
Testing iterating over links by name index in native order in old-style group PASSED
Testing open object by name index in increasing order in old-style group PASSED
Testing open object by name index in decreasing order in old-style group PASSED
Testing open object by name index in native order in old-style group   PASSED
Testing query object info by name index in increasing order in old-style group PASSED
Testing query object info by name index in decreasing order in old-style group PASSED
Testing query object info by name index in native order in old-style group PASSED
Testing query group info by name index in increasing order in old-style group PASSED
Testing query group info by name index in decreasing order in old-style group PASSED
Testing query group info by name index in native order in old-style group PASSED
Testing external links are registered after reset                      PASSED
All link tests passed.
2.45user 0.15system 0:03.61elapsed 72%CPU (0avgtext+0avgdata 9052maxresident)k
0inputs+15048outputs (0major+24157minor)pagefaults 0swaps

Finished testing links 
============================
============================
Testing  ttsafe 
============================
 ttsafe  Test Log
============================
Most thread-safety tests skipped because THREADSAFE not enabled

For help use: /mnt/wrk/lrknox/hdf5_hdf5/build/test/.libs/lt-ttsafe -help
Linked with hdf5 version 1.8 release 21
Testing  -- library threadsafe status (is_threadsafe) 


All tests were successful. 


Cleaning Up temp files...

0.04user 0.02system 0:00.07elapsed 102%CPU (0avgtext+0avgdata 7072maxresident)k
0inputs+104outputs (0major+8293minor)pagefaults 0swaps

Finished testing ttsafe 
============================
============================
Testing  getname 
============================
 getname  Test Log
============================
Testing H5Iget_name with one group                                     PASSED
Testing H5Iget_name with more than one group                           PASSED
Testing H5Iget_name with H5Gopen2                                      PASSED
Testing H5Iget_name with H5Dcreate2                                    PASSED
Testing H5Iget_name with H5Dopen2                                      PASSED
Testing H5Iget_name with a long path                                   PASSED
Testing H5Iget_name with H5Tcommit2                                    PASSED
Testing H5Iget_name with H5Topen2                                      PASSED
Testing H5Iget_name with H5Lmove and H5Gopen2                          PASSED
Testing H5Iget_name with H5Lmove and H5Dopen2                          PASSED
Testing H5Iget_name with H5Lmove and H5Topen2                          PASSED
Testing H5Iget_name with H5Lmove and relative names                    PASSED
Testing H5Iget_name with H5Lmove and a long path                       PASSED
Testing H5Iget_name with H5Lmove and a long path #2                    PASSED
Testing H5Iget_name with H5Ldelete                                     PASSED
Testing H5Iget_name with H5Ldelete and a long path                     PASSED
Testing H5Iget_name with H5Ldelete, same names                         PASSED
Testing H5Iget_name with H5Fmount; with IDs on the list                PASSED
Testing H5Iget_name with H5Fmount; long name                           PASSED
Testing H5Iget_name with H5Funmount                                    PASSED
Testing H5Iget_name with a defined type dataset                        PASSED
Testing H5Iget_name with datasets that have two names                  PASSED
Testing H5Iget_name with different files                               PASSED
Testing H5Iget_name with different files #2                            PASSED
Testing H5Iget_name with a small buffer for name                       PASSED
Testing H5Iget_name with a dynamic buffer for name                     PASSED
Testing H5Iget_name with invalid IDs                                   PASSED
Testing H5Iget_name with added names with mounting                     PASSED
Testing H5Iget_name with H5Fclose                                      PASSED
Testing H5Iget_name with H5Fmount and H5Ldelete                        PASSED
Testing H5Iget_name with H5Fmount and H5Lmove                          PASSED
Testing H5Iget_name with H5Lcreate_hard                                PASSED
Testing H5Iget_name with H5Lcreate_soft                                PASSED
Testing H5Iget_name with H5Lcreate_soft and move target                PASSED
Testing H5Iget_name with H5Lcreate_soft and move source                PASSED
Testing H5Iget_name with H5Lcreate_soft and unlink target              PASSED
Testing H5Iget_name with H5Lcreate_soft and unlink source              PASSED
Testing H5Iget_name with several nested mounted files                  PASSED
Testing H5Iget_name and H5Lmove with repeated path components          PASSED
Testing H5Iget_name with higher mounted file                           PASSED
Testing H5Iget_name with multiple hard links and mounted files         PASSED
Testing H5Iget_name with mounted files and unlinking                   PASSED
Testing H5Iget_name with mounting already mounted files                PASSED
Testing H5Iget_name with opening object in unmounted file              PASSED
Testing H5Iget_name with anonymous datatypes                           PASSED
Testing getting path to normal dataset in root group                   PASSED
Testing getting path to dataset in /Group1                             PASSED
Testing getting path to /Group1                                        PASSED
Testing getting path to datatype in /Group1                            PASSED
Testing getting path to dataset in nested group                        PASSED
Testing getting path to nested group                                   PASSED
Testing getting path to dataset created via hard link                  PASSED
Testing getting path to root group                                     PASSED
Testing getting path to dataset hidden by a mounted file               PASSED
Testing getting path to dataset that has been unlinked                 PASSED
Testing H5Rget_name to get name from region reference(hyperslab)       PASSED
Testing H5Iget_name to get name from region reference(hyperslab)       PASSED
Testing H5Rget_name to get name from region reference(pnt selec)       PASSED
Testing H5Iget_name to get name from region reference(pnt selec)       PASSED
All getname tests passed.
0.10user 0.03system 0:00.16elapsed 86%CPU (0avgtext+0avgdata 7264maxresident)k
0inputs+984outputs (0major+11881minor)pagefaults 0swaps

Finished testing getname 
============================
============================
Testing  vfd 
============================
 vfd  Test Log
============================
Testing basic Virtual File Driver functionality.
Testing SEC2 file driver                                               PASSED
Testing CORE file driver                                               PASSED
Testing FAMILY file driver                                             PASSED
Testing FAMILY file driver backward compatibility                      PASSED
Testing MULTI file driver                                              PASSED
Testing MULTI file driver backward compatibility                       PASSED
Testing DIRECT I/O file driver                                         -SKIP-
Testing LOG file driver                                                PASSED
Testing STDIO file driver                                              PASSED
Testing WINDOWS file driver                                            -SKIP-
All Virtual File Driver tests passed.
0.07user 0.03system 0:00.15elapsed 66%CPU (0avgtext+0avgdata 7060maxresident)k
0inputs+1152outputs (0major+9322minor)pagefaults 0swaps

Finished testing vfd 
============================
============================
Testing  ntypes 
============================
 ntypes  Test Log
============================
Testing atomic datatype                                                PASSED
Testing compound datatype                                              PASSED
Testing nested compound datatype                                       PASSED
Testing compound datatype with array as field                          PASSED
Testing compound datatype with opaque field                            PASSED
Testing enum datatype                                                  PASSED
Testing array of compound datatype                                     PASSED
Testing array of atomic datatype                                       PASSED
Testing variable length datatype                                       PASSED
Testing variable length string datatype                                PASSED
Testing fixed-length string datatype                                   PASSED
Testing reference datatype                                             PASSED
Testing dataset region reference                                       PASSED
Testing opaque datatype                                                PASSED
Testing bitfield datatype                                              PASSED
Testing native integer                                                 PASSED
All native datatype tests passed.
0.11user 0.03system 0:00.16elapsed 98%CPU (0avgtext+0avgdata 11600maxresident)k
0inputs+7416outputs (0major+13350minor)pagefaults 0swaps

Finished testing ntypes 
============================
============================
Testing  dangle 
============================
 dangle  Test Log
============================
Testing dangling objects with weak file close:
Testing     dangling dataset IDs                                       PASSED
Testing     dangling group IDs                                         PASSED
Testing     dangling named datatype IDs                                PASSED
Testing     dangling named datatype ID used by dataset                 PASSED
Testing     dangling attribute IDs                                     PASSED
Testing dangling objects with semi file close:
Testing     dangling dataset IDs                                       PASSED
Testing     dangling group IDs                                         PASSED
Testing     dangling named datatype IDs                                PASSED
Testing     dangling named datatype ID used by dataset                 PASSED
Testing     dangling attribute IDs                                     PASSED
Testing dangling objects with strong file close:
Testing     dangling dataset IDs                                       PASSED
Testing     dangling group IDs                                         PASSED
Testing     dangling named datatype IDs                                PASSED
Testing     dangling named datatype ID used by dataset                 PASSED
Testing     dangling attribute IDs                                     PASSED
All dangling ID tests passed.
0.33user 0.03system 0:00.46elapsed 80%CPU (0avgtext+0avgdata 7024maxresident)k
0inputs+376outputs (0major+8913minor)pagefaults 0swaps

Finished testing dangle 
============================
============================
Testing  dtransform 
============================
 gheap  Test Log
============================
Testing monotonically increasing lengths                               PASSED
Testing monotonically decreasing lengths                               PASSED
Testing complete object removal                                        PASSED
Testing partial object removal                                         PASSED
Testing out of order indices                                           PASSED
All global heap tests passed.
7.03user 0.02system 0:07.10elapsed 99%CPU (0avgtext+0avgdata 9492maxresident)k
0inputs+2680outputs (0major+12357minor)pagefaults 0swaps

Finished testing gheap 
============================
============================
Testing  reserved 
============================
 dtransform  Test Log
============================
Testing Intializing test...                                            PASSED
Testing H5Pget_data_transform (get before set)                         PASSED
Testing H5Pset_data_transform (set with NULL transform)                PASSED
Testing H5Pset_data_transform (set with invalid transform 1)           PASSED
Testing H5Pset_data_transform (set with invalid transform 2)           PASSED
Testing H5Pset_data_transform (set with invalid transform 3)           PASSED
Testing H5Pset_data_transform (set with invalid transform 4)           PASSED
Testing H5Pset_data_transform (set with invalid transform 5)           PASSED
Testing H5Pset_data_transform (set with invalid transform 6)           PASSED
Testing H5Pset_data_transform (set with invalid transform 7)           PASSED
Testing H5Pset_data_transform (set with invalid transform 8)           PASSED
Testing contiguous, no data type conversion (char->char)               PASSED
Testing contiguous, byte order conversion (char->char)                 PASSED
Testing contiguous, no data type conversion (uchar->uchar)             PASSED
Testing contiguous, byte order conversion (uchar->uchar)               PASSED
Testing contiguous, no data type conversion (schar->schar)             PASSED
Testing contiguous, byte order conversion (schar->schar)               PASSED
Testing contiguous, with type conversion (float->schar)                PASSED
Testing contiguous, no data type conversion (short->short)             PASSED
Testing contiguous, byte order conversion (short->short)               PASSED
Testing contiguous, with type conversion (float->short)                PASSED
Testing contiguous, no data type conversion (ushort->ushort)           PASSED
Testing contiguous, byte order conversion (ushort->ushort)             PASSED
Testing contiguous, no data type conversion (int->int)                 PASSED
Testing contiguous, byte order conversion (int->int)                   PASSED
Testing contiguous, with type conversion (float->int)                  PASSED
Testing contiguous, no data type conversion (uint->uint)               PASSED
Testing contiguous, byte order conversion (uint->uint)                 PASSED
Testing contiguous, no data type conversion (long->long)               PASSED
Testing contiguous, byte order conversion (long->long)                 PASSED
Testing contiguous, with type conversion (float->long)                 PASSED
Testing contiguous, no data type conversion (ulong->ulong)             PASSED
Testing contiguous, byte order conversion (ulong->ulong)               PASSED
Testing contiguous, no data type conversion (llong->llong)             PASSED
Testing contiguous, byte order conversion (llong->llong)               PASSED
Testing contiguous, with type conversion (float->llong)                PASSED
Testing contiguous, no data type conversion (ullong->ullong)           PASSED
Testing contiguous, byte order conversion (ullong->ullong)             PASSED
Testing contiguous, no data type conversion (float->float)             PASSED
Testing contiguous, byte order conversion (float->float)               PASSED
Testing contiguous, with type conversion (float->float)                PASSED
Testing contiguous, no data type conversion (double->double)           PASSED
Testing contiguous, byte order conversion (double->double)             PASSED
Testing contiguous, with type conversion (float->double)               PASSED
Testing contiguous, no data type conversion (ldouble->ldouble)         PASSED
Testing contiguous, byte order conversion (ldouble->ldouble)           PASSED
Testing contiguous, with type conversion (float->ldouble)              PASSED
Testing chunked, no data type conversion (char->char)                  PASSED
Testing chunked, no data type conversion (uchar->uchar)                PASSED
Testing chunked, no data type conversion (schar->schar)                PASSED
Testing chunked, with type conversion (float->schar)                   PASSED
Testing chunked, no data type conversion (short->short)                PASSED
Testing chunked, with type conversion (float->short)                   PASSED
Testing chunked, no data type conversion (ushort->ushort)              PASSED
Testing chunked, no data type conversion (int->int)                    PASSED
Testing chunked, with type conversion (float->int)                     PASSED
Testing chunked, no data type conversion (uint->uint)                  PASSED
Testing chunked, no data type conversion (long->long)                  PASSED
Testing chunked, with type conversion (float->long)                    PASSED
Testing chunked, no data type conversion (ulong->ulong)                PASSED
Testing chunked, no data type conversion (llong->llong)                PASSED
Testing chunked, with type conversion (float->llong)                   PASSED
Testing chunked, no data type conversion (ullong->ullong)              PASSED
Testing chunked, no data type conversion (float->float)                PASSED
Testing chunked, with type conversion (float->float)                   PASSED
Testing chunked, no data type conversion (double->double)              PASSED
Testing chunked, with type conversion (float->double)                  PASSED
Testing chunked, no data type conversion (ldouble->ldouble)            PASSED
Testing chunked, with type conversion (float->ldouble)                 PASSED
Testing data transform, linear transform w/ copied property            PASSED
Testing data transform, polynomial transform w/ copied property        PASSED
Testing data transform, trivial transform, without type conversion     PASSED
Testing data transform, trivial transform, with type conversion        PASSED
Testing data transform, polynomial transform (int->float)              PASSED
Testing data transform, polynomial transform (float->int)              PASSED
Testing H5Pget_data_transform                                          PASSED
Testing data transform, read after reseting of transform property      PASSED
Testing H5Pget_data_transform, after resetting transform property      PASSED
Testing data transform of some special cases                           PASSED
0.06user 0.03system 0:00.09elapsed 103%CPU (0avgtext+0avgdata 7088maxresident)k
0inputs+536outputs (0major+9003minor)pagefaults 0swaps

Finished testing dtransform 
============================
============================
Testing  cross_read 
============================
 reserved  Test Log
============================
 -SKIP-
0.03user 0.03system 0:00.06elapsed 104%CPU (0avgtext+0avgdata 6896maxresident)k
0inputs+24outputs (0major+7808minor)pagefaults 0swaps

Finished testing reserved 
============================
============================
Testing  freespace 
============================
 cross_read  Test Log
============================
Testing reading data created on Linux
Testing regular dataset of LE DOUBLE                                   PASSED
Testing regular dataset of BE DOUBLE                                   PASSED
Testing dataset of LE FLOAT with scale-offset filter                   PASSED
Testing dataset of BE FLOAT with scale-offset filter                   PASSED
Testing dataset of LE DOUBLE with scale-offset filter                  PASSED
Testing dataset of BE DOUBLE with scale-offset filter                  PASSED
Testing dataset of LE CHAR with scale-offset filter                    PASSED
Testing dataset of BE CHAR with scale-offset filter                    PASSED
Testing dataset of LE SHORT with scale-offset filter                   PASSED
Testing dataset of BE SHORT with scale-offset filter                   PASSED
Testing dataset of LE INT with scale-offset filter                     PASSED
Testing dataset of BE INT with scale-offset filter                     PASSED
Testing dataset of LE LONG LONG with scale-offset filter               PASSED
Testing dataset of BE LONG LONG with scale-offset filter               PASSED
Testing dataset of LE FLOAT with Fletcher32 filter                     PASSED
Testing dataset of BE FLOAT with Fletcher32 filter                     PASSED
Testing dataset of LE FLOAT with Deflate filter                        PASSED
Testing dataset of BE FLOAT with Deflate filter                        PASSED
Testing dataset of LE FLOAT with Szip filter                           -SKIP-
    filter is not enabled.
Testing dataset of BE FLOAT with Szip filter                           -SKIP-
    filter is not enabled.
Testing dataset of LE FLOAT with Shuffle filter                        PASSED
Testing dataset of BE FLOAT with Shuffle filter                        PASSED
Testing dataset of LE FLOAT with Nbit filter                           PASSED
Testing dataset of BE FLOAT with Nbit filter                           PASSED
Testing reading data created on Solaris
Testing regular dataset of LE DOUBLE                                   PASSED
Testing regular dataset of BE DOUBLE                                   PASSED
Testing dataset of LE FLOAT with scale-offset filter                   PASSED
Testing dataset of BE FLOAT with scale-offset filter                   PASSED
Testing dataset of LE DOUBLE with scale-offset filter                  PASSED
Testing dataset of BE DOUBLE with scale-offset filter                  PASSED
Testing dataset of LE CHAR with scale-offset filter                    PASSED
Testing dataset of BE CHAR with scale-offset filter                    PASSED
Testing dataset of LE SHORT with scale-offset filter                   PASSED
Testing dataset of BE SHORT with scale-offset filter                   PASSED
Testing dataset of LE INT with scale-offset filter                     PASSED
Testing dataset of BE INT with scale-offset filter                     PASSED
Testing dataset of LE LONG LONG with scale-offset filter               PASSED
Testing dataset of BE LONG LONG with scale-offset filter               PASSED
Testing dataset of LE FLOAT with Fletcher32 filter                     PASSED
Testing dataset of BE FLOAT with Fletcher32 filter                     PASSED
Testing dataset of LE FLOAT with Deflate filter                        PASSED
Testing dataset of BE FLOAT with Deflate filter                        PASSED
Testing dataset of LE FLOAT with Szip filter                           -SKIP-
    filter is not enabled.
Testing dataset of BE FLOAT with Szip filter                           -SKIP-
    filter is not enabled.
Testing dataset of LE FLOAT with Shuffle filter                        PASSED
Testing dataset of BE FLOAT with Shuffle filter                        PASSED
Testing dataset of LE FLOAT with Nbit filter                           PASSED
Testing dataset of BE FLOAT with Nbit filter                           PASSED
All data type tests passed.
0.05user 0.03system 0:00.08elapsed 102%CPU (0avgtext+0avgdata 7008maxresident)k
0inputs+128outputs (0major+8914minor)pagefaults 0swaps

Finished testing cross_read 
============================
============================
Testing  mf 
============================
 freespace  Test Log
============================
Testing the creation/close/reopen/deletion of the free-space manager   PASSED
Testing adding a section via H5FS_sect_add() to free-space: test 1     PASSED
Testing adding a section via H5FS_sect_add() to free-space with H5FS_CLS_GHOST_OBJ: test 2 PASSED
Testing adding a section via H5FS_sect_add() to free-space: test 3     PASSED
Testing adding a section via H5FS_sect_add() to free-space: test 4     PASSED
Testing the merge of sections when H5FS_sect_add() to free-space: test 1 PASSED
Testing the merge of sections when H5FS_sect_add() to free-space: test 2 PASSED
Testing the merge of sections when H5FS_sect_add() to free-space: test 3 PASSED
Testing shrinking of sections when H5FS_sect_add() to free-space: test 1 PASSED
Testing shrinking of sections when H5FS_sect_add() to free-space: test 2 PASSED
Testing shrinking of sections when H5FS_sect_add() to free-space: test 3 PASSED
Testing H5FS_sect_find(): free-space is empty                          PASSED
Testing H5FS_sect_find() a section equal to requested-size from free-space PASSED
Testing H5FS_sect_find() a section greater than requested-size from free-space PASSED
Testing H5FS_sect_find(): cannot find a section with requested-size from free-space PASSED
Testing the change of section class via H5FS_sect_change_class() in free-space: Test 1 PASSED
Testing the merge of sections when H5FS_sect_add() to free-space: test 2 PASSED
Testing a block's extension by requested-size which is = adjoining free section's size: Test 1 PASSED
Testing a block's extension by requested-size which is > adjoining free section's size: Test 2 PASSED
Testing a block's extension by requested-size which is < adjoining free section's size: Test 3 PASSED
Testing a block's extension by requested-size which does not adjoin any free section: Test 4 PASSED
Testing iteration of sections in the free-space manager                PASSED
All free-space tests passed.
0.06user 0.03system 0:00.15elapsed 66%CPU (0avgtext+0avgdata 7124maxresident)k
0inputs+456outputs (0major+8926minor)pagefaults 0swaps

Finished testing freespace 
============================
============================
Testing  btree2 
============================
 mf  Test Log
============================
Testing H5MM_alloc() of file allocation                                PASSED
Testing H5MF_try_shrink() of file allocation: test 1                   PASSED
Testing H5MF_try_shrink() of file allocation: test 2                   PASSED
Testing H5MF_try_shrink() of file allocation: test 3                   PASSED
Testing H5MF_try_shrink() of file allocation: test 4                   PASSED
Testing H5MF_try_extend() of file allocation: test 1                   PASSED
Testing H5MF_try_extend() of file allocation: test 2                   PASSED
Testing 'temporary' file space allocation                              PASSED
Testing H5MF_alloc_create()/H5MF_alloc_open() of free-space manager    PASSED
Testing H5MF_alloc()/H5MF_xfree() of free-space manager:test 1         PASSED
Testing H5MF_alloc()/H5MF_xfree() of free-space manager:test 2         PASSED
Testing H5MF_alloc()/H5MF_xfree() of free-space manager:test 3         PASSED
Testing H5MF_try_extend() of free-space manager:test 1                 PASSED
Testing H5MF_try_extend() of free-space manager:test 2                 PASSED
Testing H5MF_try_extend() of free-space manager:test 3                 PASSED
Testing H5MF_try_extend() of free-space manager:test 4                 PASSED
Testing A free-space section absorbs an aggregator: test 1             PASSED
Testing A free-space section absorbs an aggregator: test 2             PASSED
Testing Allocation from raw or metadata free-space manager             PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 1                   PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 2                   PASSED
Testing H5MF_alloc() of meta/sdata aggregator: test 3                  PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 4                   PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 5                   PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 6                   PASSED
Testing H5MF_alloc() of meta/sdata aggregator:test 7                   PASSED
Testing H5MF_try_extend() of meta/sdata aggregator: test 1             PASSED
Testing H5MF_try_extend() of meta/sdata aggregator: test 2             PASSED
Testing H5MF_try_extend() of meta/sdata aggregator: test 3             PASSED
Testing H5MF_try_shrink() of meta/sdata aggregator: test 1             PASSED
Testing H5MF_try_shrink() of meta/sdata aggregator: test 2             PASSED
Testing H5MF_try_shrink() of meta/sdata aggregator: test 3             PASSED
Testing H5MM_alloc() of file allocation with alignment: test 1         PASSED
Testing H5MF_try_shrink() of file allocation with alignment: test 2    PASSED
Testing H5MF_try_extend() of file allocation with alignment: test 3    PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 1      PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 2      PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 3      PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 1   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 2   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 3   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 4   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 5   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 6   PASSED
Testing H5MM_alloc() of file allocation with alignment: test 1         PASSED
Testing H5MF_try_shrink() of file allocation with alignment: test 2    PASSED
Testing H5MF_try_extend() of file allocation with alignment: test 3    PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 1      PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 2      PASSED
Testing H5MF_alloc() of free-space manager with alignment: test 3      PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 1   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 2   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 3   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 4   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 5   PASSED
Testing H5MF_alloc() of meta/sdata aggregator with alignment: test 6   PASSED
Testing H5MF_alloc() bug 1                                             PASSED
All free-space manager tests for file memory passed.
0.13user 0.03system 0:00.49elapsed 34%CPU (0avgtext+0avgdata 7228maxresident)k
0inputs+1120outputs (0major+9016minor)pagefaults 0swaps

Finished testing mf 
============================
============================
Testing  fheap 
============================
 fillval  Test Log
============================
Testing property lists                                                 PASSED
Testing property lists, with variable-length datatype                  PASSED
Testing with old file format:
Testing chunked dataset creation                                       PASSED
Testing chunked dataset I/O                                            PASSED
Testing chunked dataset extend                                         PASSED
Testing chunked dataset partially allocated I/O                        PASSED
Testing contiguous dataset creation                                    PASSED
Testing contiguous dataset I/O                                         PASSED
Testing contiguous dataset extend                                      -SKIP-
    Not implemented yet -- needs H5S_SELECT_DIFF operator
Testing contiguous dataset compatibility with v. 1.4                   PASSED
Testing compact dataset creation                                       PASSED
Testing compact dataset I/O                                            PASSED

Testing with new file format:
Testing chunked dataset creation                                       PASSED
Testing chunked dataset I/O                                            PASSED
Testing chunked dataset extend                                         PASSED
Testing chunked dataset partially allocated I/O                        PASSED
Testing contiguous dataset creation                                    PASSED
Testing contiguous dataset I/O                                         PASSED
Testing contiguous dataset extend                                      -SKIP-
    Not implemented yet -- needs H5S_SELECT_DIFF operator
Testing contiguous dataset compatibility with v. 1.4                   PASSED
Testing compact dataset creation                                       PASSED
Testing compact dataset I/O                                            PASSED
All fill value tests passed.
4.10user 0.17system 0:04.55elapsed 94%CPU (0avgtext+0avgdata 16352maxresident)k
0inputs+310328outputs (0major+17930minor)pagefaults 0swaps

Finished testing fillval 
============================
============================
Testing  file_image 
============================
 file_image  Test Log
============================
Testing File Image Functionality.
Testing File image property list functions                             PASSED
Testing Callback use in property list operations                       PASSED
Testing Initial file image and callbacks in Core VFD                   PASSED
Testing H5Fget_file_image() with sec2 driver                           PASSED
Testing H5Fget_file_image() with stdio driver                          PASSED
Testing H5Fget_file_image() with core driver                           PASSED
Testing H5Fget_file_image() error rejection                            PASSED
All File Image tests passed.
0.06user 0.02system 0:00.12elapsed 70%CPU (0avgtext+0avgdata 7072maxresident)k
0inputs+472outputs (0major+8985minor)pagefaults 0swaps

Finished testing file_image 
============================
============================
Testing  unregister 
============================
 unlink  Test Log
============================
Testing with old group format:
Testing unlink by absolute name                                        PASSED
Testing unlink by local name                                           PASSED
Testing unlink without a name                                          PASSED
Testing forward unlink                                                 PASSED
Testing backward unlink                                                PASSED
Testing inward unlink                                                  PASSED
Testing outward unlink                                                 PASSED
Testing symlink removal                                                PASSED
Testing object renaming                                                PASSED
Testing symlink renaming                                               PASSED
Testing new move                                                       PASSED
Testing check new move function                                        PASSED
Testing file space gets reused:
Testing     contiguous dataset with late allocation                    PASSED
Testing     contiguous dataset with early allocation                   PASSED
Testing     chunked dataset with late allocation                       PASSED
Testing     chunked dataset with early allocation                      PASSED
Testing     compressed, chunked dataset                                PASSED
Testing     re-writing compressed, chunked dataset                     PASSED
Testing     compact dataset                                            PASSED
Testing     object header continuations                                PASSED
Testing     named datatype                                             PASSED
Testing     single group                                               PASSED
Testing     multiple groups                                            PASSED
Testing     simple group hierarchy                                     PASSED
Testing     complex group hierarchy                                    PASSED
Testing     duplicate dataset                                          PASSED
Testing     duplicate group                                            PASSED
Testing     duplicate named datatype                                   PASSED
Testing     duplicate attribute                                        PASSED
Testing create and unlink large number of objects                      PASSED
Testing create and unlink large number of objects with small cache     PASSED
Testing creating links with multiple slashes                           PASSED
Testing deleting links with multiple slashes                           PASSED
Testing deleting right-most child in non-leaf B-tree node              PASSED
Testing deleting right-most child in non-leaf B-tree node              PASSED
Testing deleting right-most child in non-leaf B-tree node              PASSED
Testing resurrecting dataset after deletion                            PASSED
Testing resurrecting datatype after deletion                           PASSED
Testing resurrecting group after deletion                              PASSED
Testing unlinking chunked dataset                                      PASSED

Testing with new group format:
Testing unlink by absolute name                                        PASSED
Testing unlink by local name                                           PASSED
Testing unlink without a name                                          PASSED
Testing forward unlink                                                 PASSED
Testing backward unlink                                                PASSED
Testing inward unlink                                                  PASSED
Testing outward unlink                                                 PASSED
Testing symlink removal                                                PASSED
Testing object renaming                                                PASSED
Testing symlink renaming                                               PASSED
Testing new move                                                       PASSED
Testing check new move function                                        PASSED
Testing file space gets reused:
Testing     contiguous dataset with late allocation                    PASSED
Testing     contiguous dataset with early allocation                   PASSED
Testing     chunked dataset with late allocation                       PASSED
Testing     chunked dataset with early allocation                      PASSED
Testing     compressed, chunked dataset                                PASSED
Testing     re-writing compressed, chunked dataset                     PASSED
Testing     compact dataset                                            PASSED
Testing     object header continuations                                PASSED
Testing     named datatype                                             PASSED
Testing     single group                                               PASSED
Testing     multiple groups                                            PASSED
Testing     simple group hierarchy                                     PASSED
Testing     complex group hierarchy                                    PASSED
Testing     duplicate dataset                                          PASSED
Testing     duplicate group                                            PASSED
Testing     duplicate named datatype                                   PASSED
Testing     duplicate attribute                                        PASSED
Testing create and unlink large number of objects                      PASSED
Testing create and unlink large number of objects with small cache     PASSED
Testing creating links with multiple slashes                           PASSED
Testing deleting links with multiple slashes                           PASSED
Testing resurrecting dataset after deletion                            PASSED
Testing resurrecting datatype after deletion                           PASSED
Testing resurrecting group after deletion                              PASSED
Testing unlinking chunked dataset                                      PASSED
Testing unlinking non-empty compact group                              PASSED
Testing unlinking non-empty dense group                                PASSED
All unlink tests passed.
4.35user 0.18system 0:05.59elapsed 81%CPU (0avgtext+0avgdata 27912maxresident)k
0inputs+36392outputs (0major+25383minor)pagefaults 0swaps

Finished testing unlink 
============================
============================
Testing testerror.sh 
============================
 unregister  Test Log
============================
Testing Unregistering filter                                           PASSED
All filter unregistration tests passed.
0.11user 0.03system 0:00.17elapsed 88%CPU (0avgtext+0avgdata 10652maxresident)k
0inputs+2000outputs (0major+10375minor)pagefaults 0swaps

Finished testing unregister 
============================
============================
Testing testlibinfo.sh 
Finished testing testerror.sh 
============================
testerror.sh  Test Log
============================
Testing err_compat                                                     PASSED
Testing error_test                                                     PASSED
All Error API tests passed.
0.10user 0.09system 0:00.20elapsed 95%CPU (0avgtext+0avgdata 7036maxresident)k
0inputs+360outputs (0major+25599minor)pagefaults 0swaps

Finished testing testerror.sh 
============================
============================
============================
Testing testcheck_version.sh 
Finished testing testlibinfo.sh 
============================
testlibinfo.sh  Test Log
============================
Check file ../src/.libs/libhdf5.so.10                                  PASSED
Check file ../src/.libs/libhdf5.a                                      PASSED
Check file testhdf5                                                    -SKIP-
No error encountered
0.27user 0.04system 0:00.29elapsed 109%CPU (0avgtext+0avgdata 1492maxresident)k
0inputs+0outputs (0major+6132minor)pagefaults 0swaps

Finished testing testlibinfo.sh 
============================
============================
============================
Testing testlinks_env.sh 
Finished testing testlinks_env.sh 
============================
testlinks_env.sh  Test Log
============================
Testing external link with HDF5_EXT_PREFIX
Testing external links via environment variable                        PASSED
Testing external links via environment variable (w/new group format)   PASSED
All external Link (HDF5_EXT_PREFIX) tests passed.
Test for HDF5_EXT_PREFIX PASSED
0.05user 0.03system 0:00.09elapsed 94%CPU (0avgtext+0avgdata 7000maxresident)k
0inputs+184outputs (0major+9907minor)pagefaults 0swaps

Finished testing testlinks_env.sh 
============================
============================
============================
Testing test_plugin.sh 
Finished testing test_plugin.sh 
============================
test_plugin.sh  Test Log
============================
Testing with old file format:
Testing deflate filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB1 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB2 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB4 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing DYNLIB3 filter for group                                       PASSED

Testing with new file format:
Testing deflate filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB1 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB2 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
    DYNLIB4 filter
Testing     filters (setup)                                            PASSED
Testing     filters (uninitialized read)                               PASSED
Testing     filters (write)                                            PASSED
Testing     filters (read)                                             PASSED
Testing     filters (modify)                                           PASSED
Testing     filters (re-open)                                          PASSED
Testing     filters (partial I/O)                                      PASSED
Testing DYNLIB3 filter for group                                       PASSED

Testing reading data with with dynamic plugin filters:
Testing deflate filter                                                 PASSED
Testing     DYNLIB1 filter                                             PASSED
Testing     DYNLIB2 filter                                             PASSED
Testing     DYNLIB4 filter                                             PASSED
Testing opening groups with DYNLIB3 filter                             PASSED
Testing DYNLIB1 filter with plugins disabled                           PASSED
Testing access to the filter path table
Testing     initialize                                                 PASSED
Testing     remove                                                     PASSED
Testing     remove (exceed min)                                        PASSED
Testing     append                                                     PASSED
Testing     append (exceed)                                            PASSED
Testing     remove (exceed max)                                        PASSED
Testing     get (path name)                                            PASSED
Testing     get (bounds)                                               PASSED
Testing     get (bounds exceed)                                        PASSED
Testing     remove (verify for prepend)                                PASSED
Testing     prepend                                                    PASSED
Testing     prepend (exceed)                                           PASSED
Testing     replace                                                    PASSED
Testing     remove (verify for insert)                                 PASSED
Testing     insert                                                     PASSED
Testing     insert (exceed)                                            PASSED
All plugin tests passed.
All Plugin API tests passed.
0.32user 0.09system 0:00.43elapsed 95%CPU (0avgtext+0avgdata 11296maxresident)k
0inputs+3720outputs (0major+29904minor)pagefaults 0swaps

Finished testing test_plugin.sh 
============================
============================
============================
Testing  flush2 
============================
 flush2  Test Log
============================
Testing H5Fflush (part2 with flush)                                    PASSED
Testing H5Fflush (part2 without flush)                                 PASSED
Testing H5Fflush (part2 with flush and later addition)                 PASSED
0.04user 0.02system 0:00.07elapsed 104%CPU (0avgtext+0avgdata 6996maxresident)k
0inputs+128outputs (0major+8823minor)pagefaults 0swaps

Finished testing flush2 
============================
Finished testing testcheck_version.sh 
============================
testcheck_version.sh  Test Log
============================
Tests for the H5check_version function.
Note that abort messages may appear due to the expected termination
of the program when it is tested with mis-matched version numnbers.
tcheck_version                                                         PASSED
tcheck_version -tM                                                     PASSED
tcheck_version -tm                                                     PASSED
tcheck_version -tr                                                     PASSED
env HDF5_DISABLE_VERSION_CHECK= tcheck_version                         PASSED
env HDF5_DISABLE_VERSION_CHECK= tcheck_version -tM                     PASSED
env HDF5_DISABLE_VERSION_CHECK= tcheck_version -tm                     PASSED
env HDF5_DISABLE_VERSION_CHECK= tcheck_version -tr                     PASSED
env HDF5_DISABLE_VERSION_CHECK=-1 tcheck_version                       PASSED
env HDF5_DISABLE_VERSION_CHECK=-1 tcheck_version -tM                   PASSED
env HDF5_DISABLE_VERSION_CHECK=-1 tcheck_version -tm                   PASSED
env HDF5_DISABLE_VERSION_CHECK=-1 tcheck_version -tr                   PASSED
env HDF5_DISABLE_VERSION_CHECK=0 tcheck_version                        PASSED
env HDF5_DISABLE_VERSION_CHECK=0 tcheck_version -tM                    PASSED
env HDF5_DISABLE_VERSION_CHECK=0 tcheck_version -tm                    PASSED
env HDF5_DISABLE_VERSION_CHECK=0 tcheck_version -tr                    PASSED
env HDF5_DISABLE_VERSION_CHECK=1 tcheck_version                        PASSED
env HDF5_DISABLE_VERSION_CHECK=1 tcheck_version -tM                    PASSED
env HDF5_DISABLE_VERSION_CHECK=1 tcheck_version -tm                    PASSED
env HDF5_DISABLE_VERSION_CHECK=1 tcheck_version -tr                    PASSED
env HDF5_DISABLE_VERSION_CHECK=2 tcheck_version                        PASSED
env HDF5_DISABLE_VERSION_CHECK=2 tcheck_version -tM                    PASSED
env HDF5_DISABLE_VERSION_CHECK=2 tcheck_version -tm                    PASSED
env HDF5_DISABLE_VERSION_CHECK=2 tcheck_version -tr                    PASSED
env HDF5_DISABLE_VERSION_CHECK=3 tcheck_version                        PASSED
env HDF5_DISABLE_VERSION_CHECK=3 tcheck_version -tM                    PASSED
env HDF5_DISABLE_VERSION_CHECK=3 tcheck_version -tm                    PASSED
env HDF5_DISABLE_VERSION_CHECK=3 tcheck_version -tr                    PASSED
No error encountered
0.35user 0.74system 0:00.89elapsed 122%CPU (0avgtext+0avgdata 6900maxresident)k
0inputs+480outputs (0major+219470minor)pagefaults 0swaps

Finished testing testcheck_version.sh 
============================
============================
============================
 set_extent  Test Log
============================
Testing with old file format and chunk cache disabled:
 Testing datasets with ranks 1 to 4 (all configurations)                PASSED
Testing with old file format and chunk cache enabled:
 Testing datasets with ranks 1 to 4 (all configurations)                PASSED
Testing external file use                                              PASSED
Testing storage layout use                                             PASSED
Testing with new file format and chunk cache disabled:
 Testing datasets with ranks 1 to 4 (all configurations)                PASSED
Testing with new file format and chunk cache enabled:
 Testing datasets with ranks 1 to 4 (all configurations)                PASSED
Testing external file use                                              PASSED
Testing storage layout use                                             PASSED
All H5Dset_extent tests passed.
5.71user 0.73system 0:08.25elapsed 78%CPU (0avgtext+0avgdata 7900maxresident)k
0inputs+12008outputs (0major+13438minor)pagefaults 0swaps

Finished testing set_extent 
============================
============================
 cache  Test Log
============================
Testing smoke check #1 -- all clean, ins, dest, ren, 4/2 MB cache      PASSED
Testing smoke check #2 -- ~1/2 dirty, ins, dest, ren, 4/2 MB cache     PASSED
Testing smoke check #3 -- all clean, ins, dest, ren, 2/1 KB cache      PASSED
Testing smoke check #4 -- ~1/2 dirty, ins, dest, ren, 2/1 KB cache     PASSED
Testing smoke check #5 -- all clean, ins, prot, unprot, AR cache 1     PASSED
Testing smoke check #6 -- ~1/2 dirty, ins, prot, unprot, AR cache 1    PASSED
Testing smoke check #7 -- all clean, ins, prot, unprot, AR cache 2     PASSED
Testing smoke check #8 -- ~1/2 dirty, ins, prot, unprot, AR cache 2    PASSED
Testing smoke check #9 -- all clean, ins, dest, ren, 4/2 MB, corked    PASSED
Testing smoke check #10 -- ~1/2 dirty, ins, dest, ren, 4/2 MB, corked  PASSED
Testing write permitted check -- 1/0 MB cache                          -SKIP-
	Clean and dirty LRU lists disabled.
Testing H5C_insert_entry() functionality                               PASSED
Testing H5C_flush_cache() functionality                                PASSED
Testing H5C_get_entry_status() functionality                           PASSED
Testing H5C_expunge_entry() functionality                              PASSED
Testing multiple read only protects on a single entry                  PASSED
Testing H5C_move_entry() functionality                                 PASSED
Testing H5C_pin_protected_entry() functionality                        PASSED
Testing entry resize functionality                                     PASSED
Testing evictions enabled/disabled functionality                       PASSED
Testing flush cache with protected entry error                         PASSED
Testing destroy cache with permanently pinned entry error              PASSED
Testing destroy cache with protected entry error                       PASSED
Testing duplicate entry insertion error                                PASSED
Testing move to existing entry errors                                  PASSED
Testing pin a pinned entry error                                       PASSED
Testing unpin an unpinned entry error                                  PASSED
Testing pin entry related errors                                       PASSED
Testing protect a protected entry error                                PASSED
Testing unprotect an unprotected entry error                           PASSED
Testing mark entry dirty related errors                                PASSED
Testing expunge entry related errors                                   PASSED
Testing resize entry related errors                                    PASSED
Testing unprotect a read only entry dirty error                        PASSED
Testing protect a read only entry rw error                             PASSED
Testing get/set evictions enabled errors                               PASSED
Testing automatic cache resizing                                       PASSED
Testing automatic cache resize disable                                 PASSED
Testing automatic cache resize epoch marker management                 PASSED
Testing automatic cache resize input errors                            PASSED
Testing automatic cache resize auxilary functions                      PASSED
Testing to ensure metadata blizzard absence when inserting             PASSED
Testing to ensure metadata blizzard absence on protect/unprotect       PASSED
12.18user 0.16system 0:13.18elapsed 93%CPU (0avgtext+0avgdata 128752maxresident)k
0inputs+1600outputs (0major+76670minor)pagefaults 0swaps

Finished testing cache 
============================
============================
 btree2  Test Log
============================
Testing without reopening B-tree:
Testing B-tree creation                                                PASSED
Testing B-tree iteration: empty B-tree                                 PASSED
Testing B-tree insert: first record                                    PASSED
Testing B-tree insert: several records                                 PASSED
Testing B-tree insert: split root                                      PASSED
Testing B-tree insert: redistribute 2 leaves in level 1 B-tree (l->r)  PASSED
Testing B-tree insert: redistribute 2 leaves in level 1 B-tree (r->l)  PASSED
Testing B-tree insert: split side leaf into 2 leaves in level 1 B-tree (l->r) PASSED
Testing B-tree insert: split side leaf into 2 leaves in level 1 B-tree (r->l) PASSED
Testing B-tree insert: redistribute 3 leaves in level 1 B-tree         PASSED
Testing B-tree insert: split middle leaf into 2 leaves in level 1 B-tree PASSED
Testing B-tree insert: make level 2 B-tree                             PASSED
Testing B-tree insert: redistrib right-most leaf in level 2 B-tree     PASSED
Testing B-tree insert: redistrib left-most leaf in level 2 B-tree      PASSED
Testing B-tree insert: redistrib middle leaf in level 2 B-tree         PASSED
Testing B-tree insert: split right-most leaf in level 2 B-tree         PASSED
Testing B-tree insert: split left-most leaf in level 2 B-tree          PASSED
Testing B-tree insert: split middle leaf in level 2 B-tree             PASSED
Testing B-tree insert: redist. 2 internal (r->l) in level 2 B-tree     PASSED
Testing B-tree insert: redist. 2 internal (l->r) in level 2 B-tree     PASSED
Testing B-tree insert: split side internal node to 2 in level 2 B-tree (r->l) PASSED
Testing B-tree insert: split side internal node to 2 in level 2 B-tree (l->2) PASSED
Testing B-tree insert: redistrib 3 internals in level 2 B-tree         PASSED
Testing B-tree insert: split 3 internals to 4 in level 2 B-tree        PASSED
Testing B-tree insert: create random level 4 B-tree                    PASSED
Testing B-tree insert: attempt duplicate record in level 4 B-tree      PASSED
Testing B-tree remove: record from empty B-tree                        PASSED
Testing B-tree remove: non-existant record from 1 record B-tree        PASSED
Testing B-tree remove: existant record from 1 record B-tree            PASSED
Testing B-tree remove: adding records to B-tree after removal          PASSED
Testing B-tree remove: non-existant record from level-0 B-tree         PASSED
Testing B-tree remove: mult. existant records from level-0 B-tree      PASSED
Testing B-tree remove: non-existant record from level-1 B-tree         PASSED
Testing B-tree remove: record from right leaf of level-1 B-tree        PASSED
Testing B-tree remove: record from left leaf of level-1 B-tree         PASSED
Testing B-tree remove: record from middle leaf of level-1 B-tree       PASSED
Testing B-tree remove: redistribute 2 leaves in level-1 B-tree (r->l)  PASSED
Testing B-tree remove: redistribute 2 leaves in level-1 B-tree (l->r)  PASSED
Testing B-tree remove: redistribute 3 leaves in level-1 B-tree         PASSED
Testing B-tree remove: merge 2 leaves to 1 in level-1 B-tree (r->l)    PASSED
Testing B-tree remove: merge 2 leaves to 1 in level-1 B-tree (l->r)    PASSED
Testing B-tree remove: merge 3 leaves to 2 in level-1 B-tree           PASSED
Testing B-tree remove: promote from right leaf of level-1 B-tree       PASSED
Testing B-tree remove: promote from left leaf of level-1 B-tree        PASSED
Testing B-tree remove: promote from middle leaf of level-1 B-tree      PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/2 node redistrib PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/3 node redistrib PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/2->1 merge PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/3->2 merge PASSED
Testing B-tree remove: collapse level-1 B-tree back to level-0         PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree   PASSED
Testing B-tree remove: promote from left internal of level-2 B-tree    PASSED
Testing B-tree remove: promote from middle internal of level-2 B-tree  PASSED
Testing B-tree remove: promote record from root of level-2 B-tree      PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree w/redistrib PASSED
Testing B-tree remove: promote from left internal of level-2 B-tree w/redistrib PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree w/merge PASSED
Testing B-tree remove: promote from middle internal of level-2 B-tree w/merge PASSED
Testing B-tree remove: merge 2 internal nodes to 1 in level-2 B-tree (l->r) PASSED
Testing B-tree remove: merge 2 internal nodes to 1 in level-2 B-tree (r->l) PASSED
Testing B-tree remove: merge 3 internal nodes to 2 in level-2 B-tree   PASSED
Testing B-tree remove: collapse level-2 B-tree back to level-1 (r->l)  PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records in random order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in random order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in increasing order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in decreasing order PASSED
Testing B-tree find: nearest neighbor less than a value                PASSED
Testing B-tree find: nearest neighbor greater than a value             PASSED
Testing B-tree delete: delete empty B-tree                             PASSED
Testing B-tree delete: delete level-0 B-tree                           PASSED
Testing B-tree delete: delete level-1 B-tree                           PASSED
Testing B-tree delete: delete level-2 B-tree                           PASSED
Testing B-tree modify: attempt to modify non-existant record           PASSED
Testing B-tree modify: modify record in leaf node                      PASSED
Testing B-tree modify: modify record in internal node                  PASSED
Testing B-tree modify: modify record in root node                      PASSED
Testing with reopening B-tree:
Testing B-tree creation                                                PASSED
Testing B-tree iteration: empty B-tree                                 PASSED
Testing B-tree insert: first record                                    PASSED
Testing B-tree insert: several records                                 PASSED
Testing B-tree insert: split root                                      PASSED
Testing B-tree insert: redistribute 2 leaves in level 1 B-tree (l->r)  PASSED
Testing B-tree insert: redistribute 2 leaves in level 1 B-tree (r->l)  PASSED
Testing B-tree insert: split side leaf into 2 leaves in level 1 B-tree (l->r) PASSED
Testing B-tree insert: split side leaf into 2 leaves in level 1 B-tree (r->l) PASSED
Testing B-tree insert: redistribute 3 leaves in level 1 B-tree         PASSED
Testing B-tree insert: split middle leaf into 2 leaves in level 1 B-tree PASSED
Testing B-tree insert: make level 2 B-tree                             PASSED
Testing B-tree insert: redistrib right-most leaf in level 2 B-tree     PASSED
Testing B-tree insert: redistrib left-most leaf in level 2 B-tree      PASSED
Testing B-tree insert: redistrib middle leaf in level 2 B-tree         PASSED
Testing B-tree insert: split right-most leaf in level 2 B-tree         PASSED
Testing B-tree insert: split left-most leaf in level 2 B-tree          PASSED
Testing B-tree insert: split middle leaf in level 2 B-tree             PASSED
Testing B-tree insert: redist. 2 internal (r->l) in level 2 B-tree     PASSED
Testing B-tree insert: redist. 2 internal (l->r) in level 2 B-tree     PASSED
Testing B-tree insert: split side internal node to 2 in level 2 B-tree (r->l) PASSED
Testing B-tree insert: split side internal node to 2 in level 2 B-tree (l->2) PASSED
Testing B-tree insert: redistrib 3 internals in level 2 B-tree         PASSED
Testing B-tree insert: split 3 internals to 4 in level 2 B-tree        PASSED
Testing B-tree insert: create random level 4 B-tree                    PASSED
Testing B-tree insert: attempt duplicate record in level 4 B-tree      PASSED
Testing B-tree remove: record from empty B-tree                        PASSED
Testing B-tree remove: non-existant record from 1 record B-tree        PASSED
Testing B-tree remove: existant record from 1 record B-tree            PASSED
Testing B-tree remove: adding records to B-tree after removal          PASSED
Testing B-tree remove: non-existant record from level-0 B-tree         PASSED
Testing B-tree remove: mult. existant records from level-0 B-tree      PASSED
Testing B-tree remove: non-existant record from level-1 B-tree         PASSED
Testing B-tree remove: record from right leaf of level-1 B-tree        PASSED
Testing B-tree remove: record from left leaf of level-1 B-tree         PASSED
Testing B-tree remove: record from middle leaf of level-1 B-tree       PASSED
Testing B-tree remove: redistribute 2 leaves in level-1 B-tree (r->l)  PASSED
Testing B-tree remove: redistribute 2 leaves in level-1 B-tree (l->r)  PASSED
Testing B-tree remove: redistribute 3 leaves in level-1 B-tree         PASSED
Testing B-tree remove: merge 2 leaves to 1 in level-1 B-tree (r->l)    PASSED
Testing B-tree remove: merge 2 leaves to 1 in level-1 B-tree (l->r)    PASSED
Testing B-tree remove: merge 3 leaves to 2 in level-1 B-tree           PASSED
Testing B-tree remove: promote from right leaf of level-1 B-tree       PASSED
Testing B-tree remove: promote from left leaf of level-1 B-tree        PASSED
Testing B-tree remove: promote from middle leaf of level-1 B-tree      PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/2 node redistrib PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/3 node redistrib PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/2->1 merge PASSED
Testing B-tree remove: promote from leaf of level-1 B-tree w/3->2 merge PASSED
Testing B-tree remove: collapse level-1 B-tree back to level-0         PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree   PASSED
Testing B-tree remove: promote from left internal of level-2 B-tree    PASSED
Testing B-tree remove: promote from middle internal of level-2 B-tree  PASSED
Testing B-tree remove: promote record from root of level-2 B-tree      PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree w/redistrib PASSED
Testing B-tree remove: promote from left internal of level-2 B-tree w/redistrib PASSED
Testing B-tree remove: promote from right internal of level-2 B-tree w/merge PASSED
Testing B-tree remove: promote from middle internal of level-2 B-tree w/merge PASSED
Testing B-tree remove: merge 2 internal nodes to 1 in level-2 B-tree (l->r) PASSED
Testing B-tree remove: merge 2 internal nodes to 1 in level-2 B-tree (r->l) PASSED
Testing B-tree remove: merge 3 internal nodes to 2 in level-2 B-tree   PASSED
Testing B-tree remove: collapse level-2 B-tree back to level-1 (r->l)  PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records in random order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in random order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in increasing order PASSED
Testing B-tree remove: create random level 4 B-tree and delete all records by index, in decreasing order PASSED
Testing B-tree find: nearest neighbor less than a value                PASSED
Testing B-tree find: nearest neighbor greater than a value             PASSED
Testing B-tree delete: delete empty B-tree                             PASSED
Testing B-tree delete: delete level-0 B-tree                           PASSED
Testing B-tree delete: delete level-1 B-tree                           PASSED
Testing B-tree delete: delete level-2 B-tree                           PASSED
Testing B-tree modify: attempt to modify non-existant record           PASSED
Testing B-tree modify: modify record in leaf node                      PASSED
Testing B-tree modify: modify record in internal node                  PASSED
Testing B-tree modify: modify record in root node                      PASSED
All v2 B-tree tests passed.
33.39user 3.04system 0:37.72elapsed 96%CPU (0avgtext+0avgdata 35680maxresident)k
0inputs+285336outputs (0major+45071minor)pagefaults 0swaps

Finished testing btree2 
============================
============================
 objcopy  Test Log
============================

Testing without shared src messages:
Testing without shared dst messages:
Testing with oldest file format for source file:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes to the source file      PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes to the source file with reopen PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with oldest file format for source file:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes to the source file      PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes to the source file with reopen PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with oldest file format for source file:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with oldest file format for source file:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes to the source file      PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes to the source file with reopen PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes to the source file      PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes to the source file with reopen PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing without shared dst messages:
Testing with oldest file format for source file:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with oldest file format for source file:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with oldest file format for source file:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with oldest file format for source file:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing without dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
Testing H5Ocopy(): named datatype                                      PASSED
Testing H5Ocopy(): named vlen datatype                                 PASSED
Testing H5Ocopy(): named nested vlen datatype                          PASSED
Testing H5Ocopy(): merging committed datatypes                         PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes with attributes         PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging            PASSED
Testing H5Ocopy(): merging various committed datatypes                 PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions        PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb                               PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb                           PASSED
Testing H5Ocopy(): merging committed datatypes with reopen             PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes with attributes and reopen PASSED
Testing H5Ocopy(): hier. of committed datatypes and merging with reopen PASSED
Testing H5Ocopy(): merging various committed datatypes with reopen     PASSED
Testing H5Ocopy(): merging committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): merging committed datatypes of datasets with suggestions and reopen PASSED
Testing H5Ocopy(): merging different committed datatypes with suggestions and reopen PASSED
Testing H5Ocopy(): H5Pset_mcdt_search_cb and reopen                    PASSED
Testing H5Ocopy(): H5Pset/get_mcdt_search_cb and reopen                PASSED
Testing H5Ocopy(): external dataset                                    PASSED
Testing H5Ocopy(): dataset that uses named datatype                    PASSED
Testing H5Ocopy(): hier. of datasets using named datatype inside hier. PASSED
Testing H5Ocopy(): hier. of datasets using named datatype outside hier. PASSED
Testing H5Ocopy(): contiguous dataset with VLEN datatype               PASSED
Testing H5Ocopy(): chunked dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compact dataset with VLEN datatype                  PASSED
Testing H5Ocopy(): compressed dataset with VLEN datatype               PASSED
Testing H5Ocopy(): variable length attribute                           PASSED
Testing H5Ocopy(): attribute with compound datatype consisting of variable length string PASSED
Testing H5Ocopy(): compact dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): contigous dataset with named VLEN datatype          PASSED
Testing H5Ocopy(): chunked dataset with named VLEN datatype            PASSED
Testing H5Ocopy(): chunked and opened dataset with named VLEN datatype PASSED
Testing H5Ocopy(): compressed dataset with named VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): contigous dataset with nested VLEN datatype         PASSED
Testing H5Ocopy(): contigous and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): chunked dataset with nested VLEN datatype           PASSED
Testing H5Ocopy(): compressed dataset with nested VLEN datatype        PASSED
Testing H5Ocopy(): compressed and opened dataset with nested VLEN datatype PASSED
Testing H5Ocopy(): contiguous dataset with compound VLEN datatype      PASSED
Testing H5Ocopy(): chunked dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): compact dataset with compound VLEN datatype         PASSED
Testing H5Ocopy(): named datatype in same file                         PASSED
Testing H5Ocopy(): dataset with old layout format                      PASSED
Testing H5Ocopy(): opened dataset with old layout format               PASSED
Testing H5Ocopy(): NULL references                                     PASSED
Testing H5Ocopy(): NULL references for opened datasets                 PASSED
Testing H5Ocopy(): inside H5Literate() callback                        PASSED

Testing without shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with oldest file format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing without shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing with shared src messages:
Testing without shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing without shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED

Testing with shared src messages:
Testing with shared dst messages:
Testing with latest format for source file:
Testing with dense attributes:
Testing with latest format for destination file:
Testing H5Ocopy(): simple dataset                                      PASSED
Testing H5Ocopy(): simple dataset within the same file                 PASSED
Testing H5Ocopy(): empty contiguous dataset                            PASSED
Testing H5Ocopy(): empty and opened contiguous dataset                 PASSED
Testing H5Ocopy(): compound dataset                                    PASSED
Testing H5Ocopy(): chunked dataset                                     PASSED
Testing H5Ocopy(): empty chunked dataset                               PASSED
Testing H5Ocopy(): sparse dataset                                      PASSED
Testing H5Ocopy(): compressed dataset                                  PASSED
Testing H5Ocopy(): compact dataset                                     PASSED
Testing H5Ocopy(): compact and opened dataset                          PASSED
Testing H5Ocopy(): datasets that have multiple ohdr chunks             PASSED
Testing H5Ocopy(): openend datasets that have multiple ohdr chunks     PASSED
Testing H5Ocopy(): objects with attributes using named datatypes       PASSED
Testing H5Ocopy(): empty group                                         PASSED
Testing H5Ocopy(): root group                                          PASSED
Testing H5Ocopy(): simple nested groups                                PASSED
Testing H5Ocopy(): deep nested groups                                  PASSED
Testing H5Ocopy(): nested groups with loop                             PASSED
Testing H5Ocopy(): wide nested groups with loop                        PASSED
Testing H5Ocopy(): group with links                                    PASSED
Testing H5Ocopy(): object through soft link                            PASSED
Testing H5Ocopy(): opened object through soft link                     PASSED
Testing H5Ocopy(): object through external link                        PASSED
Testing H5Ocopy(): existing object                                     PASSED
Testing H5Ocopy(): full path                                           PASSED
Testing H5Ocopy(): named datatype with self-referential attribute      PASSED
Testing H5Ocopy(): attributes with creation order                      PASSED
Testing H5Ocopy(): without attributes                                  PASSED
Testing H5Ocopy(): with missing groups                                 PASSED
Testing H5Ocopy(): expand soft link                                    PASSED
Testing H5Ocopy: expand external link                                  PASSED
Testing H5Ocopy: expand soft and external links                        PASSED
Testing H5Ocopy(): shallow group copy                                  PASSED
Testing H5Ocopy(): expand object reference                             PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): preserve NULL messages                              PASSED
Testing H5Ocopy(): copying objects while opened                        PASSED
All object copying tests passed.
34.50user 2.12system 0:43.99elapsed 83%CPU (0avgtext+0avgdata 38932maxresident)k
0inputs+342256outputs (0major+209520minor)pagefaults 0swaps

Finished testing objcopy 
============================
============================
 testhdf5  Test Log
============================

For help use: /mnt/wrk/lrknox/hdf5_hdf5/build/test/.libs/lt-testhdf5 -help
Linked with hdf5 version 1.8 release 21
Testing  -- Configure definitions (config) 
Testing  -- Encoding/decoding metadata (metadata) 
Testing  -- Checksum algorithm (checksum) 
Testing  -- Ternary Search Trees (tst) 
Testing  -- Memory Heaps (heap) 
Testing  -- Skip Lists (skiplist) 
Testing  -- Reference Counted Strings (refstr) 
Testing  -- Low-Level File I/O (file) 
Testing  -- Generic Object Functions (objects) 
Testing  -- Dataspaces (h5s) 
Testing  -- Dataspace coordinates (coords) 
Testing  -- Shared Object Header Messages (sohm) 
Testing  -- Attributes (attr) 
Testing  -- Selections (select) 
Testing  -- Time Datatypes (time) 
Testing  -- References (reference) 
Testing  -- Variable-Length Datatypes (vltypes) 
Testing  -- Variable-Length Strings (vlstrings) 
Testing  -- Group & Attribute Iteration (iterate) 
Testing  -- Array Datatypes (array) 
Testing  -- Generic Properties (genprop) 
Testing  -- UTF-8 Encoding (unicode) 
Testing  -- User-Created Identifiers (id) 
Testing  -- Miscellaneous (misc) 
Testing  -- Version Bounds (verbounds18) 


All tests were successful. 


Cleaning Up temp files...

86.48user 0.58system 1:34.41elapsed 92%CPU (0avgtext+0avgdata 103160maxresident)k
0inputs+150264outputs (0major+58425minor)pagefaults 0swaps

Finished testing testhdf5 
============================
============================
 fheap  Test Log
============================
Testing with normal parameters
Testing fractal heap creation                                          PASSED
Testing query heap creation parameters                                 PASSED
Testing create, close & reopen fractal heap                            PASSED
Testing open fractal heap twice                                        PASSED
Testing deleting open fractal heap                                     PASSED
Testing limits of heap ID lengths                                      PASSED
Testing creating heaps with I/O filters                                PASSED
Testing querying heap statistics                                       PASSED
Testing reopening header through different file                        PASSED
Bulk-filling blocks w/large objects
Testing inserting 'weird' sized objects into absolute heap             PASSED
Testing inserting objects to create first direct block in recursive indirect blocks five levels deep PASSED
Testing removing bad heap IDs from absolute heap                       PASSED
Testing removing single object from absolute heap                      PASSED
Testing removing two objects from absolute heap                        PASSED
Testing removing single larger object from absolute heap               PASSED
Testing removing two larger objects from absolute heap (forward)       PASSED
Testing removing two larger objects from absolute heap (reverse)       PASSED
Testing removing three larger objects from absolute heap (forward)     PASSED
Testing removing three larger objects from absolute heap (reverse)     PASSED
Testing incremental object insertion and removal                       PASSED
Testing removing all objects from root direct block of absolute heap (all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (all - deleting heap) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - deleting heap) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Bulk-filling blocks w/single object
Testing inserting 'weird' sized objects into absolute heap             PASSED
Testing inserting objects to create first direct block in recursive indirect blocks five levels deep PASSED
Testing removing bad heap IDs from absolute heap                       PASSED
Testing removing single object from absolute heap                      PASSED
Testing removing two objects from absolute heap                        PASSED
Testing removing single larger object from absolute heap               PASSED
Testing removing two larger objects from absolute heap (forward)       PASSED
Testing removing two larger objects from absolute heap (reverse)       PASSED
Testing removing three larger objects from absolute heap (forward)     PASSED
Testing removing three larger objects from absolute heap (reverse)     PASSED
Testing incremental object insertion and removal                       PASSED
Testing removing all objects from root direct block of absolute heap (all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (all - deleting heap) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - deleting heap) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Using 'normal' heap ID format for 'huge' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Using 'direct' heap ID format for 'huge' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Using 'direct' heap ID format for 'huge' objects and larger IDs for 'tiny' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - forward) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - reverse) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - deleting heap) PASSED
Using 'small' heap creation parameters
Testing inserting random-sized objects, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - random) PASSED
Testing inserting random-sized objects, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - deleting heap) PASSED
Using 'large' heap creation parameters
Testing inserting random-sized objects, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - random) PASSED
Testing inserting random-sized objects, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - deleting heap) PASSED
Testing writing objects in heap                                        PASSED
Testing writing objects in heap with compressed blocks                 PASSED
Testing with reopen heap flag set
Testing fractal heap creation                                          PASSED
Testing query heap creation parameters                                 PASSED
Testing create, close & reopen fractal heap                            PASSED
Testing open fractal heap twice                                        PASSED
Testing deleting open fractal heap                                     PASSED
Testing limits of heap ID lengths                                      PASSED
Testing creating heaps with I/O filters                                PASSED
Testing querying heap statistics                                       PASSED
Testing reopening header through different file                        PASSED
Bulk-filling blocks w/large objects
Testing inserting 'weird' sized objects into absolute heap             PASSED
Testing inserting objects to create first direct block in recursive indirect blocks five levels deep PASSED
Testing removing bad heap IDs from absolute heap                       PASSED
Testing removing single object from absolute heap                      PASSED
Testing removing two objects from absolute heap                        PASSED
Testing removing single larger object from absolute heap               PASSED
Testing removing two larger objects from absolute heap (forward)       PASSED
Testing removing two larger objects from absolute heap (reverse)       PASSED
Testing removing three larger objects from absolute heap (forward)     PASSED
Testing removing three larger objects from absolute heap (reverse)     PASSED
Testing incremental object insertion and removal                       PASSED
Testing removing all objects from root direct block of absolute heap (all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (all - deleting heap) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - deleting heap) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Bulk-filling blocks w/single object
Testing inserting 'weird' sized objects into absolute heap             PASSED
Testing inserting objects to create first direct block in recursive indirect blocks five levels deep PASSED
Testing removing bad heap IDs from absolute heap                       PASSED
Testing removing single object from absolute heap                      PASSED
Testing removing two objects from absolute heap                        PASSED
Testing removing single larger object from absolute heap               PASSED
Testing removing two larger objects from absolute heap (forward)       PASSED
Testing removing two larger objects from absolute heap (reverse)       PASSED
Testing removing three larger objects from absolute heap (forward)     PASSED
Testing removing three larger objects from absolute heap (reverse)     PASSED
Testing incremental object insertion and removal                       PASSED
Testing removing all objects from root direct block of absolute heap (all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - forward) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - forward) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - forward) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - forward) PASSED
Testing removing all objects from root direct block of absolute heap (all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from two direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (half, refill, all - reverse) PASSED
Testing inserting object that is too large for starting block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (half, refill, all - reverse) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (half, refill, all - reverse) PASSED
Testing removing all objects from root direct block of absolute heap (all - deleting heap) PASSED
Testing removing all objects from two direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first row of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first two rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from first four rows of direct blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from all direct blocks of root group in absolute heap (all - deleting heap) PASSED
Testing removing all objects from 2nd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing removing all objects from 3rd level indirect blocks of absolute heap (all - deleting heap) PASSED
Testing inserting object that is too large for starting block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding object back to first block, then remove all objects (all - deleting heap) PASSED
Testing skipping starting block, then adding objects to backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then remove all objects (all - deleting heap) PASSED
Testing insert object to initial block, then add object too large for starting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping blocks with indirect root, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling first row, then skipping rows, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing skipping direct blocks to last row and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping blocks in non-root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping row of non-root indirect blocks, then skip row of direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks and skipping two rows of root indirect block, skip one row of root indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, and skip first rows of direct blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first rows of direct blocks of 3rd level indirect block's 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first row of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect block's direct blocks, and skip first two rows of indirect blocks of 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, except last one, fill all direct blocks in last 3rd level indirect block, and insert object too large for it's 2nd level indirect blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling first row of 3rd level indirect blocks, fill all direct blocks in next 3rd level indirect block, fill all 1st row of 2nd level indirect blocks, except last one, and insert object too large for 2nd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct blocks, and skip first row of 2nd indirect blocks of 4th level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill 4th level indirect block's direct, 2nd level indirect blocks and 3rd level direct block, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, fill 2nd row 4th level indirect block's direct, 2nd level indirect blocks, first row of 3rd level indirect blocks, 3rd level direct block in 2nd row, and skip first row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 3rd level indirect blocks in 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing filling direct blocks, filling 2nd level indirect blocks, filling 3rd level indirect blocks, fill first row of 4th level indirect blocks, except last one, fill first row of 3rd level indirect blocks in last 4th level indirect block except last 3rd level block, fill direct blocks in 3rd level block, and skip row of 2nd indirect blocks of 4th level indirect block's 3rd level indirect block, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting small blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fragmenting direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks, then fragment 2nd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Testing fill root direct blocks and 2nd level indirect blocks, then fragment 3rd level indirect block's direct blocks, then backfill and extend, then remove all objects (all - deleting heap) PASSED
Using 'normal' heap ID format for 'huge' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Using 'direct' heap ID format for 'huge' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Using 'direct' heap ID format for 'huge' objects and larger IDs for 'tiny' objects
Testing insert one huge object, then remove (all - forward)            PASSED
Testing insert two huge objects, then remove (all - forward)           PASSED
Testing insert three huge objects, then remove (all - forward)         PASSED
Testing insert mix of normal & huge objects, then remove (all - forward) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert one tiny object, then remove (all - forward)            PASSED
Testing insert two tiny objects, then remove (all - forward)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - forward) PASSED
Testing insert one huge object, then remove (all - reverse)            PASSED
Testing insert two huge objects, then remove (all - reverse)           PASSED
Testing insert three huge objects, then remove (all - reverse)         PASSED
Testing insert mix of normal & huge objects, then remove (all - reverse) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert one tiny object, then remove (all - reverse)            PASSED
Testing insert two tiny objects, then remove (all - reverse)           PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - reverse) PASSED
Testing insert one huge object, then remove (all - deleting heap)      PASSED
Testing insert two huge objects, then remove (all - deleting heap)     PASSED
Testing insert three huge objects, then remove (all - deleting heap)   PASSED
Testing insert mix of normal & huge objects, then remove (all - deleting heap) PASSED
Testing insert 'huge' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert one tiny object, then remove (all - deleting heap)      PASSED
Testing insert two tiny objects, then remove (all - deleting heap)     PASSED
Testing insert mix of normal, huge & tiny objects, then remove (all - deleting heap) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - forward) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - forward) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - reverse) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - reverse) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - random) PASSED
Testing insert one 'managed' object into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing insert two 'managed' objects into heap with I/O filters, then remove (all - deleting heap) PASSED
Testing inserting random-sized objects in heap with compressed blocks, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution in heap with compressed blocks, then remove all objects (all - deleting heap) PASSED
Using 'small' heap creation parameters
Testing inserting random-sized objects, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - random) PASSED
Testing inserting random-sized objects, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - deleting heap) PASSED
Using 'large' heap creation parameters
Testing inserting random-sized objects, then remove all objects (all - random) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - random) PASSED
Testing inserting random-sized objects, then remove all objects (all - deleting heap) PASSED
Testing inserting random-sized objects with power of 2 distribution, then remove all objects (all - deleting heap) PASSED
Testing writing objects in heap                                        PASSED
Testing writing objects in heap with compressed blocks                 PASSED
Testing bug1: inserting several objects & removing one, then re-inserting PASSED
All fractal heap tests passed.
102.77user 8.19system 2:02.41elapsed 90%CPU (0avgtext+0avgdata 70504maxresident)k
0inputs+17255304outputs (0major+93268minor)pagefaults 0swaps

Finished testing fheap 
============================
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
===Serial tests in test ended Mon May 14 21:11:30 CDT 2018===
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
gmake[1]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/test'
Making check in tools
gmake[1]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools'
gmake[1]: warning: -jN forced in submake: disabling jobserver mode.
Making check in lib
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
gmake -j 8  
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: Nothing to be done for `all'.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
gmake[5]: Nothing to be done for `_exec_check-s'.
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/lib'
Making check in h5diff
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5diffgentest
  CCLD     h5diff
gmake -j 8  h5diffgentest testh5diff.sh h5diff_plugin.sh 
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5diffgentest' is up to date.
gmake[3]: `testh5diff.sh' is up to date.
gmake[3]: `h5diff_plugin.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5diff begin Mon May 14 21:11:31 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5diffgentest 
============================
============================
Testing testh5diff.sh 
Testing h5diff_plugin.sh 
Finished testing h5diff_plugin.sh 
============================
h5diff_plugin.sh  Test Log
============================
Testing h5diff -v tudfilter.h5 tudfilter2.h5                           PASSED
All Plugin API tests passed.
0.07user 0.10system 0:00.16elapsed 106%CPU (0avgtext+0avgdata 7572maxresident)k
0inputs+1064outputs (0major+36113minor)pagefaults 0swaps

Finished testing h5diff_plugin.sh 
============================
============================
============================
 h5diffgentest  Test Log
============================
HDF5-DIAG: Error detected in HDF5 (1.8.21-pre1) thread 0:
  #000: ../../src/H5D.c line 413 in H5Dclose(): not a dataset
    major: Invalid arguments to routine
    minor: Inappropriate type
HDF5-DIAG: Error detected in HDF5 (1.8.21-pre1) thread 0:
  #000: ../../src/H5D.c line 413 in H5Dclose(): not a dataset
    major: Invalid arguments to routine
    minor: Inappropriate type
0.53user 0.27system 0:00.99elapsed 81%CPU (0avgtext+0avgdata 136480maxresident)k
0inputs+6560outputs (0major+52630minor)pagefaults 0swaps

Finished testing h5diffgentest 
============================
Finished testing testh5diff.sh 
============================
testh5diff.sh  Test Log
============================
Testing h5diff -h                                                      PASSED
Testing h5diff h5diff_basic1.h5 h5diff_basic2.h5                       PASSED
Testing h5diff h5diff_basic1.h5 h5diff_basic2.h5 g1/dset1 g1/dset2     PASSED
Testing h5diff -r h5diff_basic1.h5 h5diff_basic2.h5                    PASSED
Testing h5diff -r h5diff_basic1.h5 h5diff_basic2.h5 g1/dset1 g1/dset2  PASSED
Testing h5diff --report --delta=5 h5diff_basic1.h5 h5diff_basic2.h5 g1 PASSED
Testing h5diff -v -p 0.02 h5diff_basic1.h5 h5diff_basic1.h5 g1/dset5 g PASSED
Testing h5diff --verbose --relative=0.02 h5diff_basic1.h5 h5diff_basic PASSED
Testing h5diff -v -p 0.02 h5diff_basic1.h5 h5diff_basic1.h5 g1/dset9 g PASSED
Testing h5diff -v h5diff_basic1.h5 h5diff_basic2.h5                    PASSED
Testing h5diff -v h5diff_basic1.h5 h5diff_basic1.h5 /g1/fp19 /g1/fp19_ PASSED
Testing h5diff -v h5diff_basic1.h5 h5diff_basic1.h5 /g1/fp20 /g1/fp20_ PASSED
Testing h5diff -q h5diff_basic1.h5 h5diff_basic2.h5                    PASSED
Testing h5diff -v -q h5diff_basic1.h5 h5diff_basic2.h5                 PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 dset g1              PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 dset l1              PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 dset t1              PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 g1 g1                PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 t1 t1                PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 l1 l1                PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 g1 g2                PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 t1 t2                PASSED
Testing h5diff -v h5diff_types.h5 h5diff_types.h5 l1 l2                PASSED
Testing h5diff -v h5diff_enum_invalid_values.h5 h5diff_enum_invalid_va PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset0a dset0b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset1a dset1b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset2a dset2b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset3a dset4b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset4a dset4b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset5a dset5b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset6a dset6b      PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset7a dset7b      PASSED
Testing h5diff -v h5diff_dset1.h5 h5diff_dset2.h5 refreg               PASSED
Testing h5diff -v h5diff_dtypes.h5 h5diff_dtypes.h5 dset11a dset11b    PASSED
Testing h5diff -v diff_strings1.h5 diff_strings2.h5 string1 string1    PASSED
Testing h5diff -v diff_strings1.h5 diff_strings2.h5 string2 string2    PASSED
Testing h5diff -v diff_strings1.h5 diff_strings2.h5 string3 string3    PASSED
Testing h5diff -v diff_strings1.h5 diff_strings2.h5 string4 string4    PASSED
Testing h5diff h5diff_basic1.h5                                        PASSED
Testing h5diff h5diff_basic1.h5 h5diff_basic1.h5 nono_obj              PASSED
Testing h5diff -d -4 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dse PASSED
Testing h5diff -d 0 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -d u h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -d 0x1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/ds PASSED
Testing h5diff -d 1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff --use-system-epsilon h5diff_basic1.h5 h5diff_basic2.h5  PASSED
Testing h5diff -d 200 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/ds PASSED
Testing h5diff -d 1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -p -4 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dse PASSED
Testing h5diff -p 0 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -p u h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -p 0x1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/ds PASSED
Testing h5diff -p 0.21 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/d PASSED
Testing h5diff -p 0.21 -p 0.22 h5diff_basic1.h5 h5diff_basic2.h5 g1/ds PASSED
Testing h5diff -p 2 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -p 0.005 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/ PASSED
Testing h5diff -n -4 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dse PASSED
Testing h5diff -n 0 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -n u h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -n 0x1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/ds PASSED
Testing h5diff -n 2 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -n 2 -n 3 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1 PASSED
Testing h5diff --count=200 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3  PASSED
Testing h5diff -n 1 h5diff_basic1.h5 h5diff_basic2.h5 g1/dset3 g1/dset PASSED
Testing h5diff -v -d 0.0001 h5diff_basic1.h5 h5diff_basic1.h5 g1/fp18  PASSED
Testing h5diff -v --use-system-epsilon h5diff_basic1.h5 h5diff_basic1. PASSED
Testing h5diff -v h5diff_attr1.h5 h5diff_attr2.h5                      PASSED
Testing h5diff -v1 h5diff_attr1.h5 h5diff_attr2.h5                     PASSED
Testing h5diff -v2 h5diff_attr1.h5 h5diff_attr2.h5                     PASSED
Testing h5diff --verbose=1 h5diff_attr1.h5 h5diff_attr2.h5             PASSED
Testing h5diff --verbose=2 h5diff_attr1.h5 h5diff_attr2.h5             PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /g  PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /ds PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /nt PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /g2 PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /g3 PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5 /g4 PASSED
Testing h5diff -v2 h5diff_attr_v_level1.h5 h5diff_attr_v_level2.h5     PASSED
Testing h5diff -v h5diff_dset1.h5 h5diff_dset2.h5                      PASSED
Testing h5diff -v h5diff_basic2.h5 h5diff_basic2.h5                    PASSED
Testing h5diff -v h5diff_hyper1.h5 h5diff_hyper2.h5                    PASSED
Testing h5diff -v h5diff_basic1.h5 h5diff_basic1.h5 g1/d1 g1/d2        PASSED
Testing h5diff -v h5diff_basic1.h5 h5diff_basic1.h5 g1/fp1 g1/fp2      PASSED
Testing h5diff -v --use-system-epsilon h5diff_basic1.h5 h5diff_basic1. PASSED
Testing h5diff -v --use-system-epsilon h5diff_basic1.h5 h5diff_basic1. PASSED
Testing h5diff h5diff_basic2.h5 h5diff_basic2.h5 g2/dset1 g2/dset2     PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset1 g2/dset2  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset2 g2/dset3  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset3 g2/dset4  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset4 g2/dset5  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset5 g2/dset6  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset7 g2/dset8  PASSED
Testing h5diff -c h5diff_basic2.h5 h5diff_basic2.h5 g2/dset8 g2/dset9  PASSED
Testing h5diff -c h5diff_dset_zero_dim_size1.h5 h5diff_dset_zero_dim_s PASSED
Testing h5diff -c non_comparables1.h5 non_comparables2.h5 /g1          PASSED
Testing h5diff -c non_comparables1.h5 non_comparables2.h5 /g2          PASSED
Testing h5diff -c non_comparables1.h5 non_comparables2.h5              PASSED
Testing h5diff -c non_comparables1.h5 non_comparables2.h5 /diffobjtype PASSED
Testing h5diff -c non_comparables2.h5 non_comparables1.h5 /diffobjtype PASSED
Testing h5diff -v h5diff_links.h5 h5diff_links.h5 /link_g1 /link_g2    PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_trg.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_extlink PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_softl PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_linked_softlink.h5 h5diff_l PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_softlinks.h5 h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_extlink_src.h5 h5diff_extli PASSED
Testing h5diff --follow-symlinks -v h5diff_ext2softlink_src.h5 h5diff_ PASSED
Testing h5diff --follow-symlinks -v h5diff_ext2softlink_trg.h5 h5diff_ PASSED
Testing h5diff --follow-symlinks -v h5diff_ext2softlink_src.h5 h5diff_ PASSED
Testing h5diff --follow-symlinks -v h5diff_danglelinks1.h5 h5diff_dang PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_danglel PASSED
Testing h5diff --no-dangling-links h5diff_softlinks.h5 h5diff_softlink PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_softlin PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_extlink PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_extlink PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_extlink PASSED
Testing h5diff --follow-symlinks -v --no-dangling-links h5diff_extlink PASSED
Testing h5diff --follow-symlinks h5diff_danglelinks1.h5 h5diff_danglel PASSED
Testing h5diff -v --follow-symlinks h5diff_danglelinks1.h5 h5diff_dang PASSED
Testing h5diff -v --follow-symlinks h5diff_danglelinks1.h5 h5diff_dang PASSED
Testing h5diff -v --follow-symlinks h5diff_danglelinks1.h5 h5diff_dang PASSED
Testing h5diff -v --follow-symlinks h5diff_danglelinks1.h5 h5diff_dang PASSED
Testing h5diff -v h5diff_danglelinks1.h5 h5diff_danglelinks2.h5        PASSED
Testing h5diff -v h5diff_danglelinks1.h5 h5diff_danglelinks2.h5 /soft_ PASSED
Testing h5diff -v h5diff_danglelinks1.h5 h5diff_danglelinks2.h5 /soft_ PASSED
Testing h5diff -v h5diff_danglelinks1.h5 h5diff_danglelinks2.h5 /ext_l PASSED
Testing h5diff -v h5diff_danglelinks1.h5 h5diff_danglelinks2.h5 /ext_l PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 / /    PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 / /grp PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /grp1  PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /grp1/ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /grp1  PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /grp1  PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /slink PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /grp10 PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse1.h5 h5diff_grp_recurse2.h5 /slink PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse1.h5 h5diff_grp_ PASSED
Testing h5diff -v h5diff_grp_recurse_ext1.h5 h5diff_grp_recurse_ext2-1 PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse_ext1.h5 h5diff_ PASSED
Testing h5diff -v h5diff_grp_recurse_ext1.h5 h5diff_grp_recurse_ext2-1 PASSED
Testing h5diff -v --follow-symlinks h5diff_grp_recurse_ext1.h5 h5diff_ PASSED
Testing h5diff -v --exclude-path /group1/dset3 h5diff_exclude1-1.h5 h5 PASSED
Testing h5diff -v h5diff_exclude1-1.h5 h5diff_exclude1-2.h5            PASSED
Testing h5diff -v --exclude-path /group1 --exclude-path /dset1 h5diff_ PASSED
Testing h5diff -v --exclude-path /group1 h5diff_exclude2-1.h5 h5diff_e PASSED
Testing h5diff -v --exclude-path /dset3 h5diff_exclude1-1.h5 h5diff_ex PASSED
Testing h5diff -v --exclude-path /group1 h5diff_exclude3-1.h5 h5diff_e PASSED
Testing h5diff -v --exclude-path /group1 h5diff_exclude3-2.h5 h5diff_e PASSED
Testing h5diff -v --exclude-path /group1/dset h5diff_exclude3-1.h5 h5d PASSED
Testing h5diff -v h5diff_comp_vl_strs.h5 h5diff_comp_vl_strs.h5 /group PASSED
Testing h5diff -v --enable-error-stack h5diff_comp_vl_strs.h5 h5diff_c PASSED
Testing h5diff -v h5diff_attr3.h5 h5diff_attr2.h5 /g1                  PASSED
Testing h5diff -v tvlstr.h5 tvlstr2.h5                                 PASSED
Testing h5diff -v compounds_array_vlen1.h5 compounds_array_vlen2.h5    PASSED
Testing h5diff -v -d 5 -p 0.05 --use-system-epsilon h5diff_basic1.h5 h PASSED
Testing h5diff -v -d 5 -p 0.05 h5diff_basic1.h5 h5diff_basic2.h5 /g1/d PASSED
Testing h5diff -v -p 0.05 -d 5 h5diff_basic1.h5 h5diff_basic2.h5 /g1/d PASSED
Testing h5diff -v -d 5 --use-system-epsilon h5diff_basic1.h5 h5diff_ba PASSED
Testing h5diff -v --use-system-epsilon -d 5 h5diff_basic1.h5 h5diff_ba PASSED
Testing h5diff -v -p 0.05 --use-system-epsilon h5diff_basic1.h5 h5diff PASSED
Testing h5diff -v --use-system-epsilon -p 0.05 h5diff_basic1.h5 h5diff PASSED
All h5diff tests passed.
6.66user 10.90system 0:15.69elapsed 111%CPU (0avgtext+0avgdata 73448maxresident)k
0inputs+27952outputs (0major+3294459minor)pagefaults 0swaps

Finished testing testh5diff.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
===Serial tests in h5diff ended Mon May 14 21:11:47 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5diff'
Making check in h5ls
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5ls
gmake -j 8  testh5ls.sh h5ls_plugin.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `testh5ls.sh' is up to date.
gmake[3]: `h5ls_plugin.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5ls begin Mon May 14 21:11:47 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
============================
Testing testh5ls.sh 
Testing h5ls_plugin.sh 
Finished testing h5ls_plugin.sh 
============================
h5ls_plugin.sh  Test Log
============================
Testing h5ls -w80 -d tudfilter.h5                                      PASSED
All Plugin API tests passed.
0.07user 0.10system 0:00.21elapsed 82%CPU (0avgtext+0avgdata 7348maxresident)k
0inputs+704outputs (0major+28072minor)pagefaults 0swaps

Finished testing h5ls_plugin.sh 
============================
============================
Finished testing testh5ls.sh 
============================
testh5ls.sh  Test Log
============================
Testing h5ls -w80 -h                                                   PASSED
Testing h5ls -w80 -help                                                PASSED
Testing h5ls -w80 -?                                                   PASSED
Testing h5ls -w80 tall.h5                                              PASSED
Testing h5ls -w80 -r -d tall.h5                                        PASSED
Testing h5ls -w80 tgroup.h5                                            PASSED
Testing h5ls -w80 tgroup.h5/g1                                         PASSED
Testing h5ls -w80 -r -g tgroup.h5                                      PASSED
Testing h5ls -w80 -g tgroup.h5/g1                                      PASSED
Testing h5ls -w80 -v -g tgrp_comments.h5/glongcomment                  PASSED
Testing h5ls -w80 -r -d tdset.h5                                       PASSED
Testing h5ls -w80 -r tslink.h5                                         PASSED
Testing h5ls --follow-symlinks tsoftlinks.h5                           PASSED
Testing h5ls --follow-symlinks -r tsoftlinks.h5                        PASSED
Testing h5ls --follow-symlinks tsoftlinks.h5/group1                    PASSED
Testing h5ls --follow-symlinks -r tsoftlinks.h5/group1                 PASSED
Testing h5ls --follow-symlinks tsoftlinks.h5/soft_dset1                PASSED
Testing h5ls -w80 -r textlink.h5                                       PASSED
Testing h5ls -w80 --follow-symlinks -r textlinksrc.h5                  PASSED
Testing h5ls -w80 --follow-symlinks -rv textlinksrc.h5/ext_link5       PASSED
Testing h5ls -w80 --follow-symlinks -r textlinksrc.h5/ext_link1        PASSED
Testing h5ls -w80 -r textlinksrc.h5                                    PASSED
Testing h5ls -w80 -r textlinksrc.h5/ext_link1                          PASSED
Testing h5ls -w80 --follow-symlinks textlinksrc.h5                     PASSED
Testing h5ls -w80 --follow-symlinks textlinksrc.h5/ext_link1           PASSED
Testing h5ls -w80 -r tudlink.h5                                        PASSED
Testing h5ls -w80 -Er textlinksrc.h5                                   PASSED
Testing h5ls -w80 -Erv textlinksrc.h5/ext_link5                        PASSED
Testing h5ls -w80 -Er textlinksrc.h5/ext_link1                         PASSED
Testing h5ls -w80 -E textlinksrc.h5                                    PASSED
Testing h5ls -w80 -E textlinksrc.h5/ext_link1                          PASSED
Testing h5ls -w80 --no-dangling-links textlinksrc.h5                   PASSED
Testing h5ls -w80 --follow-symlinks --no-dangling-links textlinksrc.h5 PASSED
Testing h5ls -w80 --follow-symlinks --no-dangling-links tsoftlinks.h5  PASSED
Testing h5ls -w80 --follow-symlinks --no-dangling-links thlink.h5      PASSED
Testing h5ls -w80 thlink.h5 tslink.h5                                  PASSED
Testing h5ls -w80 thlink.h5                                            PASSED
Testing h5ls -w80 -r -d tcompound.h5                                   PASSED
Testing h5ls -w80 -r -d tnestedcomp.h5                                 PASSED
Testing h5ls -w80 -r -d -S tnestedcomp.h5                              PASSED
Testing h5ls -w80 -r -d -l tnestedcomp.h5                              PASSED
Testing h5ls -w80 -r -d -l -S tnestedcomp.h5                           PASSED
Testing h5ls -w80 -r -d tloop.h5                                       PASSED
Testing h5ls -w80 -r -d tstr.h5                                        PASSED
Testing h5ls -w80 -r -d tsaf.h5                                        PASSED
Testing h5ls -w80 -r -d tvldtypes1.h5                                  PASSED
Testing h5ls -w80 -r -d tarray1.h5                                     PASSED
Testing h5ls -w80 -d tempty.h5                                         PASSED
Testing h5ls -w80 -v -S tgrpnullspace.h5                               PASSED
Testing h5ls -w80 -v -S tattr2.h5                                      PASSED
Testing h5ls -w80 -v -d tattrreg.h5                                    PASSED
Testing h5ls nosuchfile.h5                                             PASSED
Testing h5ls -v tvldtypes1.h5                                          PASSED
Testing h5ls -v tdatareg.h5                                            PASSED
All h5ls tests passed.
1.77user 3.37system 0:04.56elapsed 112%CPU (0avgtext+0avgdata 7796maxresident)k
0inputs+5792outputs (0major+981108minor)pagefaults 0swaps

Finished testing testh5ls.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
===Serial tests in h5ls ended Mon May 14 21:11:52 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5ls'
Making check in h5dump
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5dump
  CCLD     h5dumpgentest
  CCLD     binread
gmake -j 8  h5dumpgentest binread testh5dump.sh testh5dumppbits.sh testh5dumpxml.sh h5dump_plugin.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5dumpgentest' is up to date.
gmake[3]: `binread' is up to date.
gmake[3]: `testh5dump.sh' is up to date.
gmake[3]: `testh5dumppbits.sh' is up to date.
gmake[3]: `testh5dumpxml.sh' is up to date.
gmake[3]: `h5dump_plugin.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5dump begin Mon May 14 21:11:52 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5dumpgentest 
============================
============================
============================
============================
Testing testh5dump.sh 
Testing testh5dumpxml.sh 
Testing testh5dumppbits.sh 
Testing h5dump_plugin.sh 
Finished testing h5dump_plugin.sh 
============================
h5dump_plugin.sh  Test Log
============================
Testing h5dump --enable-error-stack tudfilter.h5                       PASSED
All Plugin API tests passed.
0.08user 0.08system 0:00.20elapsed 83%CPU (0avgtext+0avgdata 7536maxresident)k
0inputs+928outputs (0major+28146minor)pagefaults 0swaps

Finished testing h5dump_plugin.sh 
============================
============================
============================
 h5dumpgentest  Test Log
============================
0.20user 0.06system 0:00.53elapsed 49%CPU (0avgtext+0avgdata 14756maxresident)k
0inputs+20824outputs (0major+11539minor)pagefaults 0swaps

Finished testing h5dumpgentest 
============================
Finished testing testh5dumpxml.sh 
============================
testh5dumpxml.sh  Test Log
============================
Testing h5dump --xml tall.h5                                           PASSED
Testing h5dump --xml tattr.h5                                          PASSED
Testing h5dump --xml tbitfields.h5                                     PASSED
Testing h5dump --xml tcompound.h5                                      PASSED
Testing h5dump --xml tcompound2.h5                                     PASSED
Testing h5dump --xml tdatareg.h5                                       PASSED
Testing h5dump --xml tdset.h5                                          PASSED
Testing h5dump --xml tdset2.h5                                         PASSED
Testing h5dump --xml tenum.h5                                          PASSED
Testing h5dump --xml tgroup.h5                                         PASSED
Testing h5dump --xml thlink.h5                                         PASSED
Testing h5dump --xml tloop.h5                                          PASSED
Testing h5dump --xml tloop2.h5                                         PASSED
Testing h5dump --xml tmany.h5                                          PASSED
Testing h5dump --xml tnestedcomp.h5                                    PASSED
Testing h5dump --xml tcompound_complex.h5                              PASSED
Testing h5dump --xml tobjref.h5                                        PASSED
Testing h5dump --xml topaque.h5                                        PASSED
Testing h5dump --xml tslink.h5                                         PASSED
Testing h5dump --xml tudlink.h5                                        PASSED
Testing h5dump --xml textlink.h5                                       PASSED
Testing h5dump --xml tstr.h5                                           PASSED
Testing h5dump --xml tstr2.h5                                          PASSED
Testing h5dump --xml tref.h5                                           PASSED
Testing h5dump --xml tname-amp.h5                                      PASSED
Testing h5dump --xml tname-apos.h5                                     PASSED
Testing h5dump --xml tname-gt.h5                                       PASSED
Testing h5dump --xml tname-lt.h5                                       PASSED
Testing h5dump --xml tname-quot.h5                                     PASSED
Testing h5dump --xml tname-sp.h5                                       PASSED
Testing h5dump --xml tstring.h5                                        PASSED
Testing h5dump --xml tstring-at.h5                                     PASSED
Testing h5dump --xml tref-escapes.h5                                   PASSED
Testing h5dump --xml tref-escapes-at.h5                                PASSED
Testing h5dump --xml tnodata.h5                                        PASSED
Testing h5dump --xml tarray1.h5                                        PASSED
Testing h5dump --xml tarray2.h5                                        PASSED
Testing h5dump --xml tarray3.h5                                        PASSED
Testing h5dump --xml tarray6.h5                                        PASSED
Testing h5dump --xml tarray7.h5                                        PASSED
Testing h5dump --xml tvldtypes1.h5                                     PASSED
Testing h5dump --xml tvldtypes2.h5                                     PASSED
Testing h5dump --xml tvldtypes3.h5                                     PASSED
Testing h5dump --xml tvldtypes4.h5                                     PASSED
Testing h5dump --xml tvldtypes5.h5                                     PASSED
Testing h5dump --xml tvlstr.h5                                         PASSED
Testing h5dump --xml tsaf.h5                                           PASSED
Testing h5dump --xml tempty.h5                                         PASSED
Testing h5dump --xml tnamed_dtype_attr.h5                              PASSED
Testing h5dump --xml tnullspace.h5                                     PASSED
Testing h5dump --xml --use-dtd tempty.h5                               PASSED
Testing h5dump --xml -u tempty.h5                                      PASSED
Testing h5dump --xml -X : tempty.h5                                    PASSED
Testing h5dump --xml --xml-ns=: tempty.h5                              PASSED
Testing h5dump --xml -X thing: tempty.h5                               PASSED
Testing h5dump --xml --xml-ns=thing: tempty.h5                         PASSED
Testing h5dump --xml --xml-ns=: --xml-dtd=http://somewhere.net tempty. PASSED
Testing h5dump --xml --use-dtd --xml-dtd=http://somewhere.net tempty.h PASSED
Testing h5dump --xml -A tall.h5                                        PASSED
Testing h5dump --xml -H --sort_by=name --sort_order=ascending torderat PASSED
Testing h5dump --xml -H --sort_by=name --sort_order=descending tordera PASSED
Testing h5dump --xml -H --sort_by=creation_order --sort_order=ascendin PASSED
Testing h5dump --xml -H --sort_by=creation_order --sort_order=descendi PASSED
Testing h5dump -u -m %.7f tfpformat.h5                                 PASSED
Testing h5dump --xml test35.nc                                         PASSED
All h5dumpxml tests passed.
1.17user 2.44system 0:02.73elapsed 131%CPU (0avgtext+0avgdata 7188maxresident)k
0inputs+4312outputs (0major+957317minor)pagefaults 0swaps

Finished testing testh5dumpxml.sh 
============================
============================
Finished testing testh5dumppbits.sh 
============================
testh5dumppbits.sh  Test Log
============================
Testing h5dump --enable-error-stack                                    PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,8 packedbits.h5  PASSED
Testing h5dump --enable-error-stack -d /DU08BITS -M 0,8 packedbits.h5  PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 0,16 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DU16BITS -M 0,16 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 0,32 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DU32BITS -M 0,32 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 0,64 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 0,64 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 0,63 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 0,63 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 1,63 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 1,63 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,4,4,4 packedbits PASSED
Testing h5dump --enable-error-stack -d /DU08BITS -M 0,4,4,4 packedbits PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 0,8,8,8 packedbits PASSED
Testing h5dump --enable-error-stack -d /DU16BITS -M 0,8,8,8 packedbits PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 0,16,16,16 packedb PASSED
Testing h5dump --enable-error-stack -d /DU32BITS -M 0,16,16,16 packedb PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 0,32,32,32 packedb PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 0,32,32,32 packedb PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,2,2,2,4,2,6,2 pa PASSED
Testing h5dump --enable-error-stack -d /DU08BITS -M 0,2,2,2,4,2,6,2 pa PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 0,4,4,4,8,4,12,4 p PASSED
Testing h5dump --enable-error-stack -d /DU16BITS -M 0,4,4,4,8,4,12,4 p PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 0,8,8,8,16,8,24,8  PASSED
Testing h5dump --enable-error-stack -d /DU32BITS -M 0,8,8,8,16,8,24,8  PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 0,16,16,16,32,16,4 PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 0,16,16,16,32,16,4 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,2,2,6 packedbits PASSED
Testing h5dump --enable-error-stack -d /DU08BITS -M 0,2,2,6 packedbits PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 0,2,10,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DU16BITS -M 0,2,10,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 0,2,26,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DU32BITS -M 0,2,26,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DS64BITS -M 0,2,58,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DU64BITS -M 0,2,58,6 packedbit PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,1,1,1,2,1,0,3 pa PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,1,1,1,2,1,3,1,4, PASSED
Testing h5dump --enable-error-stack -d /dset1 -M 0,1,1,1 tcompound.h5  PASSED
Testing h5dump --enable-error-stack -d /Dataset1 -M 0,1,1,1 tarray1.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,1,0,1,1,1,2,1,3, PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 64,1 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 8,1 packedbits.h5  PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 16,1 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 32,1 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M -1,1 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 4,0 packedbits.h5  PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 37,28 packedbits.h PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 2,7 packedbits.h5  PASSED
Testing h5dump --enable-error-stack -d /DS16BITS -M 10,7 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS32BITS -M 26,7 packedbits.h5 PASSED
Testing h5dump --enable-error-stack -d /DS08BITS -M 0,2,2,1,0,2,2, pac PASSED
All h5dump tests passed.
1.08user 2.44system 0:02.95elapsed 119%CPU (0avgtext+0avgdata 5324maxresident)k
0inputs+6080outputs (0major+921638minor)pagefaults 0swaps

Finished testing testh5dumppbits.sh 
============================
============================
Finished testing testh5dump.sh 
============================
testh5dump.sh  Test Log
============================
Testing h5dump -h                                                      PASSED
Testing h5dump --enable-error-stack --ddl -y packedbits.h5             PASSED
Testing h5dump --enable-error-stack --output packedbits.h5             PASSED
Testing h5dump --enable-error-stack -O -y tattr.h5                     PASSED
Testing h5dump --enable-error-stack -A -o tattr.h5                     PASSED
Testing h5dump --enable-error-stack -y -o trawdatafile.txt packedbits. PASSED
Testing h5dump --enable-error-stack -O -y -o tnoddlfile.txt packedbits PASSED
Testing h5dump --enable-error-stack --ddl=twithddl.txt -y -o twithddlf PASSED
Testing h5dump --enable-error-stack -d /dset1[1,1;;;] -y -o trawssetfi PASSED
Testing h5dump --enable-error-stack -w0 packedbits.h5                  PASSED
Testing h5dump --enable-error-stack packedbits.h5                      PASSED
Testing h5dump --enable-error-stack tcmpdintsize.h5                    PASSED
Testing h5dump --enable-error-stack tscalarintsize.h5                  PASSED
Testing h5dump --enable-error-stack tattrintsize.h5                    PASSED
Testing h5dump --enable-error-stack tcmpdattrintsize.h5                PASSED
Testing h5dump --enable-error-stack tscalarattrintsize.h5              PASSED
Testing h5dump --enable-error-stack tscalarintattrsize.h5              PASSED
Testing h5dump --enable-error-stack tintsattrs.h5                      PASSED
Testing h5dump --enable-error-stack tscalarstring.h5                   PASSED
Testing h5dump --enable-error-stack tgroup.h5                          PASSED
Testing h5dump --enable-error-stack --group=/g2 --group / -g /y tgroup PASSED
Testing h5dump --enable-error-stack tdset.h5                           PASSED
Testing h5dump --enable-error-stack -H -d dset1 -d /dset2 --dataset=ds PASSED
Testing h5dump --enable-error-stack tattr.h5                           PASSED
Testing h5dump --enable-error-stack -a /\/attr1 --attribute /attr4 --a PASSED
Testing h5dump --enable-error-stack -N /\/attr1 --any_path /attr4 --an PASSED
Testing h5dump --enable-error-stack --header -a /attr2 --attribute=/at PASSED
Testing h5dump --enable-error-stack tattr4_be.h5                       PASSED
Testing h5dump --enable-error-stack tnamed_dtype_attr.h5               PASSED
Testing h5dump --enable-error-stack tslink.h5                          PASSED
Testing h5dump --enable-error-stack tudlink.h5                         PASSED
Testing h5dump --enable-error-stack -l slink2 tslink.h5                PASSED
Testing h5dump --enable-error-stack -N slink2 tslink.h5                PASSED
Testing h5dump --enable-error-stack -l udlink2 tudlink.h5              PASSED
Testing h5dump --enable-error-stack -d /slink1 tslink.h5               PASSED
Testing h5dump --enable-error-stack thlink.h5                          PASSED
Testing h5dump --enable-error-stack -d /g1/dset2 --dataset /dset1 --da PASSED
Testing h5dump --enable-error-stack -d /g1/g1.1/dset3 --dataset /g1/ds PASSED
Testing h5dump --enable-error-stack -g /g1 thlink.h5                   PASSED
Testing h5dump --enable-error-stack -N /g1 thlink.h5                   PASSED
Testing h5dump --enable-error-stack -d /dset1 -g /g2 -d /g1/dset2 thli PASSED
Testing h5dump --enable-error-stack -N /dset1 -N /g2 -N /g1/dset2 thli PASSED
Testing h5dump --enable-error-stack tcompound.h5                       PASSED
Testing h5dump --enable-error-stack -t /type1 --datatype /type2 --data PASSED
Testing h5dump --enable-error-stack -N /type1 --any_path /type2 --any_ PASSED
Testing h5dump --enable-error-stack -t /#6632 -g /group2 tcompound.h5  PASSED
Testing h5dump --enable-error-stack tcompound_complex.h5               PASSED
Testing h5dump --enable-error-stack tcompound_complex2.h5              PASSED
Testing h5dump --enable-error-stack tbitnopaque.h5                     PASSED
Testing h5dump --enable-error-stack tnestedcomp.h5                     PASSED
Testing h5dump --enable-error-stack tnestedcmpddt.h5                   PASSED
Testing h5dump --enable-error-stack tall.h5                            PASSED
Testing h5dump --enable-error-stack --header -g /g1/g1.1 -a attr2 tall PASSED
Testing h5dump --enable-error-stack -d /g2/dset2.1 -l /g1/g1.2/g1.2.1/ PASSED
Testing h5dump --enable-error-stack -N /g2/dset2.1 -N /g1/g1.2/g1.2.1/ PASSED
Testing h5dump --enable-error-stack -a attr1 tall.h5                   PASSED
Testing h5dump --enable-error-stack -N attr1 tall.h5                   PASSED
Testing h5dump --enable-error-stack tloop.h5                           PASSED
Testing h5dump --enable-error-stack tstr.h5                            PASSED
Testing h5dump --enable-error-stack tstr2.h5                           PASSED
Testing h5dump --enable-error-stack tsaf.h5                            PASSED
Testing h5dump --enable-error-stack tvldtypes1.h5                      PASSED
Testing h5dump --enable-error-stack tvldtypes2.h5                      PASSED
Testing h5dump --enable-error-stack tvldtypes3.h5                      PASSED
Testing h5dump --enable-error-stack tvldtypes4.h5                      PASSED
Testing h5dump --enable-error-stack tvldtypes5.h5                      PASSED
Testing h5dump --enable-error-stack tvlstr.h5                          PASSED
Testing h5dump --enable-error-stack tvlenstr_array.h5                  PASSED
Testing h5dump --enable-error-stack tarray1.h5                         PASSED
Testing h5dump --enable-error-stack -R tarray1_big.h5                  PASSED
Testing h5dump --enable-error-stack tarray2.h5                         PASSED
Testing h5dump --enable-error-stack tarray3.h5                         PASSED
Testing h5dump --enable-error-stack tarray4.h5                         PASSED
Testing h5dump --enable-error-stack tarray5.h5                         PASSED
Testing h5dump --enable-error-stack tarray6.h5                         PASSED
Testing h5dump --enable-error-stack tarray7.h5                         PASSED
Testing h5dump --enable-error-stack tarray8.h5                         PASSED
Testing h5dump --enable-error-stack -H -d Dataset1 tarray2.h5 tarray3. PASSED
Testing h5dump --enable-error-stack tempty.h5                          PASSED
Testing h5dump --enable-error-stack tgrp_comments.h5                   PASSED
Testing h5dump --enable-error-stack --filedriver=split tsplit_file     PASSED
Testing h5dump --enable-error-stack --filedriver=family tfamily%05d.h5 PASSED
Testing h5dump --enable-error-stack --filedriver=multi tmulti          PASSED
Testing h5dump --enable-error-stack -w157 tlarge_objname.h5            PASSED
Testing h5dump --enable-error-stack -A tall.h5                         PASSED
Testing h5dump --enable-error-stack -A 0 tall.h5                       PASSED
Testing h5dump --enable-error-stack -A -r tall.h5                      PASSED
Testing h5dump --enable-error-stack --dataset=/g1/g1.1/dset1.1.1 --sta PASSED
Testing h5dump --enable-error-stack -d /g1/g1.1/dset1.1.2[0;2;10;] tal PASSED
Testing h5dump --enable-error-stack -d /dset1[1,1;;;] tdset.h5         PASSED
Testing h5dump --enable-error-stack --no-compact-subset -d AHFINDERDIR PASSED
Testing h5dump --enable-error-stack -d FourDimInts -s 0,0,0,0 -c 2,2,2 PASSED
Testing h5dump --enable-error-stack -d FourDimInts -s 0,0,0,0 -c 1,1,1 PASSED
Testing h5dump --enable-error-stack -d FourDimInts -s 0,0,0,0 -S 2,2,2 PASSED
Testing h5dump --enable-error-stack -d FourDimInts -s 0,0,0,0 -S 2,2,1 PASSED
Testing h5dump --enable-error-stack -d FourDimInts -s 0,0,0,0 -S 2,2,1 PASSED
Testing h5dump --enable-error-stack -r tchar.h5                        PASSED
Testing h5dump --enable-error-stack charsets.h5                        PASSED
Testing h5dump --enable-error-stack -H -B -d dset tfcontents1.h5       PASSED
Testing h5dump --enable-error-stack -B tfcontents2.h5                  PASSED
Testing h5dump --enable-error-stack --boot-block tfcontents2.h5        PASSED
Testing h5dump --enable-error-stack --superblock tfcontents2.h5        PASSED
Testing h5dump --enable-error-stack -p -d bogus tfcontents1.h5         PASSED
Testing h5dump --enable-error-stack -n tfcontents1.h5                  PASSED
Testing h5dump --enable-error-stack -n --sort_by=name --sort_order=asc PASSED
Testing h5dump --enable-error-stack -n --sort_by=name --sort_order=des PASSED
Testing h5dump --enable-error-stack -n 1 --sort_order=ascending tall.h PASSED
Testing h5dump --enable-error-stack -n 1 --sort_order=descending tall. PASSED
Testing h5dump --enable-error-stack -H -p -d compact tfilters.h5       PASSED
Testing h5dump --enable-error-stack -H -p -d contiguous tfilters.h5    PASSED
Testing h5dump --enable-error-stack -H -p -d chunked tfilters.h5       PASSED
Testing h5dump --enable-error-stack -H -p -d external tfilters.h5      PASSED
Testing h5dump --enable-error-stack -p tfvalues.h5                     PASSED
Testing h5dump --enable-error-stack tattr2.h5                          PASSED
Testing h5dump --enable-error-stack -e tstr3.h5                        PASSED
Testing h5dump --enable-error-stack tstr3.h5                           PASSED
Testing h5dump --enable-error-stack -r -d str4 tstr3.h5                PASSED
Testing h5dump --enable-error-stack taindices.h5                       PASSED
Testing h5dump --enable-error-stack -y taindices.h5                    PASSED
Testing h5dump --enable-error-stack -d 1d -s 1 -S 10 -c 2 -k 3 taindic PASSED
Testing h5dump --enable-error-stack -d 2d -s 1,2 -S 3,3 -c 3,2 -k 2,2  PASSED
Testing h5dump --enable-error-stack -d 3d -s 0,1,2 -S 1,3,3 -c 2,2,2 - PASSED
Testing h5dump --enable-error-stack -d 4d -s 0,0,1,2 -c 2,2,3,2 -S 1,1 PASSED
Testing h5dump --enable-error-stack -d 1d -s 1,3 taindices.h5          PASSED
Testing h5dump --enable-error-stack -d 1d -c 1,3 taindices.h5          PASSED
Testing h5dump --enable-error-stack -d 1d -S 1,3 taindices.h5          PASSED
Testing h5dump --enable-error-stack -d 1d -k 1,3 taindices.h5          PASSED
Testing h5dump --enable-error-stack -H -p -d szip tfilters.h5          PASSED
Testing h5dump --enable-error-stack -H -p -d deflate tfilters.h5       PASSED
Testing h5dump --enable-error-stack -H -p -d shuffle tfilters.h5       PASSED
Testing h5dump --enable-error-stack -H -p -d fletcher32 tfilters.h5    PASSED
Testing h5dump --enable-error-stack -H -p -d nbit tfilters.h5          PASSED
Testing h5dump --enable-error-stack -H -p -d scaleoffset tfilters.h5   PASSED
Testing h5dump --enable-error-stack -H -p -d all tfilters.h5           PASSED
Testing h5dump --enable-error-stack -H -p -d myfilter tfilters.h5      PASSED
Testing h5dump --enable-error-stack -d deflate -d shuffle -d fletcher3 PASSED
Testing h5dump --enable-error-stack tlonglinks.h5                      PASSED
Testing h5dump --enable-error-stack -d dset4gb -s 4294967284 -c 22 tbi PASSED
Testing h5dump --enable-error-stack thyperslab.h5                      PASSED
Testing h5dump --enable-error-stack tnullspace.h5                      PASSED
Testing h5dump -p --enable-error-stack tgrpnullspace.h5                PASSED
Testing h5dump --enable-error-stack zerodim.h5                         PASSED
Testing h5dump --enable-error-stack tvms.h5                            PASSED
Testing h5dump --enable-error-stack -d integer -o out1.bin -b LE tbina PASSED
Testing h5dump --enable-error-stack -d /g2/dset2 -b -o tstr2bin2.txt t PASSED
Testing h5dump --enable-error-stack -d /g6/dset6 -b -o tstr2bin6.txt t PASSED
Testing h5dump --enable-error-stack -d integer -o out1.bin -b tbinary. PASSED
 Running h5import out1.bin -c out3.h5import -o out1.h5                 PASSED
 Running h5diff tbinary.h5 out1.h5 /integer /integer                   PASSED
 Running h5import out1.bin -c tbin1.ddl -o out1D.h5                    PASSED
 Running h5diff tbinary.h5 out1D.h5 /integer /integer                  PASSED
Testing h5dump --enable-error-stack -b BE -d float -o out2.bin tbinary PASSED
Testing h5dump --enable-error-stack -d integer -o out3.bin -b NATIVE t PASSED
 Running h5import out3.bin -c out3.h5import -o out3.h5                 PASSED
 Running h5diff tbinary.h5 out3.h5 /integer /integer                   PASSED
 Running h5import out3.bin -c tbin3.ddl -o out3D.h5                    PASSED
 Running h5diff tbinary.h5 out3D.h5 /integer /integer                  PASSED
Testing h5dump --enable-error-stack -d double -b FILE -o out4.bin tbin PASSED
Testing h5dump --enable-error-stack tdatareg.h5                        PASSED
Testing h5dump --enable-error-stack -R tdatareg.h5                     PASSED
Testing h5dump --enable-error-stack tattrreg.h5                        PASSED
Testing h5dump --enable-error-stack -R tattrreg.h5                     PASSED
Testing h5dump --enable-error-stack -d /Dataset1 -s 0 -R -y -o tbinreg PASSED
Testing h5dump --enable-error-stack --group=1 --sort_by=creation_order PASSED
Testing h5dump --enable-error-stack --group=1 --sort_by=creation_order PASSED
Testing h5dump --enable-error-stack -g 2 -q name -z ascending tordergr PASSED
Testing h5dump --enable-error-stack -g 2 -q name -z descending torderg PASSED
Testing h5dump --enable-error-stack -q creation_order tordergr.h5      PASSED
Testing h5dump --enable-error-stack -H --sort_by=name --sort_order=asc PASSED
Testing h5dump --enable-error-stack -H --sort_by=name --sort_order=des PASSED
Testing h5dump --enable-error-stack -H --sort_by=creation_order --sort PASSED
Testing h5dump --enable-error-stack -H --sort_by=creation_order --sort PASSED
Testing h5dump --enable-error-stack --sort_by=name --sort_order=ascend PASSED
Testing h5dump --enable-error-stack --sort_by=name --sort_order=descen PASSED
Testing h5dump --enable-error-stack -m %.7f tfpformat.h5               PASSED
Testing h5dump --enable-error-stack textlinksrc.h5                     PASSED
Testing h5dump --enable-error-stack textlinkfar.h5                     PASSED
Testing h5dump --enable-error-stack textlink.h5                        PASSED
Testing h5dump --enable-error-stack filter_fail.h5                     PASSED
Testing h5dump --enable-error-stack -y -o tall-6.txt -d /g1/g1.1/dset1 PASSED
Testing h5dump --enable-error-stack tgroup.h5 non_existing.h5          PASSED
All h5dump tests passed.
7.70user 10.66system 0:16.28elapsed 112%CPU (0avgtext+0avgdata 11872maxresident)k
0inputs+271072outputs (0major+3390203minor)pagefaults 0swaps

Finished testing testh5dump.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
===Serial tests in h5dump ended Mon May 14 21:12:08 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5dump'
Making check in misc
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5debug
  CCLD     h5repart
  CCLD     h5mkgrp
  CCLD     h5repart_gentest
  CCLD     repart_test
  CCLD     talign
gmake -j 8  h5repart_gentest talign repart_test testh5repart.sh testh5mkgrp.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5repart_gentest' is up to date.
gmake[3]: `talign' is up to date.
gmake[3]: `repart_test' is up to date.
gmake[3]: `testh5repart.sh' is up to date.
gmake[3]: `testh5mkgrp.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in misc begin Mon May 14 21:12:09 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
============================
Testing  h5repart_gentest 
Testing  talign 
============================
============================
Testing testh5mkgrp.sh 
Testing testh5repart.sh 
============================
 talign  Test Log
============================
Testing alignment in compound datatypes                                PASSED
0.04user 0.02system 0:00.06elapsed 103%CPU (0avgtext+0avgdata 6908maxresident)k
0inputs+56outputs (0major+9712minor)pagefaults 0swaps

Finished testing talign 
============================
============================
 h5repart_gentest  Test Log
============================
 PASSED
0.04user 0.02system 0:00.06elapsed 102%CPU (0avgtext+0avgdata 6904maxresident)k
0inputs+200outputs (0major+8682minor)pagefaults 0swaps

Finished testing h5repart_gentest 
============================
Finished testing testh5repart.sh 
============================
testh5repart.sh  Test Log
============================
Testing ./h5repart -m 20000 family_file%05d.h5 fst_family%05d.h5       PASSED
Testing ./h5repart -m 5k family_file%05d.h5 scd_family%05d.h5          PASSED
Testing ./h5repart -m 20000 -family_to_sec2 family_file%05d.h5 family_ PASSED
Testing repart_test                                                    PASSED

All h5repart tests passed.
0.18user 0.31system 0:00.39elapsed 128%CPU (0avgtext+0avgdata 6928maxresident)k
0inputs+400outputs (0major+102046minor)pagefaults 0swaps

Finished testing testh5repart.sh 
============================
============================
Finished testing testh5mkgrp.sh 
============================
testh5mkgrp.sh  Test Log
============================
Testing h5mkgrp -h                                                     PASSED
Testing h5mkgrp h5mkgrp_single.h5 single                               PASSED
Verifying h5ls file structure h5mkgrp_single.h5                        PASSED
Testing h5mkgrp -v h5mkgrp_single_v.h5 single                          PASSED
Verifying h5ls file structure h5mkgrp_single_v.h5                      PASSED
Testing h5mkgrp -p h5mkgrp_single_p.h5 single                          PASSED
Verifying h5ls file structure h5mkgrp_single_p.h5                      PASSED
Testing h5mkgrp -l h5mkgrp_single_l.h5 latest                          PASSED
Verifying h5ls file structure h5mkgrp_single_l.h5                      PASSED
Testing h5mkgrp h5mkgrp_several.h5 one two                             PASSED
Verifying h5ls file structure h5mkgrp_several.h5                       PASSED
Testing h5mkgrp -v h5mkgrp_several_v.h5 one two                        PASSED
Verifying h5ls file structure h5mkgrp_several_v.h5                     PASSED
Testing h5mkgrp -p h5mkgrp_several_p.h5 one two                        PASSED
Verifying h5ls file structure h5mkgrp_several_p.h5                     PASSED
Testing h5mkgrp -l h5mkgrp_several_l.h5 one two                        PASSED
Verifying h5ls file structure h5mkgrp_several_l.h5                     PASSED
Testing h5mkgrp -p h5mkgrp_nested_p.h5 /one/two                        PASSED
Verifying h5ls file structure h5mkgrp_nested_p.h5                      PASSED
Testing h5mkgrp -lp h5mkgrp_nested_lp.h5 /one/two                      PASSED
Verifying h5ls file structure h5mkgrp_nested_lp.h5                     PASSED
Testing h5mkgrp -p h5mkgrp_nested_mult_p.h5 /one/two /three/four       PASSED
Verifying h5ls file structure h5mkgrp_nested_mult_p.h5                 PASSED
Testing h5mkgrp -lp h5mkgrp_nested_mult_lp.h5 /one/two /three/four     PASSED
Verifying h5ls file structure h5mkgrp_nested_mult_lp.h5                PASSED
All h5mkgrp tests passed.
0.51user 0.97system 0:01.23elapsed 120%CPU (0avgtext+0avgdata 7296maxresident)k
0inputs+1888outputs (0major+294489minor)pagefaults 0swaps

Finished testing testh5mkgrp.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
===Serial tests in misc ended Mon May 14 21:12:10 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/misc'
Making check in h5import
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5import
  CCLD     h5importtest
gmake -j 8  h5importtest
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5importtest' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5import begin Mon May 14 21:12:11 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5importtest 
============================
Testing h5importtestutil.sh 
============================
 h5importtest  Test Log
============================
0.03user 0.02system 0:00.06elapsed 104%CPU (0avgtext+0avgdata 6912maxresident)k
0inputs+168outputs (0major+7853minor)pagefaults 0swaps

Finished testing h5importtest 
============================
Finished testing h5importtestutil.sh 
============================
h5importtestutil.sh  Test Log
============================

==============================
H5IMPORT tests started
==============================
Testing ASCII I32 rank 3 - Output BE                                   PASSED
Testing ASCII I16 rank 3 - Output LE - CHUNKED - extended              PASSED
Testing ASCII I8 - rank 3 - Output I8 LE-Chunked+Extended+Compressed   PASSED
Testing ASCII UI16 - rank 2 - Output LE+Chunked+Compressed             PASSED
Testing ASCII UI32 - rank 3 - Output BE                                PASSED
Testing ASCII F32 - rank 3 - Output LE                                 PASSED
Testing ASCII F64 - rank 3 - Output BE + CHUNKED+Extended+Compressed   PASSED
Testing BINARY F64 - rank 3 - Output LE+CHUNKED+Extended+Compressed    PASSED
Testing H5DUMP-BINARY F64 - rank 3 - Output LE+CHUNKED+Extended+Compre PASSED
Testing BINARY I8 - rank 3 - Output I16LE + Chunked+Extended+Compresse PASSED
Testing H5DUMP-BINARY I8 - rank 3 - Output I16LE + Chunked+Extended+Co PASSED
Testing BINARY I16 - rank 3 - Output order LE + CHUNKED + extended     PASSED
Testing H5DUMP-BINARY I16 - rank 3 - Output order LE + CHUNKED + exten PASSED
Testing BINARY I32 - rank 3 - Output BE + CHUNKED                      PASSED
Testing H5DUMP-BINARY I32 - rank 3 - Output BE + CHUNKED               PASSED
Testing BINARY UI16 - rank 3 - Output byte BE + CHUNKED                PASSED
Testing H5DUMP-BINARY UI16 - rank 3 - Output byte BE + CHUNKED         PASSED
Testing BINARY UI32 - rank 3 - Output LE + CHUNKED                     PASSED
Testing H5DUMP-BINARY UI32 - rank 3 - Output LE + CHUNKED              PASSED
Testing STR                                                            PASSED
Testing H5DUMP-STR                                                     PASSED
Testing BINARY I8 CR LF EOF                                            PASSED
Testing H5DUMP-BINARY I8 CR LF EOF                                     PASSED
Testing ASCII F64 - rank 1 - INPUT-CLASS TEXTFPE                       PASSED
Testing Binary Subset FP                                               PASSED
Testing Binary Subset INT                                              PASSED
Testing Binary Subset UINT                                             PASSED
All h5import tests passed.
1.22user 2.10system 0:02.75elapsed 121%CPU (0avgtext+0avgdata 7384maxresident)k
0inputs+2992outputs (0major+675526minor)pagefaults 0swaps

Finished testing h5importtestutil.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
===Serial tests in h5import ended Mon May 14 21:12:13 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5import'
Making check in h5repack
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5repack
  CCLD     h5repacktst
  CCLD     testh5repack_detect_szip
gmake -j 8  h5repacktst h5repack.sh h5repack_plugin.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5repacktst' is up to date.
gmake[3]: `h5repack.sh' is up to date.
gmake[3]: `h5repack_plugin.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5repack begin Mon May 14 21:12:14 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5repacktst 
============================
Testing h5repack_plugin.sh 
Finished testing h5repack_plugin.sh 
============================
h5repack_plugin.sh  Test Log
============================
plugin_version_test h5repack_layout.h5 -v -f UD=260,0,4,9,1,8,21
Testing h5repack -v -f UD=260,0,4,9,1,8,21                             PASSED
 PASSED
Verifying h5dump output -pH out-plugin_version_test.h5repack_layout.h5 PASSED
plugin_test h5repack_layout.h5 -v -f UD=257,0,1,9
Testing h5repack -v -f UD=257,0,1,9                                    PASSED
 PASSED
Verifying h5dump output -pH out-plugin_test.h5repack_layout.h5         PASSED
All Plugin API tests passed.
0.13user 0.20system 0:00.34elapsed 100%CPU (0avgtext+0avgdata 7636maxresident)k
0inputs+1192outputs (0major+61150minor)pagefaults 0swaps

Finished testing h5repack_plugin.sh 
============================
============================
============================
 h5repacktst  Test Log
============================
Testing h5repack:
Testing     generating files for testing                               PASSED
Testing     copy of datasets (fill values)                             PASSED
Testing     copy of datasets (all datatypes)                           PASSED
Testing     copy of datasets (attributes)                              PASSED
Testing     copy of datasets (hardlinks)                               PASSED
Testing     copy of allocation early file                              PASSED
Testing     adding deflate filter                                      PASSED
Testing     adding deflate filter to all                               PASSED
Testing     adding szip filter                                         -SKIP-
Testing     adding szip filter to all                                  -SKIP-
Testing     addding shuffle filter                                     PASSED
Testing     addding shuffle filter to all                              PASSED
Testing     adding checksum filter                                     PASSED
Testing     adding checksum filter to all                              PASSED
Testing     filter queue fletcher, shuffle, deflate, szip              PASSED
Testing     adding layout chunked                                      PASSED
Testing     adding layout chunked to all                               PASSED
Testing     adding layout contiguous                                   PASSED
Testing     adding layout contiguous to all                            PASSED
Testing     adding layout compact                                      PASSED
Testing     adding layout compact to all                               PASSED
Testing     layout compact to contiguous conversion                    PASSED
Testing     layout compact to chunk conversion                         PASSED
Testing     layout compact to compact conversion                       PASSED
Testing     layout contiguous to compact conversion                    PASSED
Testing     layout contiguous to chunk conversion                      PASSED
Testing     layout contiguous to contiguous conversion                 PASSED
Testing     layout chunked to compact conversion                       PASSED
Testing     layout chunked to contiguous conversion                    PASSED
Testing     layout chunked to chunk conversion                         PASSED
Testing     copy of szip filter                                        -SKIP-
Testing     removing szip filter                                       -SKIP-
Testing     copy of deflate filter                                     PASSED
Testing     removing deflate filter                                    PASSED
Testing     copy of shuffle filter                                     PASSED
Testing     removing shuffle filter                                    PASSED
Testing     copy of fletcher filter                                    PASSED
Testing     removing fletcher filter                                   PASSED
Testing     copy of nbit filter                                        PASSED
Testing     removing nbit filter                                       PASSED
Testing     adding nbit filter                                         PASSED
Testing     copy of scaleoffset filter                                 PASSED
Testing     removing scaleoffset filter                                PASSED
Testing     adding scaleoffset filter                                  PASSED
Testing     filter conversion from deflate to szip                     -SKIP-
Testing     filter conversion from szip to deflate                     -SKIP-
Testing     removing all filters                                       -SKIP-
Testing     big file                                                   PASSED
Testing     external datasets                                          PASSED
Testing     file with userblock                                        PASSED
Testing     latest file format options                                 PASSED
Testing     several global filters                                     PASSED
Testing     file with added userblock                                  PASSED
Testing     file with aligment                                         PASSED
Testing     file with committed datatypes                              PASSED
Testing     metadata block size option                                 PASSED
All h5repack tests passed.
4.51user 0.38system 0:05.24elapsed 93%CPU (0avgtext+0avgdata 255920maxresident)k
0inputs+12328outputs (0major+164570minor)pagefaults 0swaps

Finished testing h5repacktst 
============================
============================
Testing h5repack.sh 
Finished testing h5repack.sh 
============================
h5repack.sh  Test Log
============================
Testing h5repack -h                                                    PASSED
fill h5repack_fill.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_fill.h5 out-fill.h5repack_fill.h5     PASSED
objs h5repack_objs.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_objs.h5 out-objs.h5repack_objs.h5     PASSED
attr h5repack_attr.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_attr.h5 out-attr.h5repack_attr.h5     PASSED
hlink h5repack_hlink.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_hlink.h5 out-hlink.h5repack_hlink.h5  PASSED
layout h5repack_layout.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_layout.h5 out-layout.h5repack_layout. PASSED
early h5repack_early.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_early.h5 out-early.h5repack_early.h5  PASSED
nested_8bit_enum h5repack_nested_8bit_enum_deflated.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_nested_8bit_enum_deflated.h5 out-nest PASSED
gzip_individual h5repack_layout.h5 -f dset1:GZIP=1 -l dset1:CHUNK=20x10
Testing h5repack -f dset1:GZIP=1 -l dset1:CHUNK=20x10                  PASSED
Verifying h5diff output h5repack_layout.h5 out-gzip_individual.h5repac PASSED
gzip_all h5repack_layout.h5 -f GZIP=1
Testing h5repack -f GZIP=1                                             PASSED
Verifying h5diff output h5repack_layout.h5 out-gzip_all.h5repack_layou PASSED
Testing h5repack h5repack_layout.h5 -f dset2:SZIP=8,EC -l dset2:CHUNK= -SKIP-
Testing h5repack h5repack_layout.h5 -f SZIP=8,NN                       -SKIP-
shuffle_individual h5repack_layout.h5 -f dset2:SHUF -l dset2:CHUNK=20x10
Testing h5repack -f dset2:SHUF -l dset2:CHUNK=20x10                    PASSED
Verifying h5diff output h5repack_layout.h5 out-shuffle_individual.h5re PASSED
shuffle_all h5repack_layout.h5 -f SHUF
Testing h5repack -f SHUF                                               PASSED
Verifying h5diff output h5repack_layout.h5 out-shuffle_all.h5repack_la PASSED
fletcher_individual h5repack_layout.h5 -f dset2:FLET -l dset2:CHUNK=20x10
Testing h5repack -f dset2:FLET -l dset2:CHUNK=20x10                    PASSED
Verifying h5diff output h5repack_layout.h5 out-fletcher_individual.h5r PASSED
fletcher_all h5repack_layout.h5 -f FLET
Testing h5repack -f FLET                                               PASSED
Verifying h5diff output h5repack_layout.h5 out-fletcher_all.h5repack_l PASSED
Testing h5repack h5repack_layout.h5 -f dset2:SHUF -f dset2:FLET -f dse -SKIP-
Testing h5repack -v -f /dset_deflate:GZIP=9                            PASSED
Verifying h5diff output h5repack_filters.h5 out-gzip_verbose_filters.h PASSED
Verifying output from h5repack -v -f /dset_deflate:GZIP=9              PASSED
Testing h5repack h5repack_szip.h5                                      -SKIP-
Testing h5repack h5repack_szip.h5 --filter=dset_szip:NONE              -SKIP-
deflate_copy h5repack_deflate.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_deflate.h5 out-deflate_copy.h5repack_ PASSED
deflate_remove h5repack_deflate.h5 -f dset_deflate:NONE
Testing h5repack -f dset_deflate:NONE                                  PASSED
Verifying h5diff output h5repack_deflate.h5 out-deflate_remove.h5repac PASSED
shuffle_copy h5repack_shuffle.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_shuffle.h5 out-shuffle_copy.h5repack_ PASSED
shuffle_remove h5repack_shuffle.h5 -f dset_shuffle:NONE
Testing h5repack -f dset_shuffle:NONE                                  PASSED
Verifying h5diff output h5repack_shuffle.h5 out-shuffle_remove.h5repac PASSED
fletcher_copy h5repack_fletcher.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_fletcher.h5 out-fletcher_copy.h5repac PASSED
fletcher_remove h5repack_fletcher.h5 -f dset_fletcher32:NONE
Testing h5repack -f dset_fletcher32:NONE                               PASSED
Verifying h5diff output h5repack_fletcher.h5 out-fletcher_remove.h5rep PASSED
nbit_copy h5repack_nbit.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_nbit.h5 out-nbit_copy.h5repack_nbit.h PASSED
nbit_remove h5repack_nbit.h5 -f dset_nbit:NONE
Testing h5repack -f dset_nbit:NONE                                     PASSED
Verifying h5diff output h5repack_nbit.h5 out-nbit_remove.h5repack_nbit PASSED
nbit_add h5repack_nbit.h5 -f dset_int31:NBIT
Testing h5repack -f dset_int31:NBIT                                    PASSED
Verifying h5diff output h5repack_nbit.h5 out-nbit_add.h5repack_nbit.h5 PASSED
scale_copy h5repack_soffset.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_soffset.h5 out-scale_copy.h5repack_so PASSED
scale_add h5repack_soffset.h5 -f dset_none:SOFF=31,IN
Testing h5repack -f dset_none:SOFF=31,IN                               PASSED
Verifying h5diff output h5repack_soffset.h5 out-scale_add.h5repack_sof PASSED
scale_remove h5repack_soffset.h5 -f dset_scaleoffset:NONE
Testing h5repack -f dset_scaleoffset:NONE                              PASSED
Verifying h5diff output h5repack_soffset.h5 out-scale_remove.h5repack_ PASSED
Testing h5repack h5repack_filters.h5 -f NONE                           -SKIP-
Testing h5repack h5repack_deflate.h5 -f dset_deflate:SZIP=8,NN         -SKIP-
Testing h5repack h5repack_szip.h5 -f dset_szip:GZIP=1                  -SKIP-
Testing h5repack -f GZIP=1 -m 1024                                     PASSED
Verifying h5dump output -f GZIP=1 -m 1024                              PASSED
deflate_file h5repack_layout.h5 -e h5repack.info
Testing h5repack -e h5repack.info                                      PASSED
Verifying h5diff output h5repack_layout.h5 out-deflate_file.h5repack_l PASSED
Testing h5repack -L                                                    PASSED
Verifying h5dump output -L                                             PASSED
Testing h5repack --layout dset2:CHUNK=20x10                            PASSED
Verifying h5diff output h5repack_layout.h5 out-dset2_chunk_20x10.h5rep PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l CHUNK=20x10                                        PASSED
Verifying h5diff output h5repack_layout.h5 out-chunk_20x10.h5repack_la PASSED
Verifying layouts                                                     
Testing /mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack/../h5dump/h5dum PASSED
Testing h5repack -l dset2:CONTI                                        PASSED
Verifying h5diff output h5repack_layout.h5 out-dset2_conti.h5repack_la PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l CONTI                                              PASSED
Verifying h5diff output h5repack_layout.h5 out-conti.h5repack_layout.h PASSED
Verifying layouts                                                     
Testing /mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack/../h5dump/h5dum PASSED
Testing h5repack -l dset2:COMPA                                        PASSED
Verifying h5diff output h5repack_layout.h5 out-dset2_compa.h5repack_la PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l COMPA                                              PASSED
Verifying h5diff output h5repack_layout.h5 out-compa.h5repack_layout.h PASSED
Verifying layouts                                                     
Testing /mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack/../h5dump/h5dum PASSED
Testing h5repack -l dset_compact:CONTI                                 PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_compa_conti.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_compact:CHUNK=2x5                             PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_compa_chunk.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_compact:COMPA                                 PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_compa_compa.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_contiguous:COMPA                              PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_conti_compa.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_contiguous:CHUNK=3x6                          PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_conti_chunk.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_contiguous:CONTI                              PASSED
Verifying h5diff output h5repack_layout.h5 out-dset_conti_conti.h5repa PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_chunk:COMPA                                   PASSED
Verifying h5diff output h5repack_layout.h5 out-chunk_compa.h5repack_la PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_chunk:CONTI                                   PASSED
Verifying h5diff output h5repack_layout.h5 out-chunk_conti.h5repack_la PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l dset_chunk:CHUNK=18x13                             PASSED
Verifying h5diff output h5repack_layout.h5 out-chunk_18x13.h5repack_la PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l contig_small:COMPA                                 PASSED
Verifying h5diff output h5repack_layout2.h5 out-contig_small_compa.h5r PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l chunked_small_fixed:COMPA                          PASSED
Verifying h5diff output h5repack_layout2.h5 out-contig_small_fixed_com PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l chunk_unlimit1:CHUNK=100x300                       PASSED
Verifying h5diff output h5repack_layout3.h5 out-chunk2chunk.h5repack_l PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l chunk_unlimit1:CONTI                               PASSED
Verifying h5diff output h5repack_layout3.h5 out-chunk2conti.h5repack_l PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l chunk_unlimit1:COMPA                               PASSED
Verifying h5diff output h5repack_layout3.h5 out-chunk2compa.h5repack_l PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -f chunk_unlimit1:NONE                                PASSED
Verifying h5diff output h5repack_layout3.h5 out-error1.h5repack_layout PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -f chunk_unlimit2:NONE                                PASSED
Verifying h5diff output h5repack_layout3.h5 out-error2.h5repack_layout PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -f chunk_unlimit3:NONE                                PASSED
Verifying h5diff output h5repack_layout3.h5 out-error3.h5repack_layout PASSED
Verifying a dataset layout                                             PASSED
error4 h5repack_layout3.h5 -f NONE
Testing h5repack -f NONE                                               PASSED
Verifying h5diff output h5repack_layout3.h5 out-error4.h5repack_layout PASSED
Testing h5repack -l chunk_unlimit2:CONTI                               PASSED
Verifying h5diff output h5repack_layout3.h5 out-ckdim_biger.h5repack_l PASSED
Verifying a dataset layout                                             PASSED
Testing h5repack -l chunk_unlimit3:CONTI                               PASSED
Verifying h5diff output h5repack_layout3.h5 out-ckdim_smaller.h5repack PASSED
Verifying a dataset layout                                             PASSED
native_fill h5repack_fill.h5 -n
Testing h5repack -n                                                    PASSED
Verifying h5diff output h5repack_fill.h5 out-native_fill.h5repack_fill PASSED
native_attr h5repack_attr.h5 -n
Testing h5repack -n                                                    PASSED
Verifying h5diff output h5repack_attr.h5 out-native_attr.h5repack_attr PASSED
Testing h5repack --layout CHUNK=20x10 --filter GZIP=1 --minimum=10 --n PASSED
Verifying h5diff output h5repack_layout.h5 out-layout_long_switches.h5 PASSED
Verifying layouts                                                     
Testing /mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack/../h5dump/h5dum PASSED
Testing h5repack -l CHUNK=20x10 -f GZIP=1 -m 10 -n -L -c 8 -d 6 -s 8[: PASSED
Verifying h5diff output h5repack_layout.h5 out-layout_short_switches.h PASSED
Verifying layouts                                                     
Testing /mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack/../h5dump/h5dum PASSED
global_filters h5repack_layout.h5 --filter GZIP=1 --filter SHUF
Testing h5repack --filter GZIP=1 --filter SHUF                         PASSED
Verifying h5diff output h5repack_layout.h5 out-global_filters.h5repack PASSED
Testing h5repack -l CHUNK=20x10 -f GZIP=1 -m 10 -n -L -c 8 -d 6 -s 8[: PASSED
Verifying h5diff output h5repack_layout.h5 out-old_style_layout_short_ PASSED
add_userblock h5repack_objs.h5 -u ublock.bin -b 2048
Testing h5repack -u ublock.bin -b 2048                                 PASSED
Verifying h5diff output h5repack_objs.h5 out-add_userblock.h5repack_ob PASSED
add_alignment h5repack_objs.h5 -t 1 -a 1
Testing h5repack -t 1 -a 1                                             PASSED
Verifying h5diff output h5repack_objs.h5 out-add_alignment.h5repack_ob PASSED
upgrade_layout h5repack_layouto.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_layouto.h5 out-upgrade_layout.h5repac PASSED
gt_mallocsize h5repack_objs.h5 -f GZIP=1
Testing h5repack -f GZIP=1                                             PASSED
Verifying h5diff output h5repack_objs.h5 out-gt_mallocsize.h5repack_ob PASSED
committed_dt h5repack_named_dtypes.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_named_dtypes.h5 out-committed_dt.h5re PASSED
Testing h5repack                                                       PASSED
Verifying h5diff output tfamily%05d.h5 out-family.tfamily%05d.h5       PASSED
bug1814 h5repack_refs.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_refs.h5 out-bug1814.h5repack_refs.h5  PASSED
HDFFV-5932 h5repack_attr_refs.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5repack_attr_refs.h5 out-HDFFV-5932.h5repack_ PASSED
HDFFV-7840 h5diff_attr1.h5
Testing h5repack                                                       PASSED
Verifying h5diff output h5diff_attr1.h5 out-HDFFV-7840.h5diff_attr1.h5 PASSED
Testing h5repack -M 8192                                               PASSED
Verifying h5diff output h5repack_layout.h5 out-meta_short.h5repack_lay PASSED
Testing h5repack -M 8192                                               PASSED
Verifying h5diff output h5repack_layout.h5 out-meta_short.h5repack_lay PASSED
Verify the sizes of both output files (27280 vs 27488)                 PASSED
Testing h5repack --metadata_block_size=8192                            PASSED
Verifying h5diff output h5repack_layout.h5 out-meta_long.h5repack_layo PASSED
Testing h5repack --metadata_block_size=8192                            PASSED
Verifying h5diff output h5repack_layout.h5 out-meta_long.h5repack_layo PASSED
Verify the sizes of both output files (27280 vs 27488)                 PASSED
All h5repack tests passed.
3.64user 4.64system 0:07.26elapsed 114%CPU (0avgtext+0avgdata 11664maxresident)k
0inputs+18840outputs (0major+1441505minor)pagefaults 0swaps

Finished testing h5repack.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
===Serial tests in h5repack ended Mon May 14 21:12:26 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5repack'
Making check in h5jam
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5jam
  CCLD     h5unjam
  CCLD     tellub
  CCLD     h5jamgentest
  CCLD     getub
gmake -j 8  tellub h5jamgentest getub testh5jam.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `tellub' is up to date.
gmake[3]: `h5jamgentest' is up to date.
gmake[3]: `getub' is up to date.
gmake[3]: `testh5jam.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5jam begin Mon May 14 21:12:27 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing testh5jam.sh 
Finished testing testh5jam.sh 
============================
testh5jam.sh  Test Log
============================
Testing h5jam -h                                                       PASSED
Testing h5jam -i tall.h5 -u tall.h5 -o tall-tmp.h5                     PASSED
Testing h5jam -u u10.txt -i tall.h5 -o ta2.h5                          PASSED
Compare ta2.h5 to ./testfiles/tall.h5                                  PASSED
Testing h5jam -u u511.txt -i tall.h5 -o ta3.h5                         PASSED
Compare ta3.h5 to ./testfiles/tall.h5                                  PASSED
Testing h5jam -u u512.txt -i tall.h5 -o ta4.h5                         PASSED
Compare ta4.h5 to ./testfiles/tall.h5                                  PASSED
Testing h5jam -u u513.txt -i tall.h5 -o ta5.h5                         PASSED
Compare ta5.h5 to ./testfiles/tall.h5                                  PASSED
Testing jam -u u10.txt -i ta6.h5                                       PASSED
Compare ta6.h5 to ./testfiles/tall.h5                                  PASSED
Testing jam -u u511.txt -i ta7.h5                                      PASSED
Compare ta7.h5 to ./testfiles/tall.h5                                  PASSED
Testing jam -u u512.txt -i ta8.h5                                      PASSED
Compare ta8.h5 to ./testfiles/tall.h5                                  PASSED
Testing jam -u u513.txt -i ta9.h5                                      PASSED
Compare ta9.h5 to ./testfiles/tall.h5                                  PASSED
Testing h5jam -u u10.txt -i twithub.h5 -o tax2.h5                      PASSED
Compare tax2.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u511.txt -i twithub.h5 -o tax3.h5                     PASSED
Compare tax3.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u512.txt -i twithub.h5 -o tax4.h5                     PASSED
Compare tax4.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u513.txt -i twithub.h5 -o tax5.h5                     PASSED
Compare tax5.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u10.txt -i twithub513.h5 -o tax6.h5                   PASSED
Compare tax6.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u511.txt -i twithub513.h5 -o tax7.h5                  PASSED
Compare tax7.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u512.txt -i twithub513.h5 -o tax8.h5                  PASSED
Compare tax8.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u513.txt -i twithub513.h5 -o tax9.h5                  PASSED
Compare tax9.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u10.txt -i twithub.h5 -o taz2.h5 --clobber            PASSED
Compare taz2.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u511.txt -i twithub.h5 -o taz3.h5 --clobber           PASSED
Compare taz3.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u512.txt -i twithub.h5 -o taz4.h5 --clobber           PASSED
Compare taz4.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u513.txt -i twithub.h5 -o taz5.h5 --clobber           PASSED
Compare taz5.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u10.txt -i twithub513.h5 -o taz6.h5 --clobber         PASSED
Compare taz6.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u511.txt -i twithub513.h5 -o taz7.h5 --clobber        PASSED
Compare taz7.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u512.txt -i twithub513.h5 -o taz8.h5 --clobber        PASSED
Compare taz8.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -u u513.txt -i twithub513.h5 -o taz9.h5 --clobber        PASSED
Compare taz9.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u10.txt -i tay2.h5 --clobber                            PASSED
Compare tay2.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u511.txt -i tay3.h5 --clobber                           PASSED
Compare tay3.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u512.txt -i tay4.h5 --clobber                           PASSED
Compare tay4.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u513.txt -i tay5.h5 --clobber                           PASSED
Compare tay5.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u10.txt -i tay6.h5 --clobber                            PASSED
Compare tay6.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u511.txt -i tay7.h5 --clobber                           PASSED
Compare tay7.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u512.txt -i tay8.h5 --clobber                           PASSED
Compare tay8.h5 to ./testfiles/tall.h5                                 PASSED
Testing jam -u u513.txt -i tay9.h5 --clobber                           PASSED
Compare tay9.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5jam -h                                                       PASSED
Testing h5unjam -i tai1.h5 -u o10.txt -o taa1.h5                       PASSED
Compare taa1.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5unjam -i tai2.h5 -u o512.txt -o taa2.h5                      PASSED
Compare taa2.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5unjam -i tai3.h5 -o taa3.h5 > uofile                         PASSED
Compare taa3.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5unjam -i tai4.h5 -o taa4.h5 > uofile                         PASSED
Compare taa4.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5unjam -i taj2.h5 -o tac2.h5 --delete                         PASSED
Compare tac2.h5 to ./testfiles/tall.h5                                 PASSED
Testing h5unjam -i taj3.h5 -o tac3.h5 --delete                         PASSED
Compare tac3.h5 to ./testfiles/tall.h5                                 PASSED
All h5jam/h5unjam tests passed.
3.01user 4.61system 0:06.54elapsed 116%CPU (0avgtext+0avgdata 7316maxresident)k
0inputs+5448outputs (0major+1433222minor)pagefaults 0swaps

Finished testing testh5jam.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
===Serial tests in h5jam ended Mon May 14 21:12:33 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5jam'
Making check in h5copy
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5copy
  CCLD     h5copygentest
gmake -j 8  h5copygentest testh5copy.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5copygentest' is up to date.
gmake[3]: `testh5copy.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5copy begin Mon May 14 21:12:34 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5copygentest 
============================
Testing testh5copy.sh 
============================
 h5copygentest  Test Log
============================
0.05user 0.02system 0:00.12elapsed 66%CPU (0avgtext+0avgdata 6924maxresident)k
0inputs+184outputs (0major+9711minor)pagefaults 0swaps

Finished testing h5copygentest 
============================
Finished testing testh5copy.sh 
============================
testh5copy.sh  Test Log
============================
Test copying various forms of datasets
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/simple.out.h PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/simple.ou PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/chunk.out.h5 PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/chunk.out PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/compact.out. PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/compact.o PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/compound.out PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/compound. PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/compressed.o PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/compresse PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/named_vl.out PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/named_vl. PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/nested_vl.ou PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/nested_vl PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/dset_attr.ou PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/dset_attr PASSED
Test copying dataset within group in source file to root of destination
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/simple_top.o PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/simple_to PASSED
Test copying & renaming dataset
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/dsrename.out PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/dsrename. PASSED
Test copying empty, 'full' & 'nested' groups
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_empty.ou PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_empty PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_dsets.ou PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_dsets PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_nested.o PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_neste PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_attr.out PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_attr. PASSED
Test copying dataset within group in source file to group in destination
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/simple_groupTesting h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/simple_group PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/simple_gr PASSED
Test copying & renaming group
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_rename.o PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_renam PASSED
Test copying 'full' group hierarchy into group in destination file
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_dsets_reTesting h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/grp_dsets_re PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/grp_dsets PASSED
Test copying objects into group hier. that doesn't exist yet in destination file
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/A_B1_simple. PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/A_B1_simp PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/A_B2_simple2 PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/A_B2_simp PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/C_D_simple.o PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/C_D_simpl PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/E_F_grp_dset PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/E_F_grp_d PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/G_H_grp_nest PASSED
Verifying h5diff output ./testfiles/h5copytst.h5 ./testfiles/G_H_grp_n PASSED
Test copying object and region references
Testing h5copy -f ref -i ./testfiles/h5copy_ref.h5 -o ./testfiles/regi PASSED
Test copying external link directly without -f ext
Testing h5copy -v -i ./testfiles/h5copy_extlinks_src.h5 -o ./testfiles PASSED
Test copying external link directly with -f ext
Testing h5copy -f ext -i ./testfiles/h5copy_extlinks_src.h5 -o ./testf PASSED
Test copying dangling external link (no obj) directly without -f ext
Testing h5copy -v -i ./testfiles/h5copy_extlinks_src.h5 -o ./testfiles PASSED
Test copying dangling external link (no obj) directly with -f ext
Testing h5copy -f ext -i ./testfiles/h5copy_extlinks_src.h5 -o ./testf PASSED
Test copying dangling external link (no file) directly without -f ext
Testing h5copy -v -i ./testfiles/h5copy_extlinks_src.h5 -o ./testfiles PASSED
Test copying dangling external link (no file) directly with -f ext
Testing h5copy -f ext -i ./testfiles/h5copy_extlinks_src.h5 -o ./testf PASSED
Test copying a group contains external links without -f ext
Testing h5copy -v -i ./testfiles/h5copy_extlinks_src.h5 -o ./testfiles PASSED
Test copying a group contains external links with -f ext
Testing h5copy -f ext -i ./testfiles/h5copy_extlinks_src.h5 -o ./testf PASSED
Test copying object into group which doesn't exist, without -p
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/h5copy_misc1 PASSED
Verifying output files ./testfiles/h5copy_misc1.out ./testfiles/h5copy PASSED
Test copying objects to the same file 
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/samefile1.ouTesting h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/samefile1.ou PASSED
Verifying h5diff output ./testfiles/samefile1.out.h5 ./testfiles/samef PASSED
Testing h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/samefile2.ouTesting h5copy -i ./testfiles/h5copytst.h5 -o ./testfiles/samefile2.ou PASSED
Verifying h5diff output ./testfiles/samefile2.out.h5 ./testfiles/samef PASSED
All h5copy tests passed.
1.04user 1.45system 0:02.15elapsed 115%CPU (0avgtext+0avgdata 7300maxresident)k
0inputs+1992outputs (0major+445647minor)pagefaults 0swaps

Finished testing testh5copy.sh 
============================
============================
gmake[5]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
===Serial tests in h5copy ended Mon May 14 21:12:36 CDT 2018===
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
gmake[2]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5copy'
Making check in h5stat
gmake[2]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake[2]: warning: -jN forced in submake: disabling jobserver mode.
  CCLD     h5stat
  CCLD     h5stat_gentest
gmake -j 8  h5stat_gentest testh5stat.sh
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[3]: `h5stat_gentest' is up to date.
gmake[3]: `testh5stat.sh' is up to date.
gmake[3]: Leaving directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake -j 8  check-TESTS
gmake[3]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake[3]: warning: -jN forced in submake: disabling jobserver mode.
gmake[4]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake[4]: warning: -jN forced in submake: disabling jobserver mode.
===Serial tests in h5stat begin Mon May 14 21:12:36 CDT 2018===
gmake[5]: Entering directory `/mnt/wrk/lrknox/hdf5_hdf5/build/tools/h5stat'
gmake[5]: warning: -jN forced in submake: disabling jobserver mode.
============================
Testing  h5stat_gentest 
============================
Testing testh5stat.sh 
============================
 h5stat_gentest  Test Log
============================
1.17user 0.04system 0:01.27elapsed 96%CPU (0avgtext+0avgdata 17172maxresident)k
0inputs+12552outputs (0major+12044minor)pagefaults 0swaps

Finished testing h5stat_gentest 
============================
gmake[1]: *** [check-recursive] Hangup
gmake[5]: *** [testh5stat.sh.chkexe_] Hangup
make: *** [check-recursive] Hangup
gmake[4]: *** [build-check-s] Hangup
gmake[3]: *** [test] Hangup
gmake[2]: *** [check-am] Hangup
