Background:

Query objects are the foundation of the data analysis operations in HDF5 and
can be built up from simple components in a programmatic way to create complex
operations using Boolean operations. 

For more information/help, contact:
        Jerome Soumagne, Richard Warren, or Suren Byna [jsoumagne@hdfgroup.org, richard.warren@hdfgroup.org, or  sbyna@lbl.gov].

Instructions 1 and 2 below are to build the HDF5 Query and Indexing components on your own.

Some configuration parameters used in the instructions:

        H5_DIR                : directory of HDF5 source code
        H5_DIR/build          : directory to build HDF5 using CMake
      
1, Preparation
    
    1.1 Download the HDF5 branch

       > git clone https://bitbucket.hdfgroup.org/projects/HDFFV/repos/hdf5 -b feature/indexing H5_DIR
   
    1.2 Download the fastbit library (Version 2.0.3)
       Visit the LBNL fastbit sourceforge site: https://codeforge.lbl.gov/frs/?group_id=44
       Follow the instructions found in the README file to build and install.
        
    1.3 automake/autoconf may be needed, if there are any "configuration errors".

        > module load automake/1.15 
        > module load autoconf/2.69 

    1.4 Download the Berkeley DB library.
       libdb.so is often included with modern Linux distributions so a download may
       not be necessary.

       If necessary, the latest Berkeley DB sources are available from:
       https://www.oracle.com/database/technologies/related/berkeleydb-downloads.html
       Follow the instructions found in the README file to build and install.


2, Installation

    Note: "module unload darshan" before the following steps on the Cori system located at NERSC


    2.1 Compile and install the Fastbit library.
    2.2 Compile and install the Berkeley DB library.

    One Cori, the above two items might best be installed in the $HOME directory to avoid the
    necessity for requiring root privileges. 
    2.3 Compile HDF5
        > cd H5_DIR
	> mkdir build
	> cd build
	ccmake ..

	It will be necessary to know the installation directories for both libfastbit.so
	and libdb.so
	Turn OFF:  HDF5_BUILD_CPP_LIB
	Turn ON:   HDF5_ENABLE_DB_SUPPORT
	           HDF5_ENABLE_FASTBIT_SUPPORT
		   HDF5_ENABLE_PARALLEL

	On Cori, Cmake does not correctly set the -dynamic flag to build a shared library
	or an executable that links to a shared library.  The following flags will need
	to include "-dynamic":
		   CMAKE_C_FLAGS
		   CMAKE_EXE_LINKER_FLAGS
		   CMAKE_SHARED_LINKER_FLAGS
	
	Use the 't' option to toggle to the expanded directory to verify the library
	installation directories.

	Type 'c' to configure (this may be done multipe times)
	Type 'g' to generate the make files and exit.

	Complete the build of the HDF5 library using 'make'

3, Test

    >  'make test'
    will execute an extensive series of HDF5 tests.  This is an optional step
    but should probably be done to validate the HDF5 build.
    
    cd into the bin directory (subdirectory of build)
    Some simple tests of the Query and Indexing functionality can be tried:
    > ./query 10 5 2

    The format of the above test is:
       <query_test> [number-of-objects] [metadata plugin-id] [rawdata plugin-id]
       where ID values are:
       0 = none
       1 = dummy
       2 = fastbit
       3 = alacrity
       4 = dummy
       5 = db
       6 = mdhim

    We currently only support 0,2,4, and 5

    Please jump to 3.3 to see test with job batch script on NERSC machines.  

