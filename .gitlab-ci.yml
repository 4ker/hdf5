variables:
  SCHEDULER_PARAMETERS: "-P CSC419 -nnodes 1 -W 30"
  GIT_STRATEGY: clone

stages:
  # The 'build-nobatch-standard' stage uses the default build space (/root/* on the login node - not accessible on compute nodes)
  - build-nobatch-standard
  # The 'test' stage copies the binary created from "build-nobatch-standard" to /ccsopen/home/<uid>.
  # Otherwise the binary is not found on compute nodes during a batch run.
  - test



#### Standard Build and Test Stages ####
build-nobatch-standard:
  stage: build-nobatch-standard
  before_script:
    - module avail mpi
    - module avail cmake
    - module load cmake
    - echo "-- modules used for this GitLab run are"
    - module list
    - echo "------------------------------------------------"

  script:
    - echo "This is the building with nobatch"
    - ls
    
    - echo "this is a test"
    - jsrun env | grep SLURM_JOB_NAME
    - whoami
    - echo "HOSTNAME=$HOSTNAME"

    - echo "Check type of available disk drives\n"
    - df -T

    - export CC=mpicc
    - export FC=mpif90        
    - export CXX=mpicxx
    - uname -a

    - CI_PROJ_DIR=${PWD}
    - echo "CI_PROJ_DIR="${CI_PROJ_DIR}
# running 1 ctest process to build HDF5 without tools or examples and skip running tests.
    - HDF5_VER=`bin/h5vers`
    - ln -s . hdf5-$HDF5_VER
    - ln -s config/cmake/scripts/CTestScript.cmake .
    - ln -s config/cmake/scripts/HDF5config.cmake .
    - ln -s config/cmake/scripts/HDF5options.cmake .
    - echo 'set (LOCAL_SKIP_TEST "TRUE")' >> config/cmake/scripts/HDF5options.cmake
    - echo 'set (MAX_PROC_COUNT 8)' >> config/cmake/scripts/HDF5options.cmake
    - echo 'set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF5_BUILD_TOOLS:BOOL=OFF")' >> config/cmake/scripts/HDF5options.cmake
    - echo 'set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DHDF5_BUILD_EXAMPLES:BOOL=OFF")' >> config/cmake/scripts/HDF5options.cmake
    - echo 'set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DMPIEXEC_NUMPROC_FLAG:STRING=-n")' >> config/cmake/scripts/HDF5options.cmake
    - echo 'set (ADD_BUILD_OPTIONS "${ADD_BUILD_OPTIONS} -DMPIEXEC_MAX_NUMPROCS:STRING=6")' >> config/cmake/scripts/HDF5options.cmake
    - SKIP_TESTS="-E '"
    - SKIP_TESTS=$SKIP_TESTS"H5TEST-btree2"
    - SKIP_TESTS=$SKIP_TESTS"|H5TEST-cache"
    - SKIP_TESTS=$SKIP_TESTS"|H5TEST-fheap"
    - SKIP_TESTS=$SKIP_TESTS"|H5TEST-objcopy"
    - SKIP_TESTS=$SKIP_TESTS"'"
    - SKIP_TESTS2="-E '"
    - SKIP_TESTS2=$SKIP_TESTS2"H5TEST-earray"
    - SKIP_TESTS2=$SKIP_TESTS2"|H5TEST-set_extent"
    - SKIP_TESTS2=$SKIP_TESTS2"|H5TEST-testhdf5-base"
    - SKIP_TESTS2=$SKIP_TESTS2"'"
    - ctest -S HDF5config.cmake,SITE_BUILDNAME_SUFFIX="1.13.0-ascent",BUILD_GENERATOR=Unix,LOCAL_SUBMIT=true ${SKIP_TESTS} ${SKIP_TESTS2} -C Release -VV --timeout 1800
#      look at the dirs to see how the build worked
    - echo $PWD
#   - cd ..
#   - echo $PWD


  artifacts:
    paths:
#     - zlib-1.2.11/
#     - hdf5-1.10.5/

  tags:
    - nobatch
